<?xml version="1.0" encoding="UTF-8"?>

<Values version="2.0">
  <value name="node_type">interface</value>
  <value name="node_nsName">wx.log.services</value>
  <value name="is_public">false</value>
  <value name="shared">Ci8vIFdoZXRoZXIgY29uZmlndXJlKCkgaGFzIGJlZW4gcnVuCnByaXZhdGUgc3RhdGljIGJvb2xl
YW4gY29uZmlndXJlZCA9IGZhbHNlOyAKCi8vIExvZ2dlciBjb250ZXh0IGZvciBhbGwgV3hMb2dn
ZXIgbG9nZ2luZwpwcml2YXRlIHN0YXRpYyBMb2dnZXJDb250ZXh0IGNvbnRleHQgPSBuZXcgTG9n
Z2VyQ29udGV4dCgpOwoKLy8gU3RvcmVzIHRoZSByb290IGNvbnRleHQgSUQgaW4gdGhyZWFkIGxv
Y2FsIHN0b3JhZ2UKcHJpdmF0ZSBzdGF0aWMgVGhyZWFkTG9jYWw8U3RyaW5nPiBsYXN0Um9vdENv
bnRleHRJRCA9IG5ldyBUaHJlYWRMb2NhbDxTdHJpbmc+KCk7IAoKcHVibGljIGVudW0gTGV2ZWwg
eyBFUlJPUiwgV0FSTiwgSU5GTywgREVCVUcsIFRSQUNFIH07CnB1YmxpYyBzdGF0aWMgZmluYWwg
U3RyaW5nIERFRkFVTFRfTEVWRUwgPSAiSU5GTyI7Cgpwcml2YXRlIHN0YXRpYyBTdHJpbmcgc3Vi
c3RpdHV0ZVZhcmlhYmxlcyhTdHJpbmcgbWVzc2FnZVRlbXBsYXRlKSB7CglQYXR0ZXJuIHZhclBh
dHRlcm4gPSBQYXR0ZXJuLmNvbXBpbGUoIlxcJFxceyhbYS16QS1aMC05Xy4kXSspXFx9Iik7CglN
YXRjaGVyIG0gPSB2YXJQYXR0ZXJuLm1hdGNoZXIobWVzc2FnZVRlbXBsYXRlKTsKCVN0cmluZ0J1
ZmZlciBzYiA9IG5ldyBTdHJpbmdCdWZmZXIoKTsKCXdoaWxlIChtLmZpbmQoKSkgewoJCS8vU3Ry
aW5nIG1kY0tleSA9IG0uZ3JvdXAoKTsKCQlTdHJpbmcgbWRjS2V5ID0gbS5ncm91cCgxKTsKCQlT
dHJpbmcgbWRjVmFsID0gTURDLmdldChtZGNLZXkpOwoJCWlmIChtZGNWYWwgIT0gbnVsbCAmJiAh
bWRjVmFsLmlzRW1wdHkoKSkgewoJCQltLmFwcGVuZFJlcGxhY2VtZW50KHNiLCBNYXRjaGVyLnF1
b3RlUmVwbGFjZW1lbnQobWRjVmFsKSk7CgkJfQoJfQoJbS5hcHBlbmRUYWlsKHNiKTsKCXJldHVy
biBzYi50b1N0cmluZygpOwp9Cgpwcml2YXRlIHN0YXRpYyBSZXNvdXJjZUJ1bmRsZSBnZXRSZXNv
dXJjZUJ1bmRsZSgpIHsKCS8vIEdldCAocGFyZW50KSBzZXJ2aWNlIHRoYXQgbWFkZSB0aGUgbG9n
IHN0YXRlbWVudAoJTlNTZXJ2aWNlIHBhcmVudCA9IFNlcnZpY2UuZ2V0Q2FsbGluZ1NlcnZpY2Uo
KTsKCWlmIChwYXJlbnQgPT0gbnVsbCkgewoJCXBhcmVudCA9IFNlcnZpY2UuZ2V0U2VydmljZUVu
dHJ5KCk7Cgl9CgkKCS8vIEdldCB0aGF0IHBhY2thZ2UgY2xhc3MgbG9hZGVyIG9mIHRoZSBjYWxs
aW5nIHNlcnZpY2UKCVN0cmluZyBwYXJlbnRQYWNrYWdlID0gcGFyZW50LmdldFBhY2thZ2UoKS5n
ZXROYW1lKCk7CglDbGFzc0xvYWRlciBsb2FkZXIgPSBTZXJ2ZXJDbGFzc0xvYWRlci5nZXRQYWNr
YWdlTG9hZGVyKHBhcmVudFBhY2thZ2UpOwkJCgkKCS8vIExvYWQgbWVzc2FnZSByZXNvdXJjZSBi
dW5kbGUgZnJvbSB0aGF0IHBhY2thZ2UncyBjbGFzcyBsb2FkZXIKCS8vIFdpbGwgc2VhcmNoIGlu
IHRoZSBmb2xsb3dpbmcgb3JkZXI6CgkvLyAtIHJlc291cmNlcy9tZXNzYWdlc19lbl9VUy5wcm9w
ZXJ0aWVzCgkvLyAtIHJlc291cmNlcy9tZXNzYWdlc19lbi5wcm9wZXJ0aWVzCgkvLyAtIHJlc291
cmNlcy9tZXNzYWdlcy5wcm9wZXJ0aWVzCglSZXNvdXJjZUJ1bmRsZSBtZXNzYWdlQnVuZGxlID0g
UmVzb3VyY2VCdW5kbGUuZ2V0QnVuZGxlKCJtZXNzYWdlcyIsIExvY2FsZS5nZXREZWZhdWx0KCks
IGxvYWRlcik7CgkKCXJldHVybiBtZXNzYWdlQnVuZGxlOwp9CgoKCgpwdWJsaWMgc3RhdGljIFN0
cmluZyBnZXRKYXJCdW5kbGVWZXJzaW9uKEZpbGUgamFyKSB7CglTdHJpbmcgdmVyc2lvbiA9ICIi
OwoJCgl0cnkgewoJICAgLy8gR2V0IGphciBtYW5pZmVzdAoJICAgSmFySW5wdXRTdHJlYW0gamFy
U3RyZWFtID0gbmV3IEphcklucHV0U3RyZWFtKG5ldyBGaWxlSW5wdXRTdHJlYW0oamFyKSk7Cgkg
ICBNYW5pZmVzdCBtYW5pZmVzdCA9IGphclN0cmVhbS5nZXRNYW5pZmVzdCgpOwoKCSAgIC8vIEV4
dHJhY3QgdmVyc2lvbiBhdHRyaWJ1dGUgZnJvbSB0aGUgbWFuaWZlc3QKCSAgIEF0dHJpYnV0ZXMg
bWFpbkF0dHJpYnMgPSBtYW5pZmVzdC5nZXRNYWluQXR0cmlidXRlcygpOwoJICAgdmVyc2lvbiA9
IG1haW5BdHRyaWJzLmdldFZhbHVlKCJCdW5kbGUtVmVyc2lvbiIpOwoKCX0gY2F0Y2ggKEV4Y2Vw
dGlvbiBlKSB7IH0KCXJldHVybiB2ZXJzaW9uOwp9CgoKLyoqCiAqIFtSZS1dbG9hZCBjb25maWd1
cmF0aW9uCiAqLwkKcHJpdmF0ZSBzdGF0aWMgdm9pZCBjb25maWd1cmUoKSB7CgkKCXRyeSB7Cgkg
IGlmIChjb250ZXh0ID09IG51bGwpIHsKCQkgIGNvbnRleHQgPSBuZXcgTG9nZ2VyQ29udGV4dCgp
OwoJICB9CgoJICBTdHJpbmcgc2xmNGpQYXRoID0gTURDLmNsYXNzLmdldFByb3RlY3Rpb25Eb21h
aW4oKS5nZXRDb2RlU291cmNlKCkuZ2V0TG9jYXRpb24oKS5nZXRQYXRoKCk7CgkgIFN0cmluZyBz
bGY0alZlcnNpb24gPSBnZXRKYXJCdW5kbGVWZXJzaW9uKG5ldyBqYXZhLmlvLkZpbGUoc2xmNGpQ
YXRoKSk7CgkgIFN0cmluZyBsb2diYWNrUGF0aCA9IExvZ2dlckNvbnRleHQuY2xhc3MuZ2V0Q2xh
c3NMb2FkZXIoKS50b1N0cmluZygpOwoJICAKCSAgY29tLndtLnV0aWwuSm91cm5hbExvZ2dlci5s
b2coCgkJCSAgY29tLndtLnV0aWwuSm91cm5hbExvZ2dlci5JTkZPLAogICAgICAgICAgICAgIGNv
bS53bS51dGlsLkpvdXJuYWxMb2dnZXIuRkFDX0ZMT1dfU1ZDLAogICAgICAgICAgICAgIGNvbS53
bS51dGlsLkpvdXJuYWxMb2dnZXIuSU5GTywKCQkJICAiV3hMb2c6IFVzaW5nIHNsZjRqLWFwaSB2
IiArIHNsZjRqVmVyc2lvbiArICIgZnJvbSAiICsgc2xmNGpQYXRoKTsJCSAgCgkgIAoJCQkgIGNv
bS53bS51dGlsLkpvdXJuYWxMb2dnZXIubG9nKAoJCQkJCSAgY29tLndtLnV0aWwuSm91cm5hbExv
Z2dlci5JTkZPLAoJCSAgICAgICAgICAgICAgY29tLndtLnV0aWwuSm91cm5hbExvZ2dlci5GQUNf
RkxPV19TVkMsCgkJICAgICAgICAgICAgICBjb20ud20udXRpbC5Kb3VybmFsTG9nZ2VyLklORk8s
CgkJCQkJICAiV3hMb2c6IFVzaW5nIExvZ2JhY2sgZnJvbSAiICsgbG9nYmFja1BhdGgpOwoJICAK
CSAgSm9yYW5Db25maWd1cmF0b3IgY29uZmlndXJhdG9yID0gbmV3IEpvcmFuQ29uZmlndXJhdG9y
KCk7CgkgIGNvbmZpZ3VyYXRvci5zZXRDb250ZXh0KGNvbnRleHQpOwoJCgkgIGNvbnRleHQucmVz
ZXQoKTsgCgogICAgICAvLyBSZWFkIGV4dGVuZGVkIHNldHRpbmcgdG8gZGV0ZXJtaW5lIGNvbmZp
ZyBmaWxlCgkgIFN0cmluZyBjb25maWdGaWxlTmFtZSA9IFN5c3RlbS5nZXRQcm9wZXJ0eSgid2F0
dC53eC5sb2cuY29uZmlnIik7CgoJICAvLyBJZiBub25lIGV4aXN0cywgdGhlbiBsZXQncyBjcmVh
dGUgYSBkZWZhdWx0IG9uZQoJICBpZiAoY29uZmlnRmlsZU5hbWUgPT0gbnVsbCB8fCBjb25maWdG
aWxlTmFtZS5pc0VtcHR5KCkpIHsKCQkgIGNvbmZpZ0ZpbGVOYW1lID0gInBhY2thZ2VzL1d4TG9n
L2NvbmZpZy93eGxvZ19kZWZhdWx0LnhtbCI7CgkJICBTeXN0ZW0uZ2V0UHJvcGVydGllcygpLnB1
dCgid2F0dC53eC5sb2cuY29uZmlnIiwgY29uZmlnRmlsZU5hbWUpOwoJCSAgY29tLndtLnV0aWwu
Sm91cm5hbExvZ2dlci5sb2coCgkJCQkgIGNvbS53bS51dGlsLkpvdXJuYWxMb2dnZXIuSU5GTywK
CSAgICAgICAgICAgICAgY29tLndtLnV0aWwuSm91cm5hbExvZ2dlci5GQUNfRkxPV19TVkMsCgkg
ICAgICAgICAgICAgIGNvbS53bS51dGlsLkpvdXJuYWxMb2dnZXIuSU5GTywKCQkJCSAgIld4TG9n
OiBVc2luZyBkZWZhdWx0IGxvZ2dlciBjb25maWd1cmF0aW9uIik7CgkgIH0gIAoJCSAgCgkgIEZp
bGUgY29uZmlnRmlsZSA9IG5ldyBGaWxlKGNvbmZpZ0ZpbGVOYW1lKTsKCSAgCgkgIGlmICghY29u
ZmlnRmlsZS5leGlzdHMoKSkgewoJCSAgLy9sb2cgZXJyb3IgdG8gc2VydmVyIGxvZwoJCSAgY29t
LndtLnV0aWwuSm91cm5hbExvZ2dlci5sb2coCgkJCQkgIGNvbS53bS51dGlsLkpvdXJuYWxMb2dn
ZXIuSU5GTywKCSAgICAgICAgICAgICAgY29tLndtLnV0aWwuSm91cm5hbExvZ2dlci5GQUNfRkxP
V19TVkMsCgkgICAgICAgICAgICAgIGNvbS53bS51dGlsLkpvdXJuYWxMb2dnZXIuSU5GTywKCQkJ
CSAgIld4TG9nOiBDYW4ndCBmaW5kICIgKyBjb25maWdGaWxlTmFtZSArICIsIHVzaW5nIGRlZmF1
bHQiKTsKCQkgIGNvbmZpZ0ZpbGVOYW1lID0gInBhY2thZ2VzL1d4TG9nL2NvbmZpZy93eGxvZ19k
ZWZhdWx0LnhtbCI7CgkJICBjb25maWdGaWxlID0gbmV3IEZpbGUoY29uZmlnRmlsZU5hbWUpOwoJ
ICB9CgkgIAoJICBjb20ud20udXRpbC5Kb3VybmFsTG9nZ2VyLmxvZygKCQkJICBjb20ud20udXRp
bC5Kb3VybmFsTG9nZ2VyLklORk8sCiAgICAgICAgICAgICAgY29tLndtLnV0aWwuSm91cm5hbExv
Z2dlci5GQUNfRkxPV19TVkMsCiAgICAgICAgICAgICAgY29tLndtLnV0aWwuSm91cm5hbExvZ2dl
ci5JTkZPLAogICAgICAgICAgICAgICJXeExvZzogTG9hZGluZyBsb2dnZXIgY29uZmlndXJhdGlv
bjogIitjb25maWdGaWxlTmFtZSArICI6XG4iICsgY29udGV4dC5nZXRMb2dnZXJMaXN0KCkudG9T
dHJpbmcoKSk7CgoJICAvLyBMb2FkIHRoZSBjb25maWd1cmF0aW9uCgkgIGNvbmZpZ3VyYXRvci5k
b0NvbmZpZ3VyZShjb25maWdGaWxlKTsKCSAgY29uZmlndXJlZCA9IHRydWU7CgkgIAoJfSBjYXRj
aCAoSm9yYW5FeGNlcHRpb24gamUpIHsKCSAgIGplLnByaW50U3RhY2tUcmFjZSgpOwoJICAgCgl9
IGNhdGNoIChFeGNlcHRpb24gZSkgewoJCWNvbS53bS51dGlsLkpvdXJuYWxMb2dnZXIubG9nKAoJ
CQkJICBjb20ud20udXRpbC5Kb3VybmFsTG9nZ2VyLklORk8sCgkgICAgICAgICAgICAgIGNvbS53
bS51dGlsLkpvdXJuYWxMb2dnZXIuRkFDX0ZMT1dfU1ZDLAoJICAgICAgICAgICAgICBjb20ud20u
dXRpbC5Kb3VybmFsTG9nZ2VyLkVSUk9SLAoJICAgICAgICAgICAgICAiV3hMb2c6ICIgKyBlLnRv
U3RyaW5nKCkpOwoKCQllLnByaW50U3RhY2tUcmFjZSgpOwoJfQoJCglTdGF0dXNQcmludGVyLnBy
aW50SW5DYXNlT2ZFcnJvcnNPcldhcm5pbmdzKGNvbnRleHQpOwoJCn0KCgoKLyoqCiAqIENvbmRp
dGlvbmFsbHkgY2xlYXIgdGhlIE1EQyBpZiB0aGlzIHRocmVhZCB3YXMgcmVjeWNsZWQgaW4gdGhl
IHNlcnZpY2UKICogdGhyZWFkIHBvb2wuCiAqLwpwdWJsaWMgc3RhdGljIHZvaWQgY29uZGl0aW9u
YWxseUNsZWFyTURDKCkgewoJCgkvLyBJZiByb290IGNvbnRleHQgSUQgaGFzIGNoYW5nZWQKCVN0
cmluZyByb290Q29udGV4dElEID0gU2VydmVyQVBJLmdldEF1ZGl0Q29udGV4dCgpWzBdOwoJaWYg
KCFyb290Q29udGV4dElELmVxdWFscyhsYXN0Um9vdENvbnRleHRJRC5nZXQoKSkpIHsgCgkJTURD
LmNsZWFyKCk7Cgl9CgkKCS8vIFVwZGF0ZSB0aHJlYWQgbG9jYWwgc3RvcmFnZSB3aXRoIHRoZSBp
bml0aWFsLCBvciB1cGRhdGVkIHJvb3QgY29udGV4dCBJRAoJbGFzdFJvb3RDb250ZXh0SUQuc2V0
KHJvb3RDb250ZXh0SUQpOwoJCgkvLyBBZGQgaW1wbGljaXQgbWV0YWRhdGEgdG8gTURDCglhZGRJ
bXBsaWNpdE1ldGFkYXRhKCk7Cn0KCgovKioKICogUHV0IGEgbGlzdCBvZiBlbnRyaWVzIGludG8g
dGhlIE1EQwogKi8KcHJpdmF0ZSBzdGF0aWMgdm9pZCBwdXRNREMoSURhdGEgZW50cmllcykgewoJ
CglpZiAoZW50cmllcyAhPSBudWxsKSB7CgkJSURhdGFDdXJzb3IgZW50cmllc0N1cnNvciA9IGVu
dHJpZXMuZ2V0Q3Vyc29yKCk7CgkJd2hpbGUgKGVudHJpZXNDdXJzb3IubmV4dCgpKSB7CgkJCVN0
cmluZyBlbnRyeUtleSA9IGVudHJpZXNDdXJzb3IuZ2V0S2V5KCk7CgkJCVN0cmluZyBlbnRyeVZh
bHVlID0gKFN0cmluZyllbnRyaWVzQ3Vyc29yLmdldFZhbHVlKCk7CgkJCWlmIChlbnRyeUtleSAh
PSBudWxsICYmIGVudHJ5VmFsdWUgIT0gbnVsbCkgewoJCQkJTURDLnB1dChlbnRyeUtleSwgZW50
cnlWYWx1ZSk7CgkJCX0KCQl9Cgl9Cn0KCgovKioKICogUmV0dXJuIGEgbGlzdCBvZiBlbnRyaWVz
IGZyb20gdGhlIE1EQwogKi8KcHJpdmF0ZSBzdGF0aWMgSURhdGEgZ2V0TURDKFN0cmluZ1tdIGVu
dHJpZXMpIHsKCglJRGF0YSBnb3RFbnRyaWVzID0gSURhdGFGYWN0b3J5LmNyZWF0ZSgpOwoJSURh
dGFDdXJzb3IgZ290RW50cmllc0N1cnNvciA9IGdvdEVudHJpZXMuZ2V0Q3Vyc29yKCk7CglpZiAo
ZW50cmllcyAhPSBudWxsICYmIGVudHJpZXMubGVuZ3RoID4gMCkgewoJCWZvciAoU3RyaW5nIGVu
dHJ5IDogZW50cmllcykgewoJCQlJRGF0YVV0aWwucHV0KGdvdEVudHJpZXNDdXJzb3IsIGVudHJ5
LCBNREMuZ2V0KGVudHJ5KSk7CgkJfQoJfQoJcmV0dXJuIGdvdEVudHJpZXM7Cn0KCgovKioKICog
UmVtb3ZlIGEgbGlzdCBvZiBlbnRyaWVzIGZyb20gdGhlIE1EQyAKICogCiAqIEBwYXJhbSBlbnRy
aWVzIGFuIGFycmF5IG9mIE1EQyBrZXkgbmFtZXMKICovCnByaXZhdGUgc3RhdGljIHZvaWQgcmVt
b3ZlTURDKFN0cmluZ1tdIGVudHJpZXMpIHsKCQoJaWYgKGVudHJpZXMgIT0gbnVsbCAmJiBlbnRy
aWVzLmxlbmd0aCA+IDApIHsKCQlmb3IgKFN0cmluZyBlbnRyeSA6IGVudHJpZXMpIHsKCQkJTURD
LnJlbW92ZShlbnRyeSk7CgkJfQoJfQp9CgoKLyoqCiAqIFJlbW92ZSBhIGxpc3Qgb2YgZW50cmll
cyBmcm9tIHRoZSBNREMKICogCiAqIEBwYXJhbSBlbnRyaWVzIGFuIGRvY3VtZW50IG9mIE1EQyBl
bnRyaWVzIChvbmx5IHRoZSBrZXkgbmFtZSBpcyB1c2VkIHRvIHJlbW92ZSkKICovCnByaXZhdGUg
c3RhdGljIHZvaWQgcmVtb3ZlTURDKElEYXRhIGVudHJpZXMpIHsKCQoJaWYgKGVudHJpZXMgIT0g
bnVsbCkgewoJCUlEYXRhQ3Vyc29yIGVudHJpZXNDdXJzb3IgPSBlbnRyaWVzLmdldEN1cnNvcigp
OwoJCXdoaWxlIChlbnRyaWVzQ3Vyc29yLm5leHQoKSkgewoJCQlTdHJpbmcgZW50cnlLZXkgPSBl
bnRyaWVzQ3Vyc29yLmdldEtleSgpOwoJCQlNREMucmVtb3ZlKGVudHJ5S2V5KTsKCQl9Cgl9Cn0K
CgovKioKICogQ2xlYXIgdGhlIGVudGlyZSBNREMKICovCnByaXZhdGUgc3RhdGljIHZvaWQgY2xl
YXJNREMoKSB7CglNREMuY2xlYXIoKTsKfQoKCi8qKgogKiBBZGRzIGltcGxpY2l0IG1ldGFkYXRh
IHRvIE1EQy4KICogCiAqIFRoZSBmb2xsb3dpbmcgZmllbGRzIGFyZSBhZGRlZDoKICogICBwYWNr
YWdlCiAqICAgc2VydmljZQogKiAgIGhvc3QKICogICB1c2VyCiAqICAgc3NuaWQKICogCiAqLwpw
cml2YXRlIHN0YXRpYyB2b2lkIGFkZEltcGxpY2l0TWV0YWRhdGEoKSB7CQoKCS8vIENhbGxpbmcg
c2VydmljZSBuYW1lCgkvLwoJLy8gTm90ZTogdGhpcyBpcyB0aGUgcGFyZW50IHNlcnZpY2UgdGhh
dCBpbnZva2VkIHRoZSBsb2cgc2VydmljZS4KCS8vIElmIHRoZXJlIGlzIG5vIHBhcmVudCBzZXJ2
aWNlLCB0aGVuIHRoZSBsb2cgc2VydmljZSB3YXMgCgkvLyBpbnZva2VkIGRpcmVjdGx5IChlZy4g
dmlhIGFkbWluIGd1aSBvciBkZXNpZ25lciksIHNvIHVzZQoJLy8gdGhlIGxvZyBzZXJ2aWNlIGl0
c2VsZiBhcyB0aGUgY2FsbGluZyBzZXJ2aWNlCglOU1NlcnZpY2UgcGFyZW50ID0gU2VydmljZS5n
ZXRDYWxsaW5nU2VydmljZSgpOwoJaWYgKHBhcmVudCA9PSBudWxsKSB7CgkJcGFyZW50ID0gU2Vy
dmljZS5nZXRTZXJ2aWNlRW50cnkoKTsKCX0JCQoJTURDLnB1dCgic2VydmljZSIsIHBhcmVudC50
b1N0cmluZygpKTsKCgkvLyBQYWNrYWdlIG5hbWUKCU1EQy5wdXQoInBhY2thZ2UiLCBwYXJlbnQu
Z2V0UGFja2FnZSgpLmdldE5hbWUoKSk7CgkKCS8vIEhvc3RuYW1lCglTdHJpbmcgaG9zdCA9IG51
bGw7Cgl0cnkgewoJCWhvc3QgPSBJbmV0QWRkcmVzcy5nZXRMb2NhbEhvc3QoKS5nZXRIb3N0TmFt
ZSgpOwoJCU1EQy5wdXQoImhvc3QiLCBob3N0KTsKCX0gY2F0Y2ggKFVua25vd25Ib3N0RXhjZXB0
aW9uIGUpIHsKCQkvLyBUT0RPIEF1dG8tZ2VuZXJhdGVkIGNhdGNoIGJsb2NrCgl9CgkKCS8vIFVz
ZXIKCU1EQy5wdXQoInVzZXIiLCBTZXJ2aWNlLmdldFVzZXIoKS50b1N0cmluZygpKTsKCQoJLy8g
U2Vzc2lvbgoJTURDLnB1dCgic3NuaWQiLCBTZXJ2aWNlLmdldFNlc3Npb24oKS5nZXRTZXNzaW9u
SUQoKSk7CgoJLy8gQ3VycmVudCBhbmQgUm9vdCBDb250ZXh0IElEcwoJU3RyaW5nW10gY29udGV4
dElEcyA9IFNlcnZlckFQSS5nZXRBdWRpdENvbnRleHQoKTsKCU1EQy5wdXQoInJvb3RDb250ZXh0
SUQiLCBjb250ZXh0SURzWzBdKTsKCS8vIGxlbmd0aC0yIGJlY2F1c2Ugd2Ugd2FudCB0aGUgY3Vy
cmVudENvbnRleHRJRCBvZiB0aGUgc2VydmljZQoJLy8gd2hpY2ggaXMgaW52b2tpbmcgdGhlIGxv
ZyBzZXJ2aWNlIChub3QgdGhlIGNvbnRleHQgSUQgb2YgdGhlIAoJLy8gbG9nIHNlcnZpY2UgaW52
b2NhdGlvbiBpdHNlbGYpCglNREMucHV0KCJjdXJyZW50Q29udGV4dElEIiwgY29udGV4dElEc1tj
b250ZXh0SURzLmxlbmd0aC0yXSk7CgkKfQoKCi8qKgogKiBMb2cgYSBsb2cgbWVzc2FnZQogKiAK
ICogVGhpcyBpcyB0aGUgZnVuZGFtZW50YWwgbG9nZ2luZyBtZXRob2QuIEFsbCBsb2coKSBjYWxs
cyBsZWFkIGhlcmUuCiAqIAogKiBAcGFyYW0gbG9nZ2VyIC0gaWYgbnVsbCB0aGVuIGl0IGRldGVy
bWluZXMgdGhlIGN1cnJlbnQgc2VydmljZSBuYW1lCiAqIEBwYXJhbSBtZXNzYWdlIC0gdGhlIGxv
ZyBtZXNzYWdlIHRvIGxvZwogKiBAcGFyYW0gbGV2ZWxTdHJpbmcgLSBFUlJPUiwgV0FSTiwgSU5G
TywgREVCVUcsIG9yIFRSQUNFCiAqIEBwYXJhbSBpbmhlcml0TURDRnJvbVByZXZpb3VzSW52b2tl
IC0gd2hldGhlciBvciBub3QgdG8gaW5oZXJpdCB0aGUgTURDIGZyb20gYSByZWN5Y2xlZCB0aHJl
YWQuCiAqLwpwdWJsaWMgc3RhdGljIHZvaWQgbG9nKFN0cmluZyBsb2dnZXJOYW1lLCBTdHJpbmcg
bWVzc2FnZSwgTGV2ZWwgbGV2ZWwpIHsKCgkvLyBFbnN1cmUgY29uZmlndXJhdGlvbiBpcyBsb2Fk
ZWQKCWlmICghY29uZmlndXJlZCkgewoJCWNvbmZpZ3VyZSgpOwoJfQoJCgkvLyBJZiBsZXZlbCBp
cyBlbXB0eSB0aGVuIGRlZmF1bHQgaXQgdG8gSU5GTwoJaWYgKGxldmVsID09IG51bGwpIHsKCQls
ZXZlbCA9IExldmVsLklORk87Cgl9CgkKCS8vIEdldCBzZXJ2aWNlIHRoYXQgbWFkZSB0aGUgbG9n
IHN0YXRlbWVudAoJTlNTZXJ2aWNlIHBhcmVudCA9IFNlcnZpY2UuZ2V0Q2FsbGluZ1NlcnZpY2Uo
KTsKCWlmIChwYXJlbnQgPT0gbnVsbCkgewoJCXBhcmVudCA9IFNlcnZpY2UuZ2V0U2VydmljZUVu
dHJ5KCk7Cgl9CglTdHJpbmcgcGFyZW50UGFja2FnZSA9IHBhcmVudC5nZXRQYWNrYWdlKCkuZ2V0
TmFtZSgpOwoJCgkvLyBHZXQgZGVmYXVsdCBsb2dnZXIgbmFtZSAoYmFzZWQgb24gc2VydmljZSBu
YW1lKSBpZiBub25lCgkvLyB3YXMgcHJvdmlkZWQKCWlmIChsb2dnZXJOYW1lID09IG51bGwgfHwg
bG9nZ2VyTmFtZS5pc0VtcHR5KCkpIHsKCQkvLyBNYWtlIGRvdC1kZWxpbWl0ZWQgbG9nZ2VyIG5h
bWUgKGVnLiBwYWNrYWdlLmZvbGRlci5zdWJmb2xkZXIuc2VydmljZSkKCQlsb2dnZXJOYW1lID0g
cGFyZW50LmdldFBhY2thZ2UoKS5nZXROYW1lKCkgKyAiLiIgKyBwYXJlbnQudG9TdHJpbmcoKS5y
ZXBsYWNlKCc6JywgJy4nKTsKCX0KCQoJLy8gQ2F0Y2gtYWxsIC0gaWYgZm9yIHNvbWUgcmVhc29u
IGxvZ2dlciBpcyBzdGlsbCBudWxsLCBtYWtlIGl0ICJudWxsIgoJLy8gTm90IHN1cmUgdGhpcyB3
aWxsIGV2ZXIgaGFwcGVuLCBidXQgaWYgc28sIHNldHRpbmcgaXQgdG8gdGhlIHN0cmluZwoJLy8g
Im51bGwiIHdpbGwgYXQgbGVhc3QgZW5zdXJlIHRoZSBtZXNzYWdlIGdldHMgd3JpdHRlbiB0byBh
IGxvZyBmaWxlCgkvLyByYXRoZXIgdGhhbiBqdXN0IGRpc2FwcGVhcmluZyBzaWxlbnRseS4KCWlm
IChsb2dnZXJOYW1lID09IG51bGwgfHwgbG9nZ2VyTmFtZS5pc0VtcHR5KCkpIHsKCQlsb2dnZXJO
YW1lID0gIm51bGwiOwoJfQoJCgkvLyBHZXQgdGhlIGxvZ2dlciBvYmplY3QgZm9yIHRoaXMgbG9n
Z2VyIG5hbWUKCW9yZy5zbGY0ai5Mb2dnZXIgbG9nZ2VyID0gY29udGV4dC5nZXRMb2dnZXIobG9n
Z2VyTmFtZSk7CgkKCS8vIEdldCB0aGUgbWVzc2FnZSBmcm9tIHRoZSBjYXRhbG9nCgkvL2lmCgkv
L0NsYXNzTG9hZGVyIGxvYWRlciA9IFNlcnZlckNsYXNzTG9hZGVyLmdldFBhY2thZ2VMb2FkZXIo
cGFyZW50UGFja2FnZSk7CgkKCgkKCS8vIExvZyB0aGUgbWVzc2FnZQkKCXRyeSB7CgkJc3dpdGNo
KGxldmVsKSB7CgkJCWNhc2UgRVJST1I6IGxvZ2dlci5lcnJvcihtZXNzYWdlKTsgYnJlYWs7CgkJ
CWNhc2UgV0FSTjogIGxvZ2dlci53YXJuKG1lc3NhZ2UpOyBicmVhazsKCQkJY2FzZSBJTkZPOiAg
bG9nZ2VyLmluZm8obWVzc2FnZSk7IGJyZWFrOwoJCQljYXNlIERFQlVHOiBsb2dnZXIuZGVidWco
bWVzc2FnZSk7IGJyZWFrOwoJCQljYXNlIFRSQUNFOiBsb2dnZXIudHJhY2UobWVzc2FnZSk7IGJy
ZWFrOwoJCX0KCgl9IGNhdGNoIChFeGNlcHRpb24gZSkgewkKCQljb20ud20udXRpbC5Kb3VybmFs
TG9nZ2VyLmxvZyg0LCA5MCwgMSwgIld4TG9nOiBDb3VsZCBub3QgbG9nIG1lc3NhZ2U6ICIgKyBl
LnRvU3RyaW5nKCkpOwoJfQp9CgoKLyoqCiAqIExvZyBtZXRob2QgdG8gaW52b2tlIGRpcmVjdGx5
IHZpYSBqYXZhIGNvZGUuCiAqLwpwdWJsaWMgc3RhdGljIHZvaWQgbG9nKFN0cmluZyBtZXNzYWdl
KSB7Cglsb2dGcm9tSmF2YShudWxsLCBtZXNzYWdlLCBudWxsKTsKfQoKLyoqCiAqIAogKi8KcHVi
bGljIHN0YXRpYyB2b2lkIGxvZyhTdHJpbmcgbG9nZ2VyLCBTdHJpbmcgbWVzc2FnZSkgewoJbG9n
RnJvbUphdmEobG9nZ2VyLCBtZXNzYWdlLCBudWxsKTsKfQoKCi8qKgogKiBMb2cgbWV0aG9kIHRv
IGludm9rZSBkaXJlY3RseSB2aWEgamF2YSBjb2RlLgogKi8KcHVibGljIHN0YXRpYyB2b2lkIGxv
ZyhTdHJpbmcgbWVzc2FnZSwgY2gucW9zLmxvZ2JhY2suY2xhc3NpYy5MZXZlbCBsZXZlbCkgewoJ
bG9nRnJvbUphdmEobnVsbCwgbWVzc2FnZSwgbGV2ZWwpOyAvLyBMb2dnZXIgbmFtZSBub3QgZXhw
bGljaXRseSBzcGVjaWZpZWQKfQoKCnB1YmxpYyBzdGF0aWMgdm9pZCBsb2dGcm9tSmF2YShTdHJp
bmcgbG9nZ2VyLCBTdHJpbmcgbWVzc2FnZSwgY2gucW9zLmxvZ2JhY2suY2xhc3NpYy5MZXZlbCBs
ZXZlbCkgewoJCglOU05hbWUgbG9nU2VydmljZSA9IE5TTmFtZS5jcmVhdGUoInd4LmxvZy5zZXJ2
aWNlczpsb2ciKTsKCUlEYXRhIGlucHV0ID0gSURhdGFGYWN0b3J5LmNyZWF0ZShuZXcgU3RyaW5n
W11bXSB7CgkJCXsgImxvZ2dlciIsIGxvZ2dlciB9LAoJCQl7ICJ0ZXh0IiwgbWVzc2FnZSB9LAoJ
CQl7ICJsZXZlbCIsIChsZXZlbCA9PSBudWxsID8gREVGQVVMVF9MRVZFTCA6IGxldmVsLnRvU3Ry
aW5nKCkpIH0KCX0pOwoJCgl0cnkgewoJCVNlcnZpY2UuZG9JbnZva2UobG9nU2VydmljZSwgaW5w
dXQpOwoJfSBjYXRjaCAoRXhjZXB0aW9uIGUpIHsKCQljb20ud20udXRpbC5Kb3VybmFsTG9nZ2Vy
LmxvZygKCQkJCSAgY29tLndtLnV0aWwuSm91cm5hbExvZ2dlci5JTkZPLAoJICAgICAgICAgICAg
ICBjb20ud20udXRpbC5Kb3VybmFsTG9nZ2VyLkZBQ19GTE9XX1NWQywKCSAgICAgICAgICAgICAg
Y29tLndtLnV0aWwuSm91cm5hbExvZ2dlci5FUlJPUiwKCSAgICAgICAgICAgICAgIld4TG9nOiAi
ICsgZS50b1N0cmluZygpKTsKCX0KfQoJ</value>
  <value name="encodeutf8">true</value>
  <value name="extends"></value>
  <array name="implements" type="value" depth="1">
  </array>
  <array name="imports" type="value" depth="1">
    <value>com.wm.app.b2b.server.ServerAPI</value>
    <value>com.wm.app.b2b.server.Server</value>
    <value>com.wm.app.b2b.server.ServiceThread</value>
    <value>com.wm.lang.ns.*</value>
    <value>org.slf4j.Logger</value>
    <value>org.slf4j.LoggerFactory</value>
    <value>org.slf4j.MDC</value>
    <value>ch.qos.logback.classic.LoggerContext</value>
    <value>ch.qos.logback.classic.selector.DefaultContextSelector</value>
    <value>ch.qos.logback.classic.joran.JoranConfigurator</value>
    <value>ch.qos.logback.core.joran.spi.JoranException</value>
    <value>ch.qos.logback.core.util.StatusPrinter</value>
    <value>ch.qos.logback.classic.Level</value>
    <value>java.util.concurrent.ConcurrentHashMap</value>
    <value>java.io.File</value>
    <value>java.io.InputStream</value>
    <value>java.io.FileInputStream</value>
    <value>java.io.OutputStream</value>
    <value>java.io.FileOutputStream</value>
    <value>java.util.jar.*</value>
    <value>java.net.InetAddress</value>
    <value>java.net.UnknownHostException</value>
    <value>java.util.Arrays</value>
    <value>java.util.ResourceBundle</value>
    <value>java.util.Locale</value>
    <value>java.util.regex.Matcher</value>
    <value>java.util.regex.Pattern</value>
    <value>com.wm.app.b2b.server.InvokeState</value>
    <value>com.wm.app.b2b.server.ServerClassLoader</value>
  </array>
</Values>
