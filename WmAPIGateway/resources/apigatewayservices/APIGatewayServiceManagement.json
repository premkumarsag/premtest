{
  "swagger" : "2.0",
  "info" : {
    "description" : "API Gateway Service Management Service allows you to manage the APIs in the API Gateway. Any user with the 'Manage APIs' functional privilege can manage the APIs in the API Gateway. By default, the users who are part of either API-Gateway-Providers or API-Gateway-Administrators groups will have this privilege.\n\nAPI Gateway supports three types of APIs - REST APIs, SOAP APIs and WebSocket APIs. REST APIs can be created by providing the swagger (file/url), raml (file/url) or can be created from scratch. SOAP APIs can be created using the WSDL (file/url). If the API definitions has reference schemas, then an archive containing all the definitions can be provided as an input. WebSocket APIs can be created from scratch.\n\nThis service provides you with the options to create, update, read and delete of all the above API types.\n\nAn API can either be in an Active or an InActive state. An Active state indicates that the API is available for consumers. The users can use this service to activate or deactivate the API. Post activation, API Gateway generates 'Gateway Endpoints' which can be used by the API consumers to access the API.  Generally API consumers use their applications to consume the APIs.\n\nThis service can also be used to manage the API Scopes. An API Scope is a collection of resources or operations in the API. Users can create multiple scopes for a single API.\n\nOnce the API is created, users can enforce the access restrictions and other rules on the API by add the policies to the API. Policies can be attached to both API as well as the scopes.  Refer to the Policy Management API documentation for more details on the policies.",
    "version" : "10.2",
    "title" : "API Gateway Service Management Service"
  },
  "host" : "localhost:5555",
  "basePath" : "/rest/apigateway",
  "schemes" : [ "http" ],
  "consumes" : [ "application/json" ],
  "produces" : [ "application/json" ],
  "paths" : {
    "/apis/{apiId}" : {
      "get" : {
        "description" : "Retrieve an API based on the API id.",
        "operationId" : "getAPI",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "apiId",
          "in" : "path",
          "description" : "API Id for the API to be retrieved",
          "required" : true,
          "type" : "string",
          "x-example" : "353bd366-47d4-4703-aecf-9cb40cdcc864"
        }, {
          "name" : "format",
          "in" : "query",
          "description" : "Output format of the API. If the value is 'swagger', you get a API definition in swagger format. If the value is 'raml', you get a raml document.",
          "required" : false,
          "type" : "string",
          "x-example" : "raml"
        } ],
        "responses" : {
          "200" : {
            "description" : "If the format is swagger, returns the swagger content in json and raml returns the raml content in yaml",
            "schema" : {
              "$ref" : "#/definitions/APIResponseGetAPI"
            },
            "examples" : {
              "application/json" : "{\r\n  \"apiResponse\": {\r\n    \"api\": {\r\n      \"apiDefinition\": {\r\n        \"type\": \"rest\",\r\n        \"info\": {\r\n          \"vendorExtensions\": {},\r\n          \"description\": \"Chuck Norris facts are satirical factoids about martial artist and actor Chuck Norris that have become an Internet phenomenon and as a result have become widespread in popular culture. The 'facts' are normally absurd hyperbolic claims about Norris' toughness, attitude, virility, sophistication, and masculinity.\",\r\n          \"version\": \"1.0\",\r\n          \"title\": \"ChuckNorrisAPI\"\r\n        },\r\n        \"host\": \"api.chucknorris.io\",\r\n        \"basePath\": \"/jokes\",\r\n        \"schemes\": [\r\n          \"https\"\r\n        ],\r\n        \"paths\": {\r\n          \"/random\": {\r\n            \"get\": {\r\n              \"summary\": \"GET\",\r\n              \"description\": \"\",\r\n              \"operationId\": \"GET\",\r\n              \"produces\": [\r\n                \"application/json\"\r\n              ],\r\n              \"parameters\": [],\r\n              \"responses\": {},\r\n              \"enabled\": true\r\n            },\r\n            \"enabled\": true\r\n          }\r\n        },\r\n        \"definitions\": {}\r\n      },\r\n      \"nativeEndpoint\": [\r\n        {\r\n          \"passSecurityHeaders\": true,\r\n          \"uri\": \"https://api.chucknorris.io/jokes\",\r\n          \"connectionTimeoutDuration\": 0,\r\n          \"alias\": false\r\n        }\r\n      ],\r\n      \"apiName\": \"ChuckNorrisAPI\",\r\n      \"apiVersion\": \"1.0\",\r\n      \"apiDescription\": \"Chuck Norris facts are satirical factoids about martial artist and actor Chuck Norris that have become an Internet phenomenon and as a result have become widespread in popular culture. The 'facts' are normally absurd hyperbolic claims about Norris' toughness, attitude, virility, sophistication, and masculinity.\",\r\n      \"maturityState\": \"Beta\",\r\n      \"isActive\": false,\r\n      \"type\": \"REST\",\r\n      \"owner\": \"Administrator\",\r\n      \"policies\": [\r\n        \"879068cd-8628-4f2a-b903-4e6613ca12ba\"\r\n      ],\r\n      \"scopes\": [],\r\n      \"publishedPortals\": [],\r\n      \"creationDate\": \"2017-03-13 09:38:30 GMT\",\r\n      \"systemVersion\": 1,\r\n      \"id\": \"25fb937a-8360-41ab-8be5-987b14fe631d\",\r\n      \"oauth2ScopeName\": \"25fb937a-8360-41ab-8be5-987b14fe631d\"\r\n    },\r\n    \"responseStatus\": \"SUCCESS\",\r\n    \"versions\": [\r\n      {\r\n        \"versionNumber\": \"1.0\",\r\n        \"apiId\": \"25fb937a-8360-41ab-8be5-987b14fe631d\"\r\n      }\r\n    ]\r\n  }\r\n}"
            }
          },
          "404" : {
            "description" : "This status code indicates that the apiId specified is not found in the API Gateway"
          },
          "401" : {
            "description" : "This status code indicates that either user didn't provide right credentials or user doesn't have required privileges to access this API."
          }
        },
        "security" : [ {
          "Basic" : [ ]
        } ]
      },
      "put" : {
        "description" : "This REST operation is used to update an API by importing a file, url or inline.\n\nWhile updating the API, visibility of the operations can be set by enabling or disabling the operations. Disabled operations will not be exposed to the customers. By default, all the operations are exposed to the consumers.\n\nWhen updating the API using file or url, API Gateway overwrite the resources/operations for the API. But it will retain the maturity state, scopes, visibility and if API mocking is enabled, then default mocked responses, mocked conditions and IS services will also be retained.",
        "operationId" : "updateAPI",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "apiId",
          "in" : "path",
          "description" : "API Id for the API to be updated",
          "required" : true,
          "type" : "string",
          "x-example" : "353bd366-47d4-4703-aecf-9cb40cdcc864"
        }, {
          "name" : "file",
          "in" : "formData",
          "description" : "Input swagger / raml / wsdl file",
          "required" : true,
          "type" : "file",
          "x-example" : "petstore.json"
        }, {
          "name" : "apiName",
          "in" : "formData",
          "description" : "Name of the API",
          "required" : true,
          "type" : "string",
          "x-example" : "Swagger Petstore"
        }, {
          "name" : "apiDescription",
          "in" : "formData",
          "description" : "Description of the API",
          "required" : false,
          "type" : "string",
          "x-example" : "This is a sample server Petstore server"
        }, {
          "name" : "apiVersion",
          "in" : "formData",
          "description" : "Version of the API",
          "required" : false,
          "type" : "string",
          "x-example" : "V1"
        }, {
          "name" : "type",
          "in" : "formData",
          "description" : "Input file type",
          "required" : true,
          "type" : "string",
          "x-example" : "swagger",
          "enum" : [ "swagger", "raml", "wsdl" ]
        }, {
          "name" : "rootFileName",
          "in" : "formData",
          "description" : "Name of the main file in the zip. Required when the input file is zip format",
          "required" : false,
          "type" : "string",
          "x-example" : "mainFile.wsdl"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "API request payload",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/GatewayAPI"
          },
          "x-examples" : {
            "application/json" : "{\r\n      \"apiDefinition\": {\r\n        \"type\": \"rest\",\r\n        \"info\": {\r\n          \"vendorExtensions\": {},\r\n          \"description\": \"Chuck Norris facts are satirical factoids about martial artist and actor Chuck Norris that have become an Internet phenomenon and as a result have become widespread in popular culture. The 'facts' are normally absurd hyperbolic claims about Norris' toughness, attitude, virility, sophistication, and masculinity.\",\r\n          \"version\": \"1.0\",\r\n          \"title\": \"ChuckNorrisAPI\"\r\n        },\r\n        \"host\": \"api.chucknorris.io\",\r\n        \"basePath\": \"/jokes\",\r\n        \"schemes\": [\r\n          \"https\"\r\n        ],\r\n        \"paths\": {\r\n          \"/random\": {\r\n            \"get\": {\r\n              \"summary\": \"GET\",\r\n              \"description\": \"\",\r\n              \"operationId\": \"GET\",\r\n              \"produces\": [\r\n                \"application/json\"\r\n              ],\r\n              \"parameters\": [],\r\n              \"responses\": {},\r\n              \"enabled\": true\r\n            },\r\n            \"enabled\": true\r\n          }\r\n        },\r\n        \"definitions\": {}\r\n      },\r\n      \"nativeEndpoint\": [\r\n        {\r\n          \"passSecurityHeaders\": true,\r\n          \"uri\": \"https://api.chucknorris.io/jokes\",\r\n          \"connectionTimeoutDuration\": 0,\r\n          \"alias\": false\r\n        }\r\n      ],\r\n      \"apiName\": \"ChuckNorrisAPI\",\r\n      \"apiVersion\": \"v2\",\r\n      \"apiDescription\": \"Chuck Norris facts are satirical factoids about martial artist and actor Chuck Norris that have become an Internet phenomenon and as a result have become widespread in popular culture. The 'facts' are normally absurd hyperbolic claims about Norris' toughness, attitude, virility, sophistication, and masculinity.\",\r\n      \"maturityState\": \"Beta\",\r\n      \"isActive\": false,\r\n      \"type\": \"REST\",\r\n      \"owner\": \"Administrator\",\r\n      \"policies\": [\r\n        \"46044b2a-7da4-42c9-a246-10cd24295a64\"\r\n      ],\r\n      \"scopes\": [],\r\n      \"publishedPortals\": [],\r\n      \"creationDate\": \"2017-03-14 11:30:53 GMT\",\r\n      \"prevVersion\": \"25fb937a-8360-41ab-8be5-987b14fe631d\",\r\n      \"systemVersion\": 2,\r\n      \"id\": \"149a002f-1839-46e0-949c-c3c7da5ce0fd\",\r\n      \"oauth2ScopeName\": \"149a002f-1839-46e0-949c-c3c7da5ce0fd\"\r\n    }"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns the updated API object",
            "schema" : {
              "$ref" : "#/definitions/APIResponseCreate"
            },
            "examples" : {
              "application/json" : "{\r\n  \"apiResponse\": {\r\n    \"api\": {\r\n      \"apiDefinition\": {\r\n        \"type\": \"rest\",\r\n        \"host\": \"api.chucknorris.io\",\r\n        \"basePath\": \"/jokes\",\r\n        \"schemes\": [\r\n          \"https\"\r\n        ],\r\n        \"paths\": {\r\n          \"/random\": {\r\n            \"get\": {\r\n              \"summary\": \"GET\",\r\n              \"description\": \"\",\r\n              \"operationId\": \"GET\",\r\n              \"produces\": [\r\n                \"application/json\"\r\n              ],\r\n              \"responses\": {\r\n                \r\n              },\r\n              \"enabled\": true\r\n            },\r\n            \"enabled\": true\r\n          }\r\n        },\r\n        \"definitions\": {\r\n          \r\n        }\r\n      },\r\n      \"nativeEndpoint\": [\r\n        {\r\n          \"passSecurityHeaders\": true,\r\n          \"uri\": \"https://api.chucknorris.io/jokes\",\r\n          \"connectionTimeoutDuration\": 0,\r\n          \"alias\": false\r\n        }\r\n      ],\r\n      \"apiName\": \"ChuckNorrisAPI_\",\r\n      \"apiVersion\": \"1.0\",\r\n      \"apiDescription\": \"Chuck Norris facts are satirical factoids about martial artist and actor Chuck Norris that have become an Internet phenomenon and as a result have become widespread in popular culture. The 'facts' are normally absurd hyperbolic claims about Norris' toughness, attitude, virility, sophistication, and masculinity.\",\r\n      \"maturityState\": \"Beta\",\r\n      \"isActive\": false,\r\n      \"type\": \"REST\",\r\n      \"owner\": \"Administrator\",\r\n      \"policies\": [\r\n        \"b9b1231b-22b9-4094-b432-b31a1cb59c21\"\r\n      ],\r\n      \"scopes\": [\r\n        \r\n      ],\r\n      \"publishedPortals\": [\r\n        \r\n      ],\r\n      \"creationDate\": \"2017-03-14 10:12:59 GMT\",\r\n      \"systemVersion\": 1,\r\n      \"id\": \"70d2d4a0-5408-4bfc-9ef2-3205e06a4759\",\r\n      \"oauth2ScopeName\": \"70d2d4a0-5408-4bfc-9ef2-3205e06a4759\"\r\n    },\r\n    \"responseStatus\": \"SUCCESS\"\r\n  }\r\n}"
            }
          },
          "404" : {
            "description" : "This status code indicates that the apiId specified is not found in the API Gateway"
          },
          "400" : {
            "description" : "This status code shows when the user missed the mandatory fields like type, file/url/apiDefinition in the request or provide a invalid request body"
          },
          "401" : {
            "description" : "This status code indicates that either user didn't provide right credentials or user doesn't have required privileges to access this API."
          }
        },
        "security" : [ {
          "Basic" : [ ]
        } ]
      },
      "delete" : {
        "description" : "Delete the inactive API",
        "operationId" : "deleteAPI",
        "parameters" : [ {
          "name" : "apiId",
          "in" : "path",
          "description" : "API Id for the API to be deleted",
          "required" : true,
          "type" : "string",
          "x-example" : "353bd366-47d4-4703-aecf-9cb40cdcc864"
        }, {
          "name" : "forceDelete",
          "in" : "query",
          "description" : "Flag for force delete. Required when API is associated with some applications",
          "required" : false,
          "type" : "boolean",
          "default" : true,
          "x-example" : true
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns the apiId along with the error when unsuccessful",
            "schema" : {
              "$ref" : "#/definitions/APIResponseDelete"
            }
          },
          "400" : {
            "description" : "This response code returns when the deleted API is published to API portal or in active state"
          },
          "404" : {
            "description" : "This status code indicates that the apiId specified is not found in the API Gateway"
          },
          "401" : {
            "description" : "This status code indicates that either user didn't provide right credentials or user doesn't have required privileges to access this API"
          },
          "204" : {
            "description" : "Success"
          }
        },
        "security" : [ {
          "Basic" : [ ]
        } ]
      }
    },
    "/apis/{apiId}/activate" : {
      "put" : {
        "description" : "Activate an API so that API is exposed to consumers",
        "operationId" : "activateAPI",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "apiId",
          "in" : "path",
          "description" : "API Id for the API to be activated",
          "required" : true,
          "type" : "string",
          "x-example" : "353bd366-47d4-4703-aecf-9cb40cdcc864"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns the API object after successful activation",
            "schema" : {
              "$ref" : "#/definitions/APIResponse"
            },
            "examples" : {
              "application/json" : "{\r\n  \"apiResponse\": {\r\n    \"api\": {\r\n      \"apiDefinition\": {\r\n        \"type\": \"rest\",\r\n        \"info\": {\r\n          \"vendorExtensions\": {},\r\n          \"description\": \"Chuck Norris facts are satirical factoids about martial artist and actor Chuck Norris that have become an Internet phenomenon and as a result have become widespread in popular culture. The 'facts' are normally absurd hyperbolic claims about Norris' toughness, attitude, virility, sophistication, and masculinity.\",\r\n          \"version\": \"1.0\",\r\n          \"title\": \"ChuckNorrisAPI\"\r\n        },\r\n        \"host\": \"api.chucknorris.io\",\r\n        \"basePath\": \"/jokes\",\r\n        \"schemes\": [\r\n          \"https\"\r\n        ],\r\n        \"paths\": {\r\n          \"/random\": {\r\n            \"get\": {\r\n              \"summary\": \"GET\",\r\n              \"description\": \"\",\r\n              \"operationId\": \"GET\",\r\n              \"produces\": [\r\n                \"application/json\"\r\n              ],\r\n              \"parameters\": [],\r\n              \"responses\": {},\r\n              \"enabled\": true\r\n            },\r\n            \"enabled\": true\r\n          }\r\n        },\r\n        \"definitions\": {}\r\n      },\r\n      \"nativeEndpoint\": [\r\n        {\r\n          \"passSecurityHeaders\": true,\r\n          \"uri\": \"https://api.chucknorris.io/jokes\",\r\n          \"connectionTimeoutDuration\": 0,\r\n          \"alias\": false\r\n        }\r\n      ],\r\n      \"apiName\": \"ChuckNorrisAPI\",\r\n      \"apiVersion\": \"v2\",\r\n      \"apiDescription\": \"Chuck Norris facts are satirical factoids about martial artist and actor Chuck Norris that have become an Internet phenomenon and as a result have become widespread in popular culture. The 'facts' are normally absurd hyperbolic claims about Norris' toughness, attitude, virility, sophistication, and masculinity.\",\r\n      \"maturityState\": \"Beta\",\r\n      \"isActive\": true,\r\n      \"type\": \"REST\",\r\n      \"policies\": [\r\n        \"46044b2a-7da4-42c9-a246-10cd24295a64\"\r\n      ],\r\n      \"scopes\": [],\r\n      \"publishedPortals\": [],\r\n      \"creationDate\": \"2017-03-14 11:30:53 GMT\",\r\n      \"lastModified\": \"2017-03-14 12:18:54 GMT\",\r\n      \"prevVersion\": \"25fb937a-8360-41ab-8be5-987b14fe631d\",\r\n      \"systemVersion\": 2,\r\n      \"id\": \"149a002f-1839-46e0-949c-c3c7da5ce0fd\",\r\n      \"oauth2ScopeName\": \"149a002f-1839-46e0-949c-c3c7da5ce0fd\"\r\n    },\r\n    \"responseStatus\": \"SUCCESS\",\r\n    \"gatewayEndPoints\": [\r\n      \"http://MCMRIZ01:5555/gateway/ChuckNorrisAPI/v2\"\r\n    ]\r\n  }\r\n}"
            }
          },
          "400" : {
            "description" : "This status code shows when the API is already in activated state or when no operations/resources are present or none are enabled"
          },
          "404" : {
            "description" : "This status code indicates that the apiId specified is not found in the API Gateway"
          },
          "401" : {
            "description" : "This status code indicates that either user didn't provide right credentials or user doesn't have required privileges to access this API."
          }
        },
        "security" : [ {
          "Basic" : [ ]
        } ]
      }
    },
    "/apis/{apiId}/deactivate" : {
      "put" : {
        "description" : "Deactivate an API so that API is not exposed to consumers",
        "operationId" : "deactivateAPI",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "apiId",
          "in" : "path",
          "description" : "API Id for the API to be deactivated",
          "required" : true,
          "type" : "string",
          "x-example" : "353bd366-47d4-4703-aecf-9cb40cdcc864"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns the API object after successful deactivation",
            "schema" : {
              "$ref" : "#/definitions/APIResponse"
            },
            "examples" : {
              "application/json" : "{\r\n  \"apiResponse\": {\r\n    \"api\": {\r\n      \"apiDefinition\": {\r\n        \"type\": \"rest\",\r\n        \"info\": {\r\n          \"vendorExtensions\": {},\r\n          \"description\": \"Chuck Norris facts are satirical factoids about martial artist and actor Chuck Norris that have become an Internet phenomenon and as a result have become widespread in popular culture. The 'facts' are normally absurd hyperbolic claims about Norris' toughness, attitude, virility, sophistication, and masculinity.\",\r\n          \"version\": \"1.0\",\r\n          \"title\": \"ChuckNorrisAPI\"\r\n        },\r\n        \"host\": \"api.chucknorris.io\",\r\n        \"basePath\": \"/jokes\",\r\n        \"schemes\": [\r\n          \"https\"\r\n        ],\r\n        \"paths\": {\r\n          \"/random\": {\r\n            \"get\": {\r\n              \"summary\": \"GET\",\r\n              \"description\": \"\",\r\n              \"operationId\": \"GET\",\r\n              \"produces\": [\r\n                \"application/json\"\r\n              ],\r\n              \"parameters\": [],\r\n              \"responses\": {},\r\n              \"enabled\": true\r\n            },\r\n            \"enabled\": true\r\n          }\r\n        },\r\n        \"definitions\": {}\r\n      },\r\n      \"nativeEndpoint\": [\r\n        {\r\n          \"passSecurityHeaders\": true,\r\n          \"uri\": \"https://api.chucknorris.io/jokes\",\r\n          \"connectionTimeoutDuration\": 0,\r\n          \"alias\": false\r\n        }\r\n      ],\r\n      \"apiName\": \"ChuckNorrisAPI\",\r\n      \"apiVersion\": \"v2\",\r\n      \"apiDescription\": \"Chuck Norris facts are satirical factoids about martial artist and actor Chuck Norris that have become an Internet phenomenon and as a result have become widespread in popular culture. The 'facts' are normally absurd hyperbolic claims about Norris' toughness, attitude, virility, sophistication, and masculinity.\",\r\n      \"maturityState\": \"Beta\",\r\n      \"isActive\": true,\r\n      \"type\": \"REST\",\r\n      \"policies\": [\r\n        \"46044b2a-7da4-42c9-a246-10cd24295a64\"\r\n      ],\r\n      \"scopes\": [],\r\n      \"publishedPortals\": [],\r\n      \"creationDate\": \"2017-03-14 11:30:53 GMT\",\r\n      \"lastModified\": \"2017-03-14 12:18:54 GMT\",\r\n      \"prevVersion\": \"25fb937a-8360-41ab-8be5-987b14fe631d\",\r\n      \"systemVersion\": 2,\r\n      \"id\": \"149a002f-1839-46e0-949c-c3c7da5ce0fd\",\r\n      \"oauth2ScopeName\": \"149a002f-1839-46e0-949c-c3c7da5ce0fd\"\r\n    },\r\n    \"responseStatus\": \"SUCCESS\",\r\n    \"gatewayEndPoints\": [\r\n      \"http://MCMRIZ01:5555/gateway/ChuckNorrisAPI/v2\"\r\n    ]\r\n  }\r\n}"
            }
          },
          "400" : {
            "description" : "This status code shows when the API is already in de-activated state"
          },
          "404" : {
            "description" : "This status code indicates that the apiId specified is not found in the API Gateway"
          },
          "401" : {
            "description" : "This status code indicates that either user didn't provide right credentials or user doesn't have required privileges to access this API."
          }
        },
        "security" : [ {
          "Basic" : [ ]
        } ]
      }
    },
    "/apis/{apiId}/publish" : {
      "put" : {
        "description" : "This REST operation is used to publish API to the registered API Portal",
        "operationId" : "publishAPI",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "apiId",
          "in" : "path",
          "description" : "API Id for the API to be published",
          "required" : true,
          "type" : "string",
          "x-example" : "353bd366-47d4-4703-aecf-9cb40cdcc864"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "API publish request payload",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/InputPublish"
          },
          "x-examples" : {
            "application/json" : "{\r\n\t\"portalGatewayId\" : \"69bac781-6c60-4db3-86f7-50af3ec4963a\",\r\n\t\"communities\" : [\"3bdf8005-5685-3ef5-b132-de4681963fb6\"],\r\n\t\"endpoints\" : [\"https://api.chucknorris.io/jokes\"]\r\n}"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns the API object after successful publish",
            "schema" : {
              "$ref" : "#/definitions/APIResponseCreate"
            },
            "examples" : {
              "application/json" : "{\r\n  \"apiResponse\": {\r\n    \"api\": {\r\n      \"apiDefinition\": {\r\n        \"type\": \"rest\",\r\n        \"info\": {\r\n          \"vendorExtensions\": {},\r\n          \"description\": \"Chuck Norris facts are satirical factoids about martial artist and actor Chuck Norris that have become an Internet phenomenon and as a result have become widespread in popular culture. The 'facts' are normally absurd hyperbolic claims about Norris' toughness, attitude, virility, sophistication, and masculinity.\",\r\n          \"version\": \"1.0\",\r\n          \"title\": \"ChuckNorrisAPI\"\r\n        },\r\n        \"host\": \"api.chucknorris.io\",\r\n        \"basePath\": \"/jokes\",\r\n        \"schemes\": [\r\n          \"https\"\r\n        ],\r\n        \"paths\": {\r\n          \"/random\": {\r\n            \"get\": {\r\n              \"summary\": \"GET\",\r\n              \"description\": \"\",\r\n              \"operationId\": \"GET\",\r\n              \"produces\": [\r\n                \"application/json\"\r\n              ],\r\n              \"parameters\": [],\r\n              \"responses\": {},\r\n              \"enabled\": true\r\n            },\r\n            \"enabled\": true\r\n          }\r\n        },\r\n        \"definitions\": {}\r\n      },\r\n      \"nativeEndpoint\": [\r\n        {\r\n          \"passSecurityHeaders\": true,\r\n          \"uri\": \"https://api.chucknorris.io/jokes\",\r\n          \"connectionTimeoutDuration\": 0,\r\n          \"alias\": false\r\n        }\r\n      ],\r\n      \"apiName\": \"ChuckNorrisAPI\",\r\n      \"apiVersion\": \"1.0\",\r\n      \"apiDescription\": \"Chuck Norris facts are satirical factoids about martial artist and actor Chuck Norris that have become an Internet phenomenon and as a result have become widespread in popular culture. The 'facts' are normally absurd hyperbolic claims about Norris' toughness, attitude, virility, sophistication, and masculinity.\",\r\n      \"maturityState\": \"Beta\",\r\n      \"isActive\": false,\r\n      \"type\": \"REST\",\r\n      \"owner\": \"Administrator\",\r\n      \"policies\": [\r\n        \"879068cd-8628-4f2a-b903-4e6613ca12ba\"\r\n      ],\r\n      \"referencedFiles\": {\r\n        \"ChuckNorrisAPI.json\": \"{\\r\\n  \\\"swagger\\\": \\\"2.0\\\",\\r\\n  \\\"info\\\": {\\r\\n    \\\"description\\\": \\\"Chuck Norris facts are satirical factoids about martial artist and actor Chuck Norris that have become an Internet phenomenon and as a result have become widespread in popular culture. The 'facts' are normally absurd hyperbolic claims about Norris' toughness, attitude, virility, sophistication, and masculinity.\\\",\\r\\n    \\\"title\\\": \\\"ChuckNorrisAPI\\\",\\r\\n    \\\"version\\\": \\\"1.0\\\"\\r\\n  },\\r\\n  \\\"host\\\": \\\"api.chucknorris.io\\\",\\r\\n  \\\"basePath\\\": \\\"/jokes\\\",\\r\\n  \\\"schemes\\\": [\\r\\n    \\\"https\\\"\\r\\n  ],\\r\\n  \\\"paths\\\": {\\r\\n    \\\"/random\\\": {\\r\\n      \\\"get\\\": {\\r\\n        \\\"summary\\\": \\\"GET\\\",\\r\\n        \\\"deprecated\\\": false,\\r\\n        \\\"produces\\\": [\\r\\n          \\\"application/json\\\"\\r\\n        ],\\r\\n        \\\"description\\\": \\\"\\\",\\r\\n        \\\"operationId\\\": \\\"GET\\\"\\r\\n      }\\r\\n    }\\r\\n  }\\r\\n}\\r\\n\"\r\n      },\r\n      \"scopes\": [],\r\n      \"publishedPortals\": [],\r\n      \"creationDate\": \"2017-03-13 09:38:30 GMT\",\r\n      \"systemVersion\": 1,\r\n      \"id\": \"25fb937a-8360-41ab-8be5-987b14fe631d\",\r\n      \"oauth2ScopeName\": \"25fb937a-8360-41ab-8be5-987b14fe631d\"\r\n    },\r\n    \"responseStatus\": \"SUCCESS\"\r\n  }\r\n}"
            }
          },
          "400" : {
            "description" : "This status code shows when the user missed the mandatory portalGatewayId or invalid portalGatewayId in the request body"
          },
          "404" : {
            "description" : "This status code indicates that the apiId specified is not found in the API Gateway"
          },
          "401" : {
            "description" : "This status code indicates that either user didn't provide right credentials or user doesn't have required privileges to access this API."
          }
        },
        "security" : [ {
          "Basic" : [ ]
        } ]
      }
    },
    "/apis/{apiId}/unpublish" : {
      "put" : {
        "description" : "Unpublish API from the registered API Portal",
        "operationId" : "unpublishAPI",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "apiId",
          "in" : "path",
          "description" : "API Id for the API to be unpublished",
          "required" : true,
          "type" : "string",
          "x-example" : "353bd366-47d4-4703-aecf-9cb40cdcc864"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns the API object after successful unpublish",
            "schema" : {
              "$ref" : "#/definitions/APIResponseCreate"
            },
            "examples" : {
              "application/json" : "{\r\n  \"apiResponse\": {\r\n    \"api\": {\r\n      \"apiDefinition\": {\r\n        \"type\": \"rest\",\r\n        \"info\": {\r\n          \"vendorExtensions\": {},\r\n          \"description\": \"Chuck Norris facts are satirical factoids about martial artist and actor Chuck Norris that have become an Internet phenomenon and as a result have become widespread in popular culture. The 'facts' are normally absurd hyperbolic claims about Norris' toughness, attitude, virility, sophistication, and masculinity.\",\r\n          \"version\": \"1.0\",\r\n          \"title\": \"ChuckNorrisAPI\"\r\n        },\r\n        \"host\": \"api.chucknorris.io\",\r\n        \"basePath\": \"/jokes\",\r\n        \"schemes\": [\r\n          \"https\"\r\n        ],\r\n        \"paths\": {\r\n          \"/random\": {\r\n            \"get\": {\r\n              \"summary\": \"GET\",\r\n              \"description\": \"\",\r\n              \"operationId\": \"GET\",\r\n              \"produces\": [\r\n                \"application/json\"\r\n              ],\r\n              \"parameters\": [],\r\n              \"responses\": {},\r\n              \"enabled\": true\r\n            },\r\n            \"enabled\": true\r\n          }\r\n        },\r\n        \"definitions\": {}\r\n      },\r\n      \"nativeEndpoint\": [\r\n        {\r\n          \"passSecurityHeaders\": true,\r\n          \"uri\": \"https://api.chucknorris.io/jokes\",\r\n          \"connectionTimeoutDuration\": 0,\r\n          \"alias\": false\r\n        }\r\n      ],\r\n      \"apiName\": \"ChuckNorrisAPI\",\r\n      \"apiVersion\": \"1.0\",\r\n      \"apiDescription\": \"Chuck Norris facts are satirical factoids about martial artist and actor Chuck Norris that have become an Internet phenomenon and as a result have become widespread in popular culture. The 'facts' are normally absurd hyperbolic claims about Norris' toughness, attitude, virility, sophistication, and masculinity.\",\r\n      \"maturityState\": \"Beta\",\r\n      \"isActive\": false,\r\n      \"type\": \"REST\",\r\n      \"owner\": \"Administrator\",\r\n      \"policies\": [\r\n        \"879068cd-8628-4f2a-b903-4e6613ca12ba\"\r\n      ],\r\n      \"referencedFiles\": {\r\n        \"ChuckNorrisAPI.json\": \"{\\r\\n  \\\"swagger\\\": \\\"2.0\\\",\\r\\n  \\\"info\\\": {\\r\\n    \\\"description\\\": \\\"Chuck Norris facts are satirical factoids about martial artist and actor Chuck Norris that have become an Internet phenomenon and as a result have become widespread in popular culture. The 'facts' are normally absurd hyperbolic claims about Norris' toughness, attitude, virility, sophistication, and masculinity.\\\",\\r\\n    \\\"title\\\": \\\"ChuckNorrisAPI\\\",\\r\\n    \\\"version\\\": \\\"1.0\\\"\\r\\n  },\\r\\n  \\\"host\\\": \\\"api.chucknorris.io\\\",\\r\\n  \\\"basePath\\\": \\\"/jokes\\\",\\r\\n  \\\"schemes\\\": [\\r\\n    \\\"https\\\"\\r\\n  ],\\r\\n  \\\"paths\\\": {\\r\\n    \\\"/random\\\": {\\r\\n      \\\"get\\\": {\\r\\n        \\\"summary\\\": \\\"GET\\\",\\r\\n        \\\"deprecated\\\": false,\\r\\n        \\\"produces\\\": [\\r\\n          \\\"application/json\\\"\\r\\n        ],\\r\\n        \\\"description\\\": \\\"\\\",\\r\\n        \\\"operationId\\\": \\\"GET\\\"\\r\\n      }\\r\\n    }\\r\\n  }\\r\\n}\\r\\n\"\r\n      },\r\n      \"scopes\": [],\r\n      \"publishedPortals\": [],\r\n      \"creationDate\": \"2017-03-13 09:38:30 GMT\",\r\n      \"systemVersion\": 1,\r\n      \"id\": \"25fb937a-8360-41ab-8be5-987b14fe631d\",\r\n      \"oauth2ScopeName\": \"25fb937a-8360-41ab-8be5-987b14fe631d\"\r\n    },\r\n    \"responseStatus\": \"SUCCESS\"\r\n  }\r\n}"
            }
          },
          "400" : {
            "description" : "This status code shows when the user missed the mandatory portalGatewayId or invalid portalGatewayId in the request body"
          },
          "404" : {
            "description" : "This status code indicates that the apiId specified is not found in the API Gateway"
          },
          "401" : {
            "description" : "This status code indicates that either user didn't provide right credentials or user doesn't have required privileges to access this API."
          }
        },
        "security" : [ {
          "Basic" : [ ]
        } ]
      }
    },
    "/apis/{apiId}/mock/enable" : {
      "put" : {
        "description" : "In API Gateway, you can mock an API implementation. API Gateway lets you mock an API by simulating the native service. API Mocking is useful feature in API first approach, where in the provider may choose to expose the mocked API to the consumers when the actual API doesn't exist or isn't complete. \n In API Gateway, when you enable mocking for an API, a default mock response is created for each combination of resource, operation, status code and content-type based on the example and schema set in the API definition. As an API Provider, you can add or modify the default mock responses.\n\nYou can specify conditions at the operation level and configure IS services at the API level for a mocked API in the update API operation. At runtime, when the mocked API is invoked instead of calling the native service, API Gateway returns the mocked response to the consumer based on the below priorities:\n1. If any of the conditions for the invoked operation satisfies, API Gateway returns the associated mocked response.\n2. If no condition is specified or none of the condition for the invoked operation is satisfied, then API Gateway will return \na. the response from an IS service, if an IS service is configured b. default mocked response, if no IS services are configured",
        "operationId" : "enableMockAPI",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "apiId",
          "in" : "path",
          "description" : "API Id for the API to be activated",
          "required" : true,
          "type" : "string",
          "x-example" : "353bd366-47d4-4703-aecf-9cb40cdcc864"
        }, {
          "name" : "retainDefaultMockResponses",
          "in" : "query",
          "description" : "Flag to retain generated mocked responses. When this is set to true, default mocked responses will be retained. If it's set to false, new default mocked responses will be generated using the examples, schema in the API",
          "required" : false,
          "type" : "boolean",
          "default" : false,
          "x-example" : true
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns the API object after successfully enabling mocking of an API",
            "schema" : {
              "$ref" : "#/definitions/APIResponse"
            }
          },
          "400" : {
            "description" : "This status code shows when the API is already in activated state or when invalid json or xml is provided in the example part of the operation"
          },
          "404" : {
            "description" : "This status code indicates that the apiId specified is not found in the API Gateway"
          },
          "401" : {
            "description" : ""
          }
        },
        "security" : [ {
          "Basic" : [ ]
        } ]
      }
    },
    "/apis/{apiId}/mock/disable" : {
      "put" : {
        "description" : "Once API is disabled from mocking capability, at runtime all the API invocations are redirected to the native service instead of sending the mocked response",
        "operationId" : "disableMockAPI",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "apiId",
          "in" : "path",
          "description" : "API Id for the API to be deactivated",
          "required" : true,
          "type" : "string",
          "x-example" : "353bd366-47d4-4703-aecf-9cb40cdcc864"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns the API object after successful disabling mocking of an API",
            "schema" : {
              "$ref" : "#/definitions/APIResponse"
            }
          },
          "400" : {
            "description" : "This status code shows when the API is already in activated state or in mocked state"
          },
          "404" : {
            "description" : "This status code indicates that the apiId specified is not found in the API Gateway"
          },
          "401" : {
            "description" : ""
          }
        },
        "security" : [ {
          "Basic" : [ ]
        } ]
      }
    },
    "/apis" : {
      "get" : {
        "description" : "Get all APIs or subset of APIs",
        "operationId" : "getAPIs",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "apiIds",
          "in" : "query",
          "description" : "API Ids for the API to be retrieved",
          "required" : false,
          "type" : "string",
          "x-example" : "353bd366-47d4-4703-aecf-9cb40cdcc864,353bd366-47d4-4703-aecf-9cb40cdcc345"
        }, {
          "name" : "from",
          "in" : "query",
          "description" : "Starting index from the list of APIs to be retrieved",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "size",
          "in" : "query",
          "description" : "Number of APIs to be retrieved",
          "required" : false,
          "type" : "integer"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns the list of all APIs",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/APIResponseDelete"
              }
            },
            "examples" : {
              "application/json" : "{\r\n  \"apiResponse\": [\r\n    {\r\n      \"api\": {\r\n        \"apiName\": \"ChuckNorrisAPI\",\r\n        \"apiVersion\": \"v2\",\r\n        \"apiDescription\": \"Chuck Norris facts are satirical factoids about martial artist and actor Chuck Norris that have become an Internet phenomenon and as a result have become widespread in popular culture. The 'facts' are normally absurd hyperbolic claims about Norris' toughness, attitude, virility, sophistication, and masculinity.\",\r\n        \"isActive\": false,\r\n        \"type\": \"REST\",\r\n        \"publishedPortals\": [],\r\n        \"systemVersion\": 2,\r\n        \"id\": \"46df4227-a100-486c-9580-0bf388ec6ec7\"\r\n      },\r\n      \"responseStatus\": \"SUCCESS\"\r\n    },\r\n    {\r\n      \"api\": {\r\n        \"apiName\": \"ChuckNorrisAPI\",\r\n        \"apiVersion\": \"1.0\",\r\n        \"apiDescription\": \"Chuck Norris facts are satirical factoids about martial artist and actor Chuck Norris that have become an Internet phenomenon and as a result have become widespread in popular culture. The 'facts' are normally absurd hyperbolic claims about Norris' toughness, attitude, virility, sophistication, and masculinity.\",\r\n        \"isActive\": false,\r\n        \"type\": \"REST\",\r\n        \"publishedPortals\": [],\r\n        \"systemVersion\": 1,\r\n        \"id\": \"25fb937a-8360-41ab-8be5-987b14fe631d\"\r\n      },\r\n      \"responseStatus\": \"SUCCESS\"\r\n    }\r\n  ]\r\n}"
            }
          },
          "401" : {
            "description" : "This status code indicates that either user didn't provide right credentials or user doesn't have required privileges to access this API."
          }
        },
        "security" : [ {
          "Basic" : [ ]
        } ]
      },
      "post" : {
        "description" : "This REST operation is used to create an API by importing a file, url or from scratch",
        "operationId" : "createAPI",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "file",
          "in" : "formData",
          "description" : "Input swagger / raml / wsdl file to be imported",
          "required" : true,
          "type" : "file",
          "x-example" : "petstore.json"
        }, {
          "name" : "apiName",
          "in" : "formData",
          "description" : "Name of the API",
          "required" : true,
          "type" : "string",
          "x-example" : "Swagger Petstore"
        }, {
          "name" : "apiDescription",
          "in" : "formData",
          "description" : "Description of the API",
          "required" : false,
          "type" : "string",
          "x-example" : "This is a sample server Petstore server"
        }, {
          "name" : "apiVersion",
          "in" : "formData",
          "description" : "Version of the API",
          "required" : false,
          "type" : "string",
          "x-example" : "V1"
        }, {
          "name" : "type",
          "in" : "formData",
          "description" : "Input file type",
          "required" : true,
          "type" : "string",
          "x-example" : "swagger",
          "enum" : [ "swagger", "raml", "wsdl" ]
        }, {
          "name" : "rootFileName",
          "in" : "formData",
          "description" : "Name of the main file in the zip. Required only when the input file is zip format",
          "required" : false,
          "type" : "string",
          "x-example" : "mainFile.wsdl"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "API request payload",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/InputAPI"
          },
          "x-examples" : {
            "application/json" : "{\r\n  \"apiDefinition\": {\r\n    \"type\": \"rest\",\r\n    \"host\": \"api.chucknorris.io\",\r\n    \"basePath\": \"/jokes\",\r\n    \"schemes\": [\r\n      \"https\"\r\n    ],\r\n    \"paths\": {\r\n      \"/random\": {\r\n        \"get\": {\r\n          \"summary\": \"GET\",\r\n          \"description\": \"\",\r\n          \"operationId\": \"GET\",\r\n          \"produces\": [\r\n            \"application/json\"\r\n          ],\r\n          \"enabled\": true\r\n        },\r\n        \"enabled\": true\r\n      }\r\n    }\r\n  },\r\n  \"apiName\": \"ChuckNorrisAPI\",\r\n  \"apiVersion\": \"1.0\",\r\n  \"apiDescription\": \"Chuck Norris facts are satirical factoids about martial artist and actor Chuck Norris that have become an Internet phenomenon and as a result have become widespread in popular culture. The 'facts' are normally absurd hyperbolic claims about Norris' toughness, attitude, virility, sophistication, and masculinity.\",\r\n  \"maturityState\": \"Beta\",\r\n}"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns the created API object",
            "schema" : {
              "$ref" : "#/definitions/APIResponseCreate"
            },
            "examples" : {
              "application/json" : "{\r\n  \"apiResponse\": {\r\n    \"api\": {\r\n      \"apiDefinition\": {\r\n        \"type\": \"rest\",\r\n        \"host\": \"api.chucknorris.io\",\r\n        \"basePath\": \"/jokes\",\r\n        \"schemes\": [\r\n          \"https\"\r\n        ],\r\n        \"paths\": {\r\n          \"/random\": {\r\n            \"get\": {\r\n              \"summary\": \"GET\",\r\n              \"description\": \"\",\r\n              \"operationId\": \"GET\",\r\n              \"produces\": [\r\n                \"application/json\"\r\n              ],\r\n              \"responses\": {\r\n                \r\n              },\r\n              \"enabled\": true\r\n            },\r\n            \"enabled\": true\r\n          }\r\n        },\r\n        \"definitions\": {\r\n          \r\n        }\r\n      },\r\n      \"nativeEndpoint\": [\r\n        {\r\n          \"passSecurityHeaders\": true,\r\n          \"uri\": \"https://api.chucknorris.io/jokes\",\r\n          \"connectionTimeoutDuration\": 0,\r\n          \"alias\": false\r\n        }\r\n      ],\r\n      \"apiName\": \"ChuckNorrisAPI_\",\r\n      \"apiVersion\": \"1.0\",\r\n      \"apiDescription\": \"Chuck Norris facts are satirical factoids about martial artist and actor Chuck Norris that have become an Internet phenomenon and as a result have become widespread in popular culture. The 'facts' are normally absurd hyperbolic claims about Norris' toughness, attitude, virility, sophistication, and masculinity.\",\r\n      \"maturityState\": \"Beta\",\r\n      \"isActive\": false,\r\n      \"type\": \"REST\",\r\n      \"owner\": \"Administrator\",\r\n      \"policies\": [\r\n        \"b9b1231b-22b9-4094-b432-b31a1cb59c21\"\r\n      ],\r\n      \"scopes\": [\r\n        \r\n      ],\r\n      \"publishedPortals\": [\r\n        \r\n      ],\r\n      \"creationDate\": \"2017-03-14 10:12:59 GMT\",\r\n      \"systemVersion\": 1,\r\n      \"id\": \"70d2d4a0-5408-4bfc-9ef2-3205e06a4759\",\r\n      \"oauth2ScopeName\": \"70d2d4a0-5408-4bfc-9ef2-3205e06a4759\"\r\n    },\r\n    \"responseStatus\": \"SUCCESS\"\r\n  }\r\n}"
            }
          },
          "400" : {
            "description" : "This status code shows when the user missed the mandatory fields like type, file/url/apiDefinition in the request or provide a invalid request body"
          },
          "401" : {
            "description" : "This status code indicates that either user didn't provide right credentials or user doesn't have required privileges to access this API."
          }
        },
        "security" : [ {
          "Basic" : [ ]
        } ]
      },
      "delete" : {
        "description" : "Delete the inactive APIs",
        "operationId" : "deleteAPIs",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "apiIds",
          "in" : "query",
          "description" : "API Ids for the APIs to be deleted. Multiple API ids combined by comma",
          "required" : true,
          "type" : "string",
          "x-example" : "353bd366-47d4-4703-aecf-9cb40cdcc864,353bd366-47d4-4703-aecf-9cb40cdcc854"
        }, {
          "name" : "forceDelete",
          "in" : "query",
          "description" : "Flag for force delete. Required when API is associated with some applications",
          "required" : false,
          "type" : "boolean",
          "default" : true,
          "x-example" : true
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns the apiId along with the error when unsuccessful",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/APIResponseDelete"
              }
            }
          },
          "400" : {
            "description" : "This response code returns when the mandatory parameter apiIds is missing in the query parameter"
          },
          "401" : {
            "description" : "This status code indicates that either user didn't provide right credentials or user doesn't have required privileges to access this API."
          },
          "204" : {
            "description" : "Success"
          }
        },
        "security" : [ {
          "Basic" : [ ]
        } ]
      }
    },
    "/apis/{apiId}/applications" : {
      "get" : {
        "description" : "Retrieves the list of registered applications of an API",
        "operationId" : "getApplications",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "apiId",
          "in" : "path",
          "description" : "API Id for the API to find the associated applications",
          "required" : true,
          "type" : "string",
          "x-example" : "353bd366-47d4-4703-aecf-9cb40cdcc864"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns the list of associated applications",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Application"
              }
            },
            "examples" : {
              "application/json" : "{\r\n  \"applications\": [\r\n    {\r\n      \"name\": \"app1\",\r\n      \"description\": null,\r\n      \"contactEmails\": [],\r\n      \"identifiers\": [],\r\n      \"siteURLs\": [],\r\n      \"version\": \"1.0\",\r\n      \"id\": \"ae48cd69-421e-4bdf-a4d0-e86996a78f68\",\r\n      \"created\": \"2017-03-13 13:12:03 GMT\",\r\n      \"lastupdated\": null,\r\n      \"consumingAPIs\": [\r\n        \"25fb937a-8360-41ab-8be5-987b14fe631d\"\r\n      ],\r\n      \"accessTokens\": {\r\n        \"apiAccessKey_credentials\": {\r\n          \"apiAccessKey\": \"cec4b46b-3569-4f73-a561-172dd67c182a\",\r\n          \"expirationInterval\": null\r\n        },\r\n        \"oauth_credentials\": {\r\n          \"clientID\": \"40b78ed3-d171-4bd3-99db-51dd2fa71753\",\r\n          \"clientSecret\": \"024b9525-6526-45c8-a66c-d192442064e1\",\r\n          \"clientName\": \"app1-6b753c2a-0567-462d-a4ea-1b143ab7a381\",\r\n          \"scopes\": [\r\n            \"25fb937a-8360-41ab-8be5-987b14fe631d\"\r\n          ],\r\n          \"token_lifetime\": \"3600\",\r\n          \"token_refresh_limit\": \"0\",\r\n          \"redirect_uris\": [\r\n            \"https://placeholder_redirect_uri\"\r\n          ],\r\n          \"Type\": \"confidential\"\r\n        }\r\n      }\r\n    }\r\n  ]\r\n}"
            }
          },
          "404" : {
            "description" : "This status code indicates that the apiId specified is not found in the API Gateway"
          },
          "401" : {
            "description" : "This status code indicates that either user didn't provide right credentials or user doesn't have required privileges to access this API."
          }
        },
        "security" : [ {
          "Basic" : [ ]
        } ]
      }
    },
    "/apis/{apiId}/source" : {
      "get" : {
        "description" : "Download the API definition that was used to create the API. This is applicable only for SOAP APIs.",
        "operationId" : "getSource",
        "produces" : [ "multipart/mixed" ],
        "parameters" : [ {
          "name" : "apiId",
          "in" : "path",
          "description" : "API Id for the API to download the source content",
          "required" : true,
          "type" : "string",
          "x-example" : "353bd366-47d4-4703-aecf-9cb40cdcc864"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns the source files along with the root file name",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Multipart"
              }
            },
            "examples" : {
              "multipart/mixed" : "Message-ID: <296841806.5.1489555643275.JavaMail.MRIZ@MCMRIZ01>\r\nMIME-Version: 1.0\r\nContent-Type: multipart/mixed; \r\n\tboundary=\"----=_Part_4_1098332532.1489555643274\"\r\n\r\n------=_Part_4_1098332532.1489555643274\r\ncontent-type: application/zip\r\nContent-Disposition: attachment; filename=\"echoService.zip\"\r\n\r\nfile content in zip format\r\n------=_Part_4_1098332532.1489555643274\r\ncontent-type: text/plain\r\nContent-Disposition: inline; name=\"rootFileName\"\r\n\r\necho.wsdl\r\n------=_Part_4_1098332532.1489555643274--"
            }
          },
          "404" : {
            "description" : "This status code indicates that the apiId specified is not found in the API Gateway"
          },
          "400" : {
            "description" : "This status code returns when the specified API is not a SOAP API"
          },
          "401" : {
            "description" : "This status code indicates that either user didn't provide right credentials or user doesn't have required privileges to access this API."
          }
        },
        "security" : [ {
          "Basic" : [ ]
        } ]
      }
    },
    "/apis/{apiId}/globalPolicies" : {
      "get" : {
        "description" : "Retrieves the list of active global policies applicable to this API",
        "operationId" : "getAssociatedGlobalPolicies",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "apiId",
          "in" : "path",
          "description" : "API Id for the API to find the list of applicable global policies",
          "required" : true,
          "type" : "string",
          "x-example" : "353bd366-47d4-4703-aecf-9cb40cdcc864"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns the list of global policy names",
            "schema" : {
              "$ref" : "#/definitions/APIResponseGetGlobalPolicies"
            },
            "examples" : {
              "application/json" : "{\r\n  \"globalPolicies\": [\r\n    \"GlobalLogInvocationPolicy\"\r\n  ]\r\n}"
            }
          },
          "404" : {
            "description" : "This status code indicates that the apiId specified is not found in the API Gateway"
          },
          "401" : {
            "description" : "This status code indicates that either user didn't provide right credentials or user doesn't have required privileges to access this API."
          }
        },
        "security" : [ {
          "Basic" : [ ]
        } ]
      }
    },
    "/apis/{apiId}/versions" : {
      "get" : {
        "description" : "Retrieve all the versions of the API",
        "operationId" : "getVersions",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "apiId",
          "in" : "path",
          "description" : "API Id for the API to retrieve the versions",
          "required" : true,
          "type" : "string",
          "x-example" : "353bd366-47d4-4703-aecf-9cb40cdcc864"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns the API versions",
            "schema" : {
              "$ref" : "#/definitions/APIResponseDelete"
            },
            "examples" : {
              "application/json" : "{\r\n  \"apiResponse\": [\r\n    {\r\n      \"api\": {\r\n        \"apiName\": \"ChuckNorrisAPI\",\r\n        \"apiVersion\": \"v2\",\r\n        \"apiDescription\": \"Chuck Norris facts are satirical factoids about martial artist and actor Chuck Norris that have become an Internet phenomenon and as a result have become widespread in popular culture. The 'facts' are normally absurd hyperbolic claims about Norris' toughness, attitude, virility, sophistication, and masculinity.\",\r\n        \"isActive\": false,\r\n        \"type\": \"REST\",\r\n        \"publishedPortals\": [],\r\n        \"systemVersion\": 2,\r\n        \"id\": \"46df4227-a100-486c-9580-0bf388ec6ec7\"\r\n      },\r\n      \"responseStatus\": \"SUCCESS\"\r\n    },\r\n    {\r\n      \"api\": {\r\n        \"apiName\": \"ChuckNorrisAPI\",\r\n        \"apiVersion\": \"1.0\",\r\n        \"apiDescription\": \"Chuck Norris facts are satirical factoids about martial artist and actor Chuck Norris that have become an Internet phenomenon and as a result have become widespread in popular culture. The 'facts' are normally absurd hyperbolic claims about Norris' toughness, attitude, virility, sophistication, and masculinity.\",\r\n        \"isActive\": false,\r\n        \"type\": \"REST\",\r\n        \"publishedPortals\": [],\r\n        \"systemVersion\": 1,\r\n        \"id\": \"25fb937a-8360-41ab-8be5-987b14fe631d\"\r\n      },\r\n      \"responseStatus\": \"SUCCESS\"\r\n    }\r\n  ]\r\n}"
            }
          },
          "404" : {
            "description" : "This status code indicates that the apiId specified is not found in the API Gateway"
          },
          "401" : {
            "description" : "This status code indicates that either user didn't provide right credentials or user doesn't have required privileges to access this API."
          }
        },
        "security" : [ {
          "Basic" : [ ]
        } ]
      },
      "post" : {
        "description" : "Create a new version of an API and retain applications if required",
        "operationId" : "createVersion",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "apiId",
          "in" : "path",
          "description" : "API Id for the API to be versioned",
          "required" : true,
          "type" : "string",
          "x-example" : "353bd366-47d4-4703-aecf-9cb40cdcc864"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "Create version request payload",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/InputVersion"
          },
          "x-examples" : {
            "application/json" : "{\r\n\t\"newApiVersion\" : \"v2\",\r\n\t\"retainApplications\" : true\r\n}"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Return the newly created version of the API",
            "schema" : {
              "$ref" : "#/definitions/APIResponse"
            },
            "examples" : {
              "application/json" : "{\r\n  \"apiResponse\": {\r\n    \"api\": {\r\n      \"apiDefinition\": {\r\n        \"type\": \"rest\",\r\n        \"info\": {\r\n          \"vendorExtensions\": {},\r\n          \"description\": \"Chuck Norris facts are satirical factoids about martial artist and actor Chuck Norris that have become an Internet phenomenon and as a result have become widespread in popular culture. The 'facts' are normally absurd hyperbolic claims about Norris' toughness, attitude, virility, sophistication, and masculinity.\",\r\n          \"version\": \"1.0\",\r\n          \"title\": \"ChuckNorrisAPI\"\r\n        },\r\n        \"host\": \"api.chucknorris.io\",\r\n        \"basePath\": \"/jokes\",\r\n        \"schemes\": [\r\n          \"https\"\r\n        ],\r\n        \"paths\": {\r\n          \"/random\": {\r\n            \"get\": {\r\n              \"summary\": \"GET\",\r\n              \"description\": \"\",\r\n              \"operationId\": \"GET\",\r\n              \"produces\": [\r\n                \"application/json\"\r\n              ],\r\n              \"parameters\": [],\r\n              \"responses\": {},\r\n              \"enabled\": true\r\n            },\r\n            \"enabled\": true\r\n          }\r\n        },\r\n        \"definitions\": {}\r\n      },\r\n      \"nativeEndpoint\": [\r\n        {\r\n          \"passSecurityHeaders\": true,\r\n          \"uri\": \"https://api.chucknorris.io/jokes\",\r\n          \"connectionTimeoutDuration\": 0,\r\n          \"alias\": false\r\n        }\r\n      ],\r\n      \"apiName\": \"ChuckNorrisAPI\",\r\n      \"apiVersion\": \"v2\",\r\n      \"apiDescription\": \"Chuck Norris facts are satirical factoids about martial artist and actor Chuck Norris that have become an Internet phenomenon and as a result have become widespread in popular culture. The 'facts' are normally absurd hyperbolic claims about Norris' toughness, attitude, virility, sophistication, and masculinity.\",\r\n      \"maturityState\": \"Beta\",\r\n      \"isActive\": false,\r\n      \"type\": \"REST\",\r\n      \"owner\": \"Administrator\",\r\n      \"policies\": [\r\n        \"46044b2a-7da4-42c9-a246-10cd24295a64\"\r\n      ],\r\n      \"scopes\": [],\r\n      \"publishedPortals\": [],\r\n      \"creationDate\": \"2017-03-14 11:30:53 GMT\",\r\n      \"prevVersion\": \"25fb937a-8360-41ab-8be5-987b14fe631d\",\r\n      \"systemVersion\": 2,\r\n      \"id\": \"149a002f-1839-46e0-949c-c3c7da5ce0fd\",\r\n      \"oauth2ScopeName\": \"149a002f-1839-46e0-949c-c3c7da5ce0fd\"\r\n    },\r\n    \"responseStatus\": \"SUCCESS\"\r\n  }\r\n}"
            }
          },
          "400" : {
            "description" : "This status code returns when the specified api is not the latest version or if the newApiVersion is empty"
          },
          "404" : {
            "description" : "Not Found"
          },
          "401" : {
            "description" : "This status code indicates that either user didn't provide right credentials or user doesn't have required privileges to access this API."
          }
        },
        "security" : [ {
          "Basic" : [ ]
        } ]
      }
    },
    "/apis/{apiId}/scopes" : {
      "get" : {
        "description" : "An API Scope is a collection of resources or operations in an API. Users can create multiple scopes for a single API. Policies can be attached to an API level or scope level. This method retrieves the scopes of an API.\n\nYou can create, modify or delete the scopes in the update API operation using PUT /api/{apiId}",
        "operationId" : "getScopes",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "apiId",
          "in" : "path",
          "description" : "API Id for the API to retrieve the versions",
          "required" : true,
          "type" : "string",
          "x-example" : "353bd366-47d4-4703-aecf-9cb40cdcc864"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns API scopes",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/ScopeResourceIndex"
              }
            },
            "examples" : {
              "application/json" : "{\r\n  \"scopeReferences\": [\r\n    {\r\n      \"references\": [\r\n        {\r\n          \"resourcePath\": \"/random\",\r\n          \"supportedOperations\": []\r\n        }\r\n      ],\r\n      \"scope\": {\r\n        \"name\": \"Get_Scopes\",\r\n        \"description\": \"Dummy description of the scope\",\r\n        \"policies\": [\r\n          \"db1a42f4-e038-4a1b-82f4-8fee6fbd5687\"\r\n        ]\r\n      }\r\n    }\r\n  ]\r\n}"
            }
          },
          "404" : {
            "description" : "This status code indicates that the apiId specified is not found in the API Gateway"
          },
          "401" : {
            "description" : "This status code indicates that either user didn't provide right credentials or user doesn't have required privileges to access this API."
          }
        },
        "security" : [ {
          "Basic" : [ ]
        } ]
      }
    },
    "/apis/{apiId}/scopes/{scopeName}" : {
      "get" : {
        "description" : "Retrieve scopes of an API based on the scope name",
        "operationId" : "getScopeByScopeName",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "apiId",
          "in" : "path",
          "description" : "API Id for the API to retrieve the versions",
          "required" : true,
          "type" : "string",
          "x-example" : "353bd366-47d4-4703-aecf-9cb40cdcc864"
        }, {
          "name" : "scopeName",
          "in" : "path",
          "description" : "Name of the scope",
          "required" : true,
          "type" : "string",
          "x-example" : "getScope"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns API scopes",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/ScopeResourceIndex"
              }
            },
            "examples" : {
              "application/json" : "{\r\n  \"scopeReferences\": [\r\n    {\r\n      \"references\": [\r\n        {\r\n          \"resourcePath\": \"/random\",\r\n          \"supportedOperations\": []\r\n        }\r\n      ],\r\n      \"scope\": {\r\n        \"name\": \"Get_Scopes\",\r\n        \"description\": \"Dummy description of the scope\",\r\n        \"policies\": [\r\n          \"db1a42f4-e038-4a1b-82f4-8fee6fbd5687\"\r\n        ]\r\n      }\r\n    }\r\n  ]\r\n}"
            }
          },
          "404" : {
            "description" : "This status code indicates that the apiId specified is not found in the API Gateway or scopeName is not found in the list of scopes"
          },
          "401" : {
            "description" : "This status code indicates that either user didn't provide right credentials or user doesn't have required privileges to access this API."
          }
        },
        "security" : [ {
          "Basic" : [ ]
        } ]
      }
    }
  },
  "securityDefinitions" : {
    "Basic" : {
      "description" : "API Gateway Administrator and API Gateway provider",
      "type" : "basic"
    }
  },
  "definitions" : {
    "API" : {
      "type" : "object",
      "discriminator" : "type",
      "properties" : {
        "type" : {
          "type" : "string"
        },
        "title" : {
          "type" : "string"
        },
        "version" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "uri" : {
          "type" : "array",
          "uniqueItems" : true,
          "items" : {
            "type" : "string"
          }
        }
      }
    },
    "AbstractParameter" : {
      "type" : "object",
      "properties" : {
        "vendorExtensions" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "object"
          }
        },
        "in" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "required" : {
          "type" : "boolean"
        },
        "access" : {
          "type" : "string"
        },
        "pattern" : {
          "type" : "string"
        }
      }
    },
    "ArrayModel" : {
      "allOf" : [ {
        "$ref" : "#/definitions/Model"
      }, {
        "type" : "object",
        "properties" : {
          "items" : {
            "$ref" : "#/definitions/Property"
          }
        }
      } ]
    },
    "ArrayProperty" : {
      "allOf" : [ {
        "$ref" : "#/definitions/Property"
      }, {
        "type" : "object",
        "properties" : {
          "uniqueItems" : {
            "type" : "boolean"
          },
          "items" : {
            "$ref" : "#/definitions/Property"
          },
          "maxItems" : {
            "type" : "integer",
            "format" : "int32"
          },
          "minItems" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      } ]
    },
    "BaseIntegerProperty" : {
      "allOf" : [ {
        "$ref" : "#/definitions/Property"
      }, {
        "type" : "object",
        "properties" : {
          "minimum" : {
            "type" : "number"
          },
          "maximum" : {
            "type" : "number"
          },
          "exclusiveMinimum" : {
            "type" : "boolean"
          },
          "exclusiveMaximum" : {
            "type" : "boolean"
          }
        }
      } ]
    },
    "BodyParameter" : {
      "allOf" : [ {
        "$ref" : "#/definitions/Parameter"
      }, {
        "type" : "object",
        "properties" : {
          "schema" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/definitions/Model"
            }
          },
          "examples" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          }
        }
      } ]
    },
    "BooleanProperty" : {
      "allOf" : [ {
        "$ref" : "#/definitions/Property"
      }, {
        "type" : "object",
        "properties" : { }
      } ]
    },
    "ComposedModel" : {
      "allOf" : [ {
        "$ref" : "#/definitions/Model"
      }, {
        "type" : "object",
        "properties" : {
          "allOf" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/ModelObjectObject"
            }
          },
          "parent" : {
            "$ref" : "#/definitions/ModelObjectObject"
          },
          "child" : {
            "$ref" : "#/definitions/ModelObjectObject"
          },
          "interfaces" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/ModelObjectObject"
            }
          }
        }
      } ]
    },
    "Contact" : {
      "type" : "object",
      "properties" : {
        "name" : {
          "type" : "string"
        },
        "url" : {
          "type" : "string"
        },
        "email" : {
          "type" : "string"
        }
      }
    },
    "DateTimeProperty" : {
      "allOf" : [ {
        "$ref" : "#/definitions/Property"
      }, {
        "type" : "object",
        "properties" : {
          "enum" : {
            "type" : "array",
            "items" : {
              "type" : "object"
            }
          }
        }
      } ]
    },
    "DecimalProperty" : {
      "allOf" : [ {
        "$ref" : "#/definitions/Property"
      }, {
        "type" : "object",
        "properties" : {
          "minimum" : {
            "type" : "number"
          },
          "maximum" : {
            "type" : "number"
          },
          "exclusiveMinimum" : {
            "type" : "boolean"
          },
          "exclusiveMaximum" : {
            "type" : "boolean"
          }
        }
      } ]
    },
    "Endpoint" : {
      "type" : "object",
      "properties" : {
        "optimizationTechnique" : {
          "type" : "string"
        },
        "passSecurityHeaders" : {
          "type" : "boolean"
        },
        "uri" : {
          "type" : "string"
        },
        "connectionTimeoutDuration" : {
          "type" : "integer",
          "format" : "int32"
        },
        "alias" : {
          "type" : "boolean"
        }
      }
    },
    "ExternalDocs" : {
      "type" : "object",
      "properties" : {
        "vendorExtensions" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "object"
          }
        },
        "description" : {
          "type" : "string"
        },
        "url" : {
          "type" : "string"
        }
      }
    },
    "FormParameter" : {
      "allOf" : [ {
        "$ref" : "#/definitions/Parameter"
      }, {
        "type" : "object",
        "properties" : {
          "type" : {
            "type" : "string"
          },
          "format" : {
            "type" : "string"
          },
          "collectionFormat" : {
            "type" : "string"
          },
          "items" : {
            "$ref" : "#/definitions/Property"
          },
          "exclusiveMaximum" : {
            "type" : "boolean"
          },
          "maximum" : {
            "type" : "number"
          },
          "exclusiveMinimum" : {
            "type" : "boolean"
          },
          "minimum" : {
            "type" : "number"
          },
          "example" : {
            "type" : "string"
          },
          "maxItems" : {
            "type" : "integer",
            "format" : "int32"
          },
          "minItems" : {
            "type" : "integer",
            "format" : "int32"
          },
          "maxLength" : {
            "type" : "integer",
            "format" : "int32"
          },
          "minLength" : {
            "type" : "integer",
            "format" : "int32"
          },
          "uniqueItems" : {
            "type" : "boolean"
          },
          "multipleOf" : {
            "$ref" : "#/definitions/Number"
          },
          "displayName" : {
            "type" : "string"
          },
          "default" : {
            "type" : "string"
          },
          "_enum" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }
      } ]
    },
    "GatewayAPI" : {
      "type" : "object",
      "properties" : {
        "apiDefinition" : {
          "$ref" : "#/definitions/API"
        },
        "nativeEndpoint" : {
          "type" : "array",
          "readOnly" : true,
          "uniqueItems" : true,
          "items" : {
            "$ref" : "#/definitions/Endpoint"
          }
        },
        "apiName" : {
          "type" : "string"
        },
        "apiVersion" : {
          "type" : "string"
        },
        "apiDescription" : {
          "type" : "string"
        },
        "maturityState" : {
          "type" : "string"
        },
        "apiGroups" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "isActive" : {
          "type" : "boolean",
          "readOnly" : true
        },
        "type" : {
          "type" : "string"
        },
        "owner" : {
          "type" : "string",
          "readOnly" : true
        },
        "policies" : {
          "type" : "array",
          "readOnly" : true,
          "items" : {
            "type" : "string"
          }
        },
        "rootFileName" : {
          "type" : "string",
          "readOnly" : true
        },
        "scopes" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Scope"
          }
        },
        "publishedPortals" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "creationDate" : {
          "type" : "string",
          "readOnly" : true
        },
        "lastModified" : {
          "type" : "string",
          "readOnly" : true
        },
        "prevVersion" : {
          "type" : "string",
          "readOnly" : true
        },
        "nextVersion" : {
          "type" : "string",
          "readOnly" : true
        },
        "systemVersion" : {
          "type" : "integer",
          "format" : "int32",
          "readOnly" : true
        },
        "mockService" : {
          "$ref" : "#/definitions/MockService"
        },
        "id" : {
          "type" : "string"
        },
        "oauth2ScopeName" : {
          "type" : "string"
        }
      }
    },
    "HeaderParameter" : {
      "allOf" : [ {
        "$ref" : "#/definitions/Parameter"
      }, {
        "type" : "object",
        "properties" : {
          "type" : {
            "type" : "string"
          },
          "format" : {
            "type" : "string"
          },
          "collectionFormat" : {
            "type" : "string"
          },
          "items" : {
            "$ref" : "#/definitions/Property"
          },
          "exclusiveMaximum" : {
            "type" : "boolean"
          },
          "maximum" : {
            "type" : "number"
          },
          "exclusiveMinimum" : {
            "type" : "boolean"
          },
          "minimum" : {
            "type" : "number"
          },
          "example" : {
            "type" : "string"
          },
          "maxItems" : {
            "type" : "integer",
            "format" : "int32"
          },
          "minItems" : {
            "type" : "integer",
            "format" : "int32"
          },
          "maxLength" : {
            "type" : "integer",
            "format" : "int32"
          },
          "minLength" : {
            "type" : "integer",
            "format" : "int32"
          },
          "uniqueItems" : {
            "type" : "boolean"
          },
          "multipleOf" : {
            "$ref" : "#/definitions/Number"
          },
          "displayName" : {
            "type" : "string"
          },
          "default" : {
            "type" : "string"
          },
          "_enum" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }
      } ]
    },
    "Info" : {
      "type" : "object",
      "properties" : {
        "vendorExtensions" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "object"
          }
        },
        "description" : {
          "type" : "string"
        },
        "version" : {
          "type" : "string"
        },
        "title" : {
          "type" : "string"
        },
        "termsOfService" : {
          "type" : "string"
        },
        "contact" : {
          "$ref" : "#/definitions/Contact"
        },
        "license" : {
          "$ref" : "#/definitions/Licence"
        }
      }
    },
    "Licence" : {
      "type" : "object",
      "properties" : {
        "vendorExtensions" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "object"
          }
        },
        "name" : {
          "type" : "string"
        },
        "url" : {
          "type" : "string"
        }
      }
    },
    "MapProperty" : {
      "allOf" : [ {
        "$ref" : "#/definitions/Property"
      }, {
        "type" : "object",
        "properties" : {
          "additionalProperties" : {
            "$ref" : "#/definitions/Property"
          }
        }
      } ]
    },
    "MessageFrame" : {
      "type" : "object",
      "properties" : {
        "origin" : {
          "type" : "string",
          "enum" : [ "Server", "Client" ]
        },
        "type" : {
          "type" : "string",
          "enum" : [ "Binary", "Text" ]
        },
        "messagePayload" : {
          "type" : "string"
        },
        "messageDescription" : {
          "type" : "string"
        }
      }
    },
    "MockService" : {
      "type" : "object",
      "properties" : {
        "enableMock" : {
          "type" : "boolean"
        },
        "runAsUser" : {
          "type" : "string"
        },
        "service" : {
          "type" : "string"
        }
      }
    },
    "MockedCondition" : {
      "type" : "object",
      "properties" : {
        "mockedConditionParameter" : {
          "type" : "string",
          "enum" : [ "BODY", "HEADER", "QUERYPARAMETER" ]
        },
        "mockedLevel1Operator" : {
          "type" : "string",
          "enum" : [ "EQUALS", "NOTEQUALS", "CONTAINSKEY", "CONTAINSKEYVALUE" ]
        },
        "mockedLevel2Operator" : {
          "type" : "string",
          "enum" : [ "EQUALS", "NOTEQUALS", "CONTAINS", "STARTSWITH", "ENDSWITH" ]
        },
        "value1" : {
          "type" : "string"
        },
        "value2" : {
          "type" : "string"
        },
        "conditionName" : {
          "type" : "string"
        }
      }
    },
    "MockedConditionsBasedCustomResponse" : {
      "type" : "object",
      "properties" : {
        "mockedConditionList" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/MockedCondition"
          }
        },
        "mockedResponse" : {
          "$ref" : "#/definitions/MockedResponse"
        }
      }
    },
    "MockedResponse" : {
      "type" : "object",
      "properties" : {
        "responseBody" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "object"
          }
        },
        "responseHeaders" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "object"
          }
        },
        "statusCode" : {
          "type" : "string"
        }
      }
    },
    "Model" : {
      "type" : "object",
      "discriminator" : "type",
      "properties" : {
        "properties" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "object"
          }
        },
        "type" : {
          "type" : "string"
        },
        "title" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "vendorExtensions" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "object"
          }
        },
        "example" : {
          "type" : "object"
        },
        "reference" : {
          "type" : "string"
        },
        "externalDocs" : {
          "$ref" : "#/definitions/ExternalDocs"
        }
      }
    },
    "ModelImpl" : {
      "allOf" : [ {
        "$ref" : "#/definitions/Model"
      }, {
        "type" : "object",
        "properties" : {
          "format" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "required" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "properties" : {
            "type" : "object",
            "readOnly" : true,
            "additionalProperties" : {
              "$ref" : "#/definitions/Property"
            }
          },
          "discriminator" : {
            "type" : "string"
          },
          "xml" : {
            "$ref" : "#/definitions/Xml"
          },
          "defaultValue" : {
            "type" : "object"
          }
        }
      } ]
    },
    "ModelObjectObject" : {
      "type" : "object",
      "discriminator" : "type",
      "properties" : {
        "properties" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "object"
          }
        },
        "type" : {
          "type" : "string"
        },
        "title" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "vendorExtensions" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "object"
          }
        },
        "example" : {
          "type" : "object"
        },
        "reference" : {
          "type" : "string"
        },
        "externalDocs" : {
          "$ref" : "#/definitions/ExternalDocs"
        }
      }
    },
    "Number" : {
      "type" : "object"
    },
    "ObjectProperty" : {
      "allOf" : [ {
        "$ref" : "#/definitions/Property"
      }, {
        "type" : "object",
        "properties" : {
          "properties" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/definitions/Property"
            }
          }
        }
      } ]
    },
    "Operation" : {
      "type" : "object",
      "properties" : {
        "vendorExtensions" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "object"
          }
        },
        "tags" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "summary" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "operationId" : {
          "type" : "string"
        },
        "schemes" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "consumes" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "produces" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "parameters" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Parameter"
          }
        },
        "responses" : {
          "type" : "object",
          "additionalProperties" : {
            "$ref" : "#/definitions/Response"
          }
        },
        "mockedResponses" : {
          "type" : "object",
          "additionalProperties" : {
            "$ref" : "#/definitions/MockedResponse"
          }
        },
        "mockedConditionsBasedCustomResponsesList" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/MockedConditionsBasedCustomResponse"
          }
        },
        "security" : {
          "type" : "array",
          "items" : {
            "type" : "object"
          }
        },
        "externalDocs" : {
          "$ref" : "#/definitions/ExternalDocs"
        },
        "deprecated" : {
          "type" : "boolean"
        },
        "enabled" : {
          "type" : "boolean"
        },
        "scopes" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        }
      }
    },
    "Parameter" : {
      "type" : "object",
      "discriminator" : "in",
      "properties" : {
        "name" : {
          "type" : "string"
        },
        "in" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "vendorExtensions" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "object"
          }
        },
        "required" : {
          "type" : "boolean"
        },
        "access" : {
          "type" : "string"
        },
        "pattern" : {
          "type" : "string"
        }
      }
    },
    "Path" : {
      "type" : "object",
      "properties" : {
        "vendorExtensions" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "object"
          }
        },
        "get" : {
          "$ref" : "#/definitions/Operation"
        },
        "put" : {
          "$ref" : "#/definitions/Operation"
        },
        "post" : {
          "$ref" : "#/definitions/Operation"
        },
        "head" : {
          "$ref" : "#/definitions/Operation"
        },
        "delete" : {
          "$ref" : "#/definitions/Operation"
        },
        "patch" : {
          "$ref" : "#/definitions/Operation"
        },
        "options" : {
          "$ref" : "#/definitions/Operation"
        },
        "parameters" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Parameter"
          }
        },
        "scopes" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "displayName" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "security" : {
          "type" : "array",
          "items" : {
            "type" : "object"
          }
        },
        "enabled" : {
          "type" : "boolean"
        }
      }
    },
    "PathParameter" : {
      "allOf" : [ {
        "$ref" : "#/definitions/Parameter"
      }, {
        "type" : "object",
        "properties" : {
          "type" : {
            "type" : "string"
          },
          "format" : {
            "type" : "string"
          },
          "collectionFormat" : {
            "type" : "string"
          },
          "items" : {
            "$ref" : "#/definitions/Property"
          },
          "exclusiveMaximum" : {
            "type" : "boolean"
          },
          "maximum" : {
            "type" : "number"
          },
          "exclusiveMinimum" : {
            "type" : "boolean"
          },
          "minimum" : {
            "type" : "number"
          },
          "example" : {
            "type" : "string"
          },
          "maxItems" : {
            "type" : "integer",
            "format" : "int32"
          },
          "minItems" : {
            "type" : "integer",
            "format" : "int32"
          },
          "maxLength" : {
            "type" : "integer",
            "format" : "int32"
          },
          "minLength" : {
            "type" : "integer",
            "format" : "int32"
          },
          "uniqueItems" : {
            "type" : "boolean"
          },
          "multipleOf" : {
            "$ref" : "#/definitions/Number"
          },
          "displayName" : {
            "type" : "string"
          },
          "default" : {
            "type" : "string"
          },
          "_enum" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }
      } ]
    },
    "Property" : {
      "type" : "object",
      "discriminator" : "type",
      "properties" : {
        "name" : {
          "type" : "string"
        },
        "readOnly" : {
          "type" : "boolean"
        },
        "type" : {
          "type" : "string"
        },
        "title" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "vendorExtensions" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "object"
          }
        },
        "required" : {
          "type" : "boolean"
        },
        "access" : {
          "type" : "string"
        },
        "example" : {
          "type" : "object"
        },
        "format" : {
          "type" : "string"
        },
        "position" : {
          "type" : "integer",
          "format" : "int32"
        },
        "xml" : {
          "$ref" : "#/definitions/Xml"
        }
      }
    },
    "QueryParameter" : {
      "allOf" : [ {
        "$ref" : "#/definitions/Parameter"
      }, {
        "type" : "object",
        "properties" : {
          "type" : {
            "type" : "string"
          },
          "format" : {
            "type" : "string"
          },
          "collectionFormat" : {
            "type" : "string"
          },
          "items" : {
            "$ref" : "#/definitions/Property"
          },
          "exclusiveMaximum" : {
            "type" : "boolean"
          },
          "maximum" : {
            "type" : "number"
          },
          "exclusiveMinimum" : {
            "type" : "boolean"
          },
          "minimum" : {
            "type" : "number"
          },
          "example" : {
            "type" : "string"
          },
          "maxItems" : {
            "type" : "integer",
            "format" : "int32"
          },
          "minItems" : {
            "type" : "integer",
            "format" : "int32"
          },
          "maxLength" : {
            "type" : "integer",
            "format" : "int32"
          },
          "minLength" : {
            "type" : "integer",
            "format" : "int32"
          },
          "uniqueItems" : {
            "type" : "boolean"
          },
          "multipleOf" : {
            "$ref" : "#/definitions/Number"
          },
          "displayName" : {
            "type" : "string"
          },
          "default" : {
            "type" : "string"
          },
          "_enum" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }
      } ]
    },
    "RefModel" : {
      "allOf" : [ {
        "$ref" : "#/definitions/Model"
      }, {
        "type" : "object",
        "properties" : {
          "simpleRef" : {
            "type" : "string"
          },
          "get$ref" : {
            "type" : "string"
          },
          "refFormat" : {
            "type" : "string",
            "enum" : [ "URL", "RELATIVE", "INTERNAL" ]
          }
        }
      } ]
    },
    "RefProperty" : {
      "allOf" : [ {
        "$ref" : "#/definitions/Property"
      }, {
        "type" : "object",
        "properties" : {
          "simpleRef" : {
            "type" : "string"
          },
          "get$ref" : {
            "type" : "string"
          },
          "refFormat" : {
            "type" : "string",
            "enum" : [ "URL", "RELATIVE", "INTERNAL" ]
          }
        }
      } ]
    },
    "Response" : {
      "type" : "object",
      "properties" : {
        "vendorExtensions" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "object"
          }
        },
        "description" : {
          "type" : "string"
        },
        "schema" : {
          "type" : "object",
          "additionalProperties" : {
            "$ref" : "#/definitions/Property"
          }
        },
        "examples" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "object"
          }
        },
        "headers" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "object"
          }
        }
      }
    },
    "RestAPI" : {
      "allOf" : [ {
        "$ref" : "#/definitions/API"
      }, {
        "type" : "object",
        "properties" : {
          "vendorExtensions" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object"
            }
          },
          "info" : {
            "$ref" : "#/definitions/Info"
          },
          "host" : {
            "type" : "string"
          },
          "basePath" : {
            "type" : "string"
          },
          "tags" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/Tag"
            }
          },
          "schemes" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "consumes" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "produces" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "security" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/SecurityRequirement"
            }
          },
          "paths" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/definitions/Path"
            }
          },
          "securityDefinitions" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object"
            }
          },
          "definitions" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/definitions/Model"
            }
          },
          "parameters" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/definitions/Parameter"
            }
          },
          "baseUriParameters" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/AbstractParameter"
            }
          },
          "responses" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/definitions/Response"
            }
          },
          "externalDocs" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/ExternalDocs"
            }
          }
        }
      } ]
    },
    "RestEnabledPath" : {
      "type" : "object",
      "properties" : {
        "vendorExtensions" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "object"
          }
        },
        "get" : {
          "$ref" : "#/definitions/Operation"
        },
        "put" : {
          "$ref" : "#/definitions/Operation"
        },
        "post" : {
          "$ref" : "#/definitions/Operation"
        },
        "head" : {
          "$ref" : "#/definitions/Operation"
        },
        "delete" : {
          "$ref" : "#/definitions/Operation"
        },
        "patch" : {
          "$ref" : "#/definitions/Operation"
        },
        "options" : {
          "$ref" : "#/definitions/Operation"
        },
        "parameters" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Parameter"
          }
        },
        "scopes" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "displayName" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "security" : {
          "type" : "array",
          "items" : {
            "type" : "object"
          }
        },
        "enabled" : {
          "type" : "boolean"
        },
        "name" : {
          "type" : "string"
        },
        "invokePath" : {
          "type" : "string"
        }
      }
    },
    "SOAPAPI" : {
      "allOf" : [ {
        "$ref" : "#/definitions/API"
      }, {
        "type" : "object",
        "properties" : {
          "wsdl" : {
            "type" : "string"
          },
          "baseWsdlUri" : {
            "type" : "string"
          },
          "nativeUri" : {
            "type" : "array",
            "uniqueItems" : true,
            "items" : {
              "type" : "string"
            }
          },
          "rootFileFolder" : {
            "type" : "string"
          },
          "serviceName" : {
            "type" : "string"
          },
          "operationsInfo" : {
            "type" : "array",
            "uniqueItems" : true,
            "items" : {
              "$ref" : "#/definitions/SOAPOperation"
            }
          },
          "operationPolicies" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          },
          "isRESTInvokeEnabled" : {
            "type" : "boolean"
          },
          "primaryEndpoint" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "boolean"
            }
          }
        }
      } ]
    },
    "SOAPBinding" : {
      "type" : "object",
      "properties" : {
        "name" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string"
        },
        "specifier" : {
          "type" : "string"
        },
        "interFace" : {
          "$ref" : "#/definitions/SOAPInterface"
        },
        "inputMessage" : {
          "type" : "string"
        },
        "outputMessage" : {
          "type" : "string"
        },
        "faultMessages" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        }
      }
    },
    "SOAPInterface" : {
      "type" : "object",
      "properties" : {
        "name" : {
          "type" : "string"
        },
        "operations" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/SOAPOperation"
          }
        }
      }
    },
    "SOAPOperation" : {
      "type" : "object",
      "properties" : {
        "name" : {
          "type" : "string"
        },
        "namespace" : {
          "type" : "string"
        },
        "enabled" : {
          "type" : "boolean"
        },
        "bindings" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/SOAPBinding"
          }
        },
        "mockedResponses" : {
          "type" : "object",
          "additionalProperties" : {
            "$ref" : "#/definitions/MockedResponse"
          }
        },
        "mockedConditionsBasedCustomResponsesList" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/MockedConditionsBasedCustomResponse"
          }
        },
        "defined" : {
          "type" : "boolean"
        },
        "soapAction" : {
          "type" : "string"
        },
        "isRESTInvokeEnabled" : {
          "type" : "boolean"
        },
        "restEnabledPath" : {
          "$ref" : "#/definitions/RestEnabledPath"
        },
        "scopes" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        }
      }
    },
    "Scope" : {
      "type" : "object",
      "properties" : {
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "getoAuth2ScopeName" : {
          "type" : "string"
        },
        "policies" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        }
      }
    },
    "SecurityRequirement" : {
      "type" : "object",
      "properties" : {
        "name" : {
          "type" : "string"
        },
        "scopes" : {
          "type" : "array",
          "items" : {
            "type" : "object"
          }
        },
        "requirements" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "object"
          }
        },
        "parameters" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "object"
          }
        }
      }
    },
    "StringProperty" : {
      "allOf" : [ {
        "$ref" : "#/definitions/Property"
      }, {
        "type" : "object",
        "properties" : {
          "minLength" : {
            "type" : "integer",
            "format" : "int32"
          },
          "maxLength" : {
            "type" : "integer",
            "format" : "int32"
          },
          "pattern" : {
            "type" : "string"
          },
          "enum" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }
      } ]
    },
    "StringSchemaModel" : {
      "allOf" : [ {
        "$ref" : "#/definitions/ModelObjectObject"
      }, {
        "type" : "object",
        "properties" : {
          "schema" : {
            "type" : "string"
          }
        }
      } ]
    },
    "StringSchemaProperty" : {
      "allOf" : [ {
        "$ref" : "#/definitions/Property"
      }, {
        "type" : "object",
        "properties" : {
          "schema" : {
            "type" : "string"
          }
        }
      } ]
    },
    "Tag" : {
      "type" : "object",
      "properties" : {
        "vendorExtensions" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "object"
          }
        },
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "externalDocs" : {
          "$ref" : "#/definitions/ExternalDocs"
        }
      }
    },
    "WebsocketAPI" : {
      "allOf" : [ {
        "$ref" : "#/definitions/API"
      }, {
        "type" : "object",
        "properties" : {
          "nativeUri" : {
            "type" : "array",
            "uniqueItems" : true,
            "items" : {
              "type" : "string"
            }
          },
          "supportedSubProtocols" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "tags" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/Tag"
            }
          },
          "externalDocs" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/ExternalDocs"
            }
          },
          "messages" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/MessageFrame"
            }
          },
          "parameters" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/definitions/AbstractParameter"
            }
          }
        }
      } ]
    },
    "Xml" : {
      "type" : "object",
      "properties" : {
        "name" : {
          "type" : "string"
        },
        "namespace" : {
          "type" : "string"
        },
        "prefix" : {
          "type" : "string"
        },
        "attribute" : {
          "type" : "boolean"
        },
        "wrapped" : {
          "type" : "boolean"
        }
      }
    },
    "APIResponseCreate" : {
      "type" : "object",
      "properties" : {
        "api" : {
          "$ref" : "#/definitions/GatewayAPI"
        },
        "errorReason" : {
          "type" : "string"
        },
        "responseStatus" : {
          "type" : "string",
          "enum" : [ "SUCCESS", "ERROR", "NOT_FOUND", "BAD_REQUEST", "PARTIAL_SUCCESS" ]
        },
        "apiId" : {
          "type" : "string"
        }
      }
    },
    "APIResponse" : {
      "type" : "object",
      "properties" : {
        "apiId" : {
          "type" : "string"
        },
        "api" : {
          "$ref" : "#/definitions/GatewayAPI"
        },
        "responseStatus" : {
          "type" : "string",
          "enum" : [ "SUCCESS", "ERROR", "NOT_FOUND", "BAD_REQUEST", "PARTIAL_SUCCESS" ]
        },
        "errorReason" : {
          "type" : "string"
        },
        "gatewayEndPoints" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "reason" : {
          "type" : "object"
        },
        "portalGatewayDataEntries" : {
          "type" : "object"
        }
      }
    },
    "InputPublish" : {
      "type" : "object",
      "properties" : {
        "communities" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "endpoints" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "portalGatewayId" : {
          "type" : "string"
        }
      }
    },
    "APIResponseDelete" : {
      "type" : "object",
      "properties" : {
        "errorReason" : {
          "type" : "string"
        },
        "responseStatus" : {
          "type" : "string",
          "enum" : [ "SUCCESS", "ERROR", "NOT_FOUND", "BAD_REQUEST", "PARTIAL_SUCCESS" ]
        },
        "apiId" : {
          "type" : "string"
        }
      }
    },
    "APIResponseGetAPI" : {
      "type" : "object",
      "properties" : {
        "versions" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Version"
          }
        },
        "gatewayEndPoints" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "api" : {
          "$ref" : "#/definitions/GatewayAPI"
        },
        "errorReason" : {
          "type" : "string"
        },
        "responseStatus" : {
          "type" : "string",
          "enum" : [ "SUCCESS", "ERROR", "NOT_FOUND", "BAD_REQUEST", "PARTIAL_SUCCESS" ]
        },
        "apiId" : {
          "type" : "string"
        }
      }
    },
    "Version" : {
      "type" : "object",
      "properties" : {
        "versionNumber" : {
          "type" : "string"
        },
        "apiId" : {
          "type" : "string"
        }
      }
    },
    "APIAccessKey" : {
      "type" : "object",
      "properties" : {
        "apiAccessKey" : {
          "type" : "string",
          "description" : "API access key"
        },
        "expirationInterval" : {
          "type" : "string",
          "description" : "expiration interval of the api key"
        },
        "expirationDate" : {
          "type" : "string",
          "description" : "expiration date of the api key"
        }
      }
    },
    "Application" : {
      "type" : "object",
      "properties" : {
        "applicationID" : {
          "type" : "string",
          "description" : "unique identifier of an application"
        },
        "name" : {
          "type" : "string",
          "description" : "name of the application"
        },
        "description" : {
          "type" : "string",
          "description" : "description of the application"
        },
        "owner" : {
          "type" : "string",
          "description" : "owner of the application"
        },
        "identifiers" : {
          "type" : "array",
          "description" : "list of all application identifiers",
          "items" : {
            "$ref" : "#/definitions/ApplicationIdentifier"
          }
        },
        "contactEmails" : {
          "type" : "array",
          "description" : "list of email contacts",
          "items" : {
            "type" : "string"
          }
        },
        "iconbyteArray" : {
          "type" : "string",
          "description" : "application icon byte array"
        },
        "accessTokens" : {
          "description" : "access tokens associated with the application",
          "$ref" : "#/definitions/ApplicationToken"
        },
        "creationDate" : {
          "type" : "string",
          "description" : "application creation time"
        },
        "lastModified" : {
          "type" : "string",
          "description" : "last modified time of the application"
        },
        "siteURLs" : {
          "type" : "array",
          "description" : "list of all site URLs",
          "items" : {
            "type" : "string"
          }
        },
        "version" : {
          "type" : "string"
        },
        "subscription" : {
          "type" : "boolean"
        }
      }
    },
    "ApplicationIdentifier" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string",
          "description" : "unique identifier of the application identifier"
        },
        "key" : {
          "type" : "string",
          "description" : "identifier type"
        },
        "name" : {
          "type" : "string",
          "description" : "name of the identifier"
        },
        "value" : {
          "type" : "array",
          "description" : "list of identifier values",
          "items" : {
            "type" : "string"
          }
        }
      }
    },
    "ApplicationToken" : {
      "type" : "object",
      "properties" : {
        "apiAccessKey" : {
          "description" : "the API KEY access credentials",
          "$ref" : "#/definitions/APIAccessKey"
        },
        "oauth2Token" : {
          "$ref" : "#/definitions/OAuth2Token"
        }
      }
    },
    "OAuth2Token" : {
      "type" : "object",
      "properties" : {
        "type" : {
          "type" : "string",
          "description" : "type of the oauth2 client"
        },
        "clientId" : {
          "type" : "string",
          "description" : "unique identifier of the oauth2 client"
        },
        "clientSecret" : {
          "type" : "string",
          "description" : "the client secret"
        },
        "clientName" : {
          "type" : "string",
          "description" : "the name of the client"
        },
        "scopes" : {
          "type" : "array",
          "description" : "the scopes associated with the client",
          "items" : {
            "type" : "string"
          }
        },
        "expirationInterval" : {
          "type" : "string",
          "description" : "the expiration interval"
        },
        "refreshCount" : {
          "type" : "string",
          "description" : "number of times an access token can be refreshed"
        },
        "redirectUris" : {
          "type" : "array",
          "description" : "list of redirect uris",
          "items" : {
            "type" : "string"
          }
        }
      }
    },
    "CommandInfo" : {
      "type" : "object",
      "properties" : {
        "commandClass" : {
          "type" : "string"
        },
        "commandName" : {
          "type" : "string"
        }
      }
    },
    "DataFlavor" : {
      "type" : "object",
      "properties" : {
        "mimeType" : {
          "type" : "string"
        },
        "humanPresentableName" : {
          "type" : "string"
        },
        "defaultRepresentationClassAsString" : {
          "type" : "string"
        },
        "primaryType" : {
          "type" : "string"
        },
        "subType" : {
          "type" : "string"
        },
        "flavorJavaFileListType" : {
          "type" : "boolean"
        },
        "flavorRemoteObjectType" : {
          "type" : "boolean"
        },
        "flavorSerializedObjectType" : {
          "type" : "boolean"
        },
        "flavorTextType" : {
          "type" : "boolean"
        },
        "mimeTypeSerializedObject" : {
          "type" : "boolean"
        },
        "representationClassByteBuffer" : {
          "type" : "boolean"
        },
        "representationClassCharBuffer" : {
          "type" : "boolean"
        },
        "representationClassInputStream" : {
          "type" : "boolean"
        },
        "representationClassReader" : {
          "type" : "boolean"
        },
        "representationClassRemote" : {
          "type" : "boolean"
        },
        "representationClassSerializable" : {
          "type" : "boolean"
        }
      }
    },
    "DataHandler" : {
      "type" : "object",
      "properties" : {
        "dataSource" : {
          "$ref" : "#/definitions/DataSource"
        },
        "name" : {
          "type" : "string"
        },
        "inputStream" : {
          "$ref" : "#/definitions/InputStream"
        },
        "content" : {
          "type" : "object"
        },
        "contentType" : {
          "type" : "string"
        },
        "outputStream" : {
          "$ref" : "#/definitions/OutputStream"
        },
        "allCommands" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/CommandInfo"
          }
        },
        "preferredCommands" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/CommandInfo"
          }
        },
        "transferDataFlavors" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/DataFlavor"
          }
        }
      }
    },
    "DataSource" : {
      "type" : "object",
      "properties" : {
        "name" : {
          "type" : "string"
        },
        "inputStream" : {
          "$ref" : "#/definitions/InputStream"
        },
        "contentType" : {
          "type" : "string"
        },
        "outputStream" : {
          "$ref" : "#/definitions/OutputStream"
        }
      }
    },
    "Enumeration" : {
      "type" : "object"
    },
    "InputStream" : {
      "type" : "object"
    },
    "Multipart" : {
      "type" : "object",
      "properties" : {
        "contentType" : {
          "type" : "string"
        },
        "parent" : {
          "$ref" : "#/definitions/Part"
        },
        "count" : {
          "type" : "integer",
          "format" : "int32"
        }
      }
    },
    "OutputStream" : {
      "type" : "object"
    },
    "Part" : {
      "type" : "object",
      "properties" : {
        "size" : {
          "type" : "integer",
          "format" : "int32"
        },
        "inputStream" : {
          "$ref" : "#/definitions/InputStream"
        },
        "content" : {
          "type" : "object"
        },
        "fileName" : {
          "type" : "string"
        },
        "contentType" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "allHeaders" : {
          "$ref" : "#/definitions/Enumeration"
        },
        "dataHandler" : {
          "$ref" : "#/definitions/DataHandler"
        },
        "disposition" : {
          "type" : "string"
        },
        "lineCount" : {
          "type" : "integer",
          "format" : "int32"
        }
      }
    },
    "APIResponseGetGlobalPolicies" : {
      "type" : "object",
      "properties" : {
        "globalPolicies" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        }
      }
    },
    "ScopeInformation" : {
      "type" : "object",
      "properties" : {
        "resourcePath" : {
          "type" : "string"
        },
        "supportedOperations" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        }
      }
    },
    "ScopeResourceIndex" : {
      "type" : "object",
      "properties" : {
        "references" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ScopeInformation"
          }
        },
        "scope" : {
          "$ref" : "#/definitions/Scope"
        }
      }
    },
    "AuthorizationValue" : {
      "type" : "object",
      "properties" : {
        "value" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string"
        },
        "keyName" : {
          "type" : "string"
        }
      }
    },
    "InputAPI" : {
      "type" : "object",
      "required" : [ "apiName", "type" ],
      "properties" : {
        "url" : {
          "type" : "string",
          "description" : "Required when creating an API by importing URL"
        },
        "authorizationValue" : {
          "description" : "Required when creating an API by importing protected URL",
          "$ref" : "#/definitions/AuthorizationValue"
        },
        "apiDefinition" : {
          "description" : "Required when creating an API from scratch",
          "$ref" : "#/definitions/API"
        },
        "apiName" : {
          "type" : "string"
        },
        "apiVersion" : {
          "type" : "string"
        },
        "apiDescription" : {
          "type" : "string"
        },
        "maturityState" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string"
        },
        "rootFileName" : {
          "type" : "string",
          "description" : "Required when creating an API by importing protected URL"
        }
      }
    },
    "InputVersion" : {
      "type" : "object",
      "required" : [ "newApiVersion" ],
      "properties" : {
        "newApiVersion" : {
          "type" : "string"
        },
        "retainApplications" : {
          "type" : "boolean"
        }
      }
    }
  }
}