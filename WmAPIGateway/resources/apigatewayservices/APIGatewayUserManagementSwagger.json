{
  "swagger" : "2.0",
  "info" : {
    "description" : "API Gateway User Management Service allows you to manage Users,Groups and Accessprofiles in the API Gateway. Any user with the 'Manage user management' functional privilege can manage the APIs in the API Gateway. By default, the users who are part of API-Gateway-Administrators groups will have this privilege.\n\nAPI Gateway is shipped with the following predefined access profiles:\n\t- Administrators: By default, all the functional privileges are assigned to the Administrators access profile and these privileges cannot be modified.\n\tAPI-Gateway-Providers: By default, the following functional privileges are assigned to the API-Gateway-Providers access profile and these privileges cannot be modified:\n\t\t* Manage APIs, Manage Applications, Manage policy templates, Manage packages and plans, Export assets, Execute service result cache APIs, Activate APIs, Manage aliases, Activate packages, Import assets\n\nFunctional privileges are a list of API Gateway related tasks that you can assign to an access profile that is associated to groups. API Gateway allows you to assign functional privileges to a user or group (LDAP or local) using access profiles. The functional privileges are grouped together to form an access profile, which is associated to a group. You can create an access profile, add functional privileges with the profile, associate groups to access profiles, and delete an access profile. For example, you can assign functional privileges such as managing APIs, managing applications, managing policies, managing importing assets can be assigned to a user group after grouping the privileges in an access profile.",
    "version" : "10.2",
    "title" : "API Gateway User Management Service"
  },
  "host" : "localhost:5555",
  "basePath" : "/rest/apigateway",
  "schemes" : [ "http" ],
  "consumes" : [ "application/json" ],
  "produces" : [ "application/json" ],
  "paths" : {
    "/accessProfiles" : {
      "get" : {
        "description" : "The method retrieves list of all access profiles in API Gateway.",
        "operationId" : "getAccessProfilesFromIC",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "This status code indicates that the list of access profiles is successfully retrieved.",
            "schema" : {
              "$ref" : "#/definitions/AccessProfile"
            },
            "examples" : {
              "application/json" : "{\r\n    \"accessProfiles\": [\r\n        {\r\n            \"id\": \"Administrators\",\r\n            \"name\": \"Administrators\",\r\n            \"description\": \"Groups associated to this access profile are allowed to perform all the administration related tasks. \",\r\n            \"systemDefined\": true,\r\n            \"privilege\": \"1111111111111111111111111111111111111111111111111111111111111111\",\r\n            \"groupIds\": [\r\n                \"Administrators\",\r\n                \"API-Gateway-Administrators\"\r\n            ]\r\n        },\r\n        {\r\n            \"id\": \"API-Gateway-Providers\",\r\n            \"name\": \"API-Gateway-Providers\",\r\n            \"description\": \"Groups associated to this access profile are allowed to access an asset based on the functional privileges assigned to this access profile.\",\r\n            \"systemDefined\": true,\r\n            \"privilege\": \"111100101101100000001\",\r\n            \"groupIds\": [\r\n                \"API-Gateway-Providers\"\r\n            ]\r\n        },\r\n        {\r\n            \"id\": \"8b6f2e10-1d82-4813-b927-4c1cf4a4d029\",\r\n            \"name\": \"TestProfile\",\r\n            \"description\": \"Test\",\r\n            \"systemDefined\": false,\r\n            \"privilege\": \"1011100000011000001\",\r\n            \"groupIds\": [\r\n                \"be9147a8-6e53-4472-b1bd-16337a84d314\"\r\n            ]\r\n        }\r\n    ]\r\n}"
            }
          },
          "401" : {
            "description" : "This status code indicates that either user didn't provide right credentials or user doesn't have required privileges to access this API."
          }
        },
        "security" : [ {
          "Basic" : [ ]
        } ]
      },
      "post" : {
        "description" : "The method creates an access profile in API Gateway. The API request body must contain the payload for the access profile.Each bit infers the applicablity of the functional privilege permission. Value 1 implies permission granted for that functional privilege. Value  0 implies denied permission. Function Privileges and its positions. 1. Manage APIs2.Activate / Deactivate APIs3.Manage applications4.Manage aliases5.Manage global policies6.Activate / Deactivate global policies7.Manage policy templates8.Manage threat protection configurations9.Manage packages and plans10.Activate / Deactivate packages11.Publish to API Portal12.Import assets13.Export assets14.View administration configurations15.Manage general administration configurations16.Manage security configurations17.Manage destination configurations18.Manage system settings19.Manage user administration20.=Manage purge and restore runtime events21.Execute service result cache APIs",
        "operationId" : "createAccessProfile",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "This parameter describes the request payload of a accessProfile that is to be created in API Gateway.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/AccessProfile"
          },
          "x-examples" : {
            "application/json" : "{\r\n               \"name\": \"TestProfile\",\r\n            \"description\": \"Test\",\r\n            \"privilege\": \"1011100000011000001\",\r\n            \"groupIds\": [\r\n                \"be9147a8-6e53-4472-b1bd-16337a84d314\"\r\n            ]\r\n        }"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "This status code indicates that the access profile has been successfully created in API Gateway, and the newly created access profile is available in the response body.",
            "schema" : {
              "$ref" : "#/definitions/AccessProfile"
            },
            "examples" : {
              "application/json" : "{\r\n            \"id\": \"8b6f2e10-1d82-4813-b927-4c1cf4a4d029\",\r\n            \"name\": \"TestProfile\",\r\n            \"description\": \"Test\",\r\n            \"privilege\": \"1011100000011000001\",\r\n            \"groupIds\": [\r\n                \"be9147a8-6e53-4472-b1bd-16337a84d314\"\r\n            ]\r\n        }"
            }
          },
          "400" : {
            "description" : "This status code indicates that an access profile with the given name already exists in API Gateway or the request body is not correct."
          },
          "401" : {
            "description" : "This status code indicates that either user didn't provide right credentials or user doesn't have required privileges to access this API."
          }
        },
        "security" : [ {
          "Basic" : [ ]
        } ]
      }
    },
    "/accessProfiles/{accessProfileId}" : {
      "get" : {
        "description" : "The method retrieves the details of an access profile in API Gateway.",
        "operationId" : "getAccessProfile",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "accessProfileId",
          "in" : "path",
          "description" : "The path parameter specifies the id of an access profile whose details are to be retrieved.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "This status code indicates that the details of the access profile is successfully retrieved.",
            "schema" : {
              "$ref" : "#/definitions/AccessProfile"
            },
            "examples" : {
              "application/json" : "{\r\n    \"accessProfiles\": [\r\n        {\r\n            \"id\": \"8b6f2e10-1d82-4813-b927-4c1cf4a4d029\",\r\n            \"name\": \"TestProfile\",\r\n            \"description\": \"Test\",\r\n            \"systemDefined\": false,\r\n            \"privilege\": \"1011100000011000001\",\r\n            \"groupIds\": [\r\n                \"be9147a8-6e53-4472-b1bd-16337a84d314\"\r\n            ]\r\n        }\r\n    ]\r\n}"
            }
          },
          "404" : {
            "description" : "This status code indicates that an access profile with the given id could not be found in API Gateway.",
            "examples" : {
              "application/json" : "{\r\n    \"errorDetails\": \" AccessProfile with id: 15fbeeb2-745c-4988-b7b6-61f359ecbfc8 does not exist.\"\r\n}"
            }
          },
          "401" : {
            "description" : "This status code indicates that either user didn't provide right credentials or user doesn't have required privileges to access this API."
          }
        },
        "security" : [ {
          "Basic" : [ ]
        } ]
      },
      "put" : {
        "description" : "The method updates the details of a specified access profile in API Gateway. The API request body must contain the payload for the updated accessProfile.",
        "operationId" : "updateAccessProfile",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "This parameter describes the request payload of a accessProfile that is to be updated in API Gateway.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/AccessProfile"
          },
          "x-examples" : {
            "application/json" : "{\r\n               \"name\": \"TestProfile\",\r\n            \"description\": \"Test\",\r\n            \"privilege\": \"1011100000011000001\",\r\n            \"groupIds\": [\r\n                \"be9147a8-6e53-4472-b1bd-16337a84d314\"\r\n            ]\r\n        }"
          }
        }, {
          "name" : "accessProfileId",
          "in" : "path",
          "description" : "The path parameter specifies the id of an access profile whose detail is to be updated in API Gateway.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "This status code indicates that the access profile has been successfully updated in API Gateway, and the updated access profile is available in the response body.",
            "schema" : {
              "$ref" : "#/definitions/AccessProfile"
            },
            "examples" : {
              "application/json" : "{\r\n            \"id\": \"8b6f2e10-1d82-4813-b927-4c1cf4a4d029\",\r\n            \"name\": \"TestProfile\",\r\n            \"description\": \"Test\",\r\n            \"privilege\": \"1011100000011000001\",\r\n            \"groupIds\": [\r\n                \"be9147a8-6e53-4472-b1bd-16337a84d314\"\r\n            ]\r\n        }"
            }
          },
          "400" : {
            "description" : "This status code indicates that the request body is invalid."
          },
          "401" : {
            "description" : "This status code indicates that either user didn't provide right credentials or user doesn't have required privileges to access this API."
          }
        },
        "security" : [ {
          "Basic" : [ ]
        } ]
      },
      "delete" : {
        "description" : "The method deletes an access profile from API Gateway.",
        "operationId" : "deleteAccessProfile",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "accessProfileId",
          "in" : "path",
          "description" : "This parameter specifies the ID of an application that is to be deleted in API Gateway.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "401" : {
            "description" : "This status code indicates that either user didn't provide right credentials or user doesn't have required privileges to access this API."
          },
          "204" : {
            "description" : "This status code indicates that the specified access profile has been successfully deleted from API Gateway."
          },
          "404" : {
            "description" : "This status code indicates that access profile with the given id could not be found in API Gateway.",
            "examples" : {
              "application/json" : "{\r\n    \"errorDetails\": \" AccessProfile with id: 732c4526-db9a-4ef9-9782-edda1a6aa9bc does not exist.\"\r\n}"
            }
          }
        },
        "security" : [ {
          "Basic" : [ ]
        } ]
      }
    },
    "/groups" : {
      "get" : {
        "description" : "The method retrieves list of all groups in API Gateway.",
        "operationId" : "getGroups",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "This status code indicates that the list of groups is successfully retrieved.",
            "schema" : {
              "$ref" : "#/definitions/Group"
            },
            "examples" : {
              "application/json" : "{\r\n    \"groups\": [\r\n        {\r\n            \"id\": \"Administrators\",\r\n            \"name\": \"Administrators\",\r\n            \"description\": \"Users added to this group can perform similar local administrative tasks.\",\r\n            \"type\": \"local\",\r\n            \"systemDefined\": true,\r\n            \"userIds\": [\r\n                \"Administrator\"\r\n            ]\r\n        },\r\n        {\r\n            \"id\": \"API-Gateway-Administrators\",\r\n            \"name\": \"API-Gateway-Administrators\",\r\n            \"description\": \"Users added to this group can perform similar API Gateway Administrative tasks.\",\r\n            \"type\": \"local\",\r\n            \"systemDefined\": true,\r\n            \"userIds\": [\r\n                \"Administrator\"\r\n            ]\r\n        },\r\n        {\r\n            \"id\": \"API-Gateway-Providers\",\r\n            \"name\": \"API-Gateway-Providers\",\r\n            \"description\": \"Users added to this group can perform similar API Gateway Providers tasks.\",\r\n            \"type\": \"local\",\r\n            \"systemDefined\": true,\r\n            \"userIds\": []\r\n        },\r\n        {\r\n            \"id\": \"be9147a8-6e53-4472-b1bd-16337a84d314\",\r\n            \"name\": \"TestGrp\",\r\n            \"description\": \"\",\r\n            \"type\": \"local\",\r\n            \"systemDefined\": false,\r\n            \"userIds\": [\r\n                \"69aa914e-fbfc-4c74-87f1-2d48f589e115\"\r\n            ]\r\n        }\r\n    ]\r\n}"
            }
          },
          "401" : {
            "description" : "This status code indicates that either user didn't provide right credentials or user doesn't have required privileges to access this API."
          }
        },
        "security" : [ {
          "Basic" : [ ]
        } ]
      },
      "post" : {
        "description" : "The method creates a group in API Gateway. The API request body must contain the payload for the group.",
        "operationId" : "createGroup",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "This parameter describes the request payload of a group that is to be created in API Gateway.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Group"
          },
          "x-examples" : {
            "application/json" : "{\r\n\t \"name\": \"TestGrp\",\r\n\t\"description\": \"Group has all QA Members\",\r\n\t\"userIds\": [\r\n\t\t\"69aa914e-fbfc-4c74-87f1-2d48f589e115\"\r\n\t]\r\n}"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "This status code indicates that the group has been successfully created in API Gateway, and the newly created group is available in the response body.",
            "schema" : {
              "$ref" : "#/definitions/Group"
            },
            "examples" : {
              "application/json" : "{\r\n\t\"id\": \"be9147a8-6e53-4472-b1bd-16337a84d314\",\r\n\t\"name\": \"TestGrp\",\r\n\t\"description\": \"Group has all QA Members\",\r\n\t\"type\": \"local\",\r\n\t\"userIds\": [\r\n\t\t\"69aa914e-fbfc-4c74-87f1-2d48f589e115\"\r\n\t]\r\n}"
            }
          },
          "400" : {
            "description" : "This status code indicates that a group with the given name already exists in API Gateway or the request body is not correct."
          },
          "401" : {
            "description" : "This status code indicates that either user didn't provide right credentials or user doesn't have required privileges to access this API."
          }
        },
        "security" : [ {
          "Basic" : [ ]
        } ]
      }
    },
    "/groups/{groupId}" : {
      "get" : {
        "description" : "The method retrieves the details of a group in API Gateway.",
        "operationId" : "getGroup",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "groupId",
          "in" : "path",
          "description" : "The path parameter specifies the id of a group whose details are to be retrieved.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "This status code indicates that the details of the group is successfully retrieved.",
            "schema" : {
              "$ref" : "#/definitions/Group"
            },
            "examples" : {
              "application/json" : "{\r\n    \"groups\": [\r\n        {\r\n            \"id\": \"be9147a8-6e53-4472-b1bd-16337a84d314\",\r\n            \"name\": \"TestGrp\",\r\n            \"description\": \"Group has all QA Members\",\r\n            \"type\": \"local\",\r\n            \"userIds\": [\r\n                \"69aa914e-fbfc-4c74-87f1-2d48f589e115\"\r\n            ]\r\n        }\r\n    ]\r\n}"
            }
          },
          "404" : {
            "description" : "This status code indicates that a group with the given id could not be found in API Gateway.",
            "examples" : {
              "application/json" : "{\r\n    \"errorDetails\": \" Group with id: 15fbeeb2-745c-4988-b7b6-61f359ecbfc8 does not exist.\"\r\n}"
            }
          },
          "401" : {
            "description" : "This status code indicates that either group didn't provide right credentials or user doesn't have required privileges to access this API."
          }
        },
        "security" : [ {
          "Basic" : [ ]
        } ]
      },
      "put" : {
        "description" : "The method updates the details of a specified group in API Gateway. The API request body must contain the payload for the updated group.",
        "operationId" : "updateGroup",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "This parameter describes the request payload of a group that is to be updated in API Gateway.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Group"
          },
          "x-examples" : {
            "application/json" : "{\r\n\t\"id\": \"be9147a8-6e53-4472-b1bd-16337a84d314\",\r\n\t\"name\": \"TestGrp\",\r\n\t\"description\": \"Group has all QA Members\",\r\n\t\"userIds\": [\r\n\t\t\"69aa914e-fbfc-4c74-87f1-2d48f589e115\"\r\n\t]\r\n}"
          }
        }, {
          "name" : "groupId",
          "in" : "path",
          "description" : "The path parameter specifies the id of a group whose detail is to be updated in API Gateway.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "This status code indicates that the group has been successfully updated in API Gateway, and the updated group is available in the response body.",
            "schema" : {
              "$ref" : "#/definitions/Group"
            },
            "examples" : {
              "application/json" : "{\r\n\t\"id\": \"be9147a8-6e53-4472-b1bd-16337a84d314\",\r\n\t\"name\": \"TestGrp\",\r\n\t\"description\": \"Group has all QA Members\",\r\n\t\"type\": \"local\",\r\n\t\"userIds\": [\r\n\t\t\"69aa914e-fbfc-4c74-87f1-2d48f589e115\"\r\n\t]\r\n}"
            }
          },
          "400" : {
            "description" : "This status code indicates that the request body is invalid."
          },
          "401" : {
            "description" : "This status code indicates that either user didn't provide right credentials or user doesn't have required privileges to access this API."
          }
        },
        "security" : [ {
          "Basic" : [ ]
        } ]
      },
      "delete" : {
        "description" : "The method deletes a group from API Gateway.",
        "operationId" : "deleteGroup",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "groupId",
          "in" : "path",
          "description" : "The path parameter specifies the id of a group that is to be deleted from API Gateway.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "401" : {
            "description" : "This status code indicates that either user didn't provide right credentials or user doesn't have required privileges to access this API."
          },
          "204" : {
            "description" : "This status code indicates that the specified group has been successfully deleted from API Gateway."
          },
          "404" : {
            "description" : "This status code indicates that group with the given id could not be found in API Gateway.",
            "examples" : {
              "application/json" : "{\r\n    \"errorDetails\": \" Group with id: 732c4526-db9a-4ef9-9782-edda1a6aa9bc does not exist.\"\r\n}"
            }
          }
        },
        "security" : [ {
          "Basic" : [ ]
        } ]
      }
    },
    "/users" : {
      "get" : {
        "description" : "The method retrieves list of all users in API Gateway.",
        "operationId" : "getUsers",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "This status code indicates that the list of users is successfully retrieved.",
            "schema" : {
              "$ref" : "#/definitions/User"
            },
            "examples" : {
              "application/json" : "{\r\n    \"users\": [\r\n        {\r\n            \"id\": \"Administrator\",\r\n            \"loginId\": \"Administrator\",\r\n            \"firstName\": \"Administrator\",\r\n            \"password\": \"********************************\",\r\n            \"type\": \"local\",\r\n            \"allowDigestAuth\": false,\r\n            \"active\": true,\r\n            \"systemDefined\": true,\r\n            \"emailAddresses\": []\r\n        },\r\n        {\r\n            \"id\": \"15fbeeb2-745c-4988-b7b6-61f359ecbfc8\",\r\n            \"loginId\": \"testUser\",\r\n            \"firstName\": \"User\",\r\n            \"lastName\": \"Test\",\r\n            \"password\": \"********************************\",\r\n            \"type\": \"local\",\r\n            \"allowDigestAuth\": false,\r\n            \"active\": true,\r\n            \"systemDefined\": false,\r\n            \"emailAddresses\": [\r\n                \"noreply@softwareag.com\"\r\n            ]\r\n        }\r\n    ]\r\n}\r\n"
            }
          },
          "401" : {
            "description" : "This status code indicates that either user didn't provide right credentials or user doesn't have required privileges to access this API."
          }
        },
        "security" : [ {
          "Basic" : [ ]
        } ]
      },
      "post" : {
        "description" : "The method creates an user in API Gateway. The API request body must contain the payload for the user.",
        "operationId" : "createUser",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "This parameter describes the request payload of a user that is to be created in API Gateway.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/User"
          },
          "x-examples" : {
            "application/json" : "{\r\n            \"loginId\": \"testUser\",\r\n            \"firstName\": \"User\",\r\n            \"lastName\": \"Test\",\r\n            \"password\": \"test\",\r\n            \"type\": \"local\",\r\n            \"allowDigestAuth\": false,\r\n            \"emailAddresses\": [\r\n                \"noreply@softwareag.com\"\r\n            ]\r\n        }"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "This status code indicates that the user has been successfully created in API Gateway, and the newly created user is available in the response body.",
            "schema" : {
              "$ref" : "#/definitions/User"
            },
            "examples" : {
              "application/json" : "{\r\n            \"id\": \"15fbeeb2-745c-4988-b7b6-61f359ecbfc8\",\r\n            \"loginId\": \"testUser\",\r\n            \"firstName\": \"User\",\r\n            \"lastName\": \"Test\",\r\n            \"password\": \"********************************\",\r\n            \"type\": \"local\",\r\n            \"allowDigestAuth\": false,\r\n            \"active\": true,\r\n            \"emailAddresses\": [\r\n                \"noreply@softwareag.com\"\r\n            ]\r\n        }"
            }
          },
          "400" : {
            "description" : "This status code indicates that an user with the given loginId already exists in API Gateway or the request body is not correct."
          },
          "401" : {
            "description" : "This status code indicates that either user didn't provide right credentials or user doesn't have required privileges to access this API."
          }
        },
        "security" : [ {
          "Basic" : [ ]
        } ]
      }
    },
    "/users/{userId}" : {
      "get" : {
        "description" : "The method retrieves the details of an user in API Gateway.",
        "operationId" : "getUser",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "userId",
          "in" : "path",
          "description" : "The path parameter specifies the id of an user whose details are to be retrieved.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "This status code indicates that the details of the user is successfully retrieved.",
            "schema" : {
              "$ref" : "#/definitions/User"
            },
            "examples" : {
              "application/json" : "{\r\n    \"users\": [\r\n        {\r\n            \"id\": \"15fbeeb2-745c-4988-b7b6-61f359ecbfc8\",\r\n            \"loginId\": \"testUser\",\r\n            \"firstName\": \"User\",\r\n            \"lastName\": \"Test\",\r\n            \"password\": \"********************************\",\r\n            \"type\": \"local\",\r\n            \"allowDigestAuth\": false,\r\n            \"active\": true,\r\n            \"emailAddresses\": [\r\n                \"noreply@softwareag.com\"\r\n            ]\r\n        }\r\n    ]\r\n}"
            }
          },
          "404" : {
            "description" : "This status code indicates that an user with the given id could not be found in API Gateway.",
            "examples" : {
              "application/json" : "{\r\n    \"errorDetails\": \" User with id: 15fbeeb2-745c-4988-b7b6-61f359ecbfc8 does not exist.\"\r\n}"
            }
          },
          "401" : {
            "description" : "This status code indicates that either user didn't provide right credentials or user doesn't have required privileges to access this API."
          }
        },
        "security" : [ {
          "Basic" : [ ]
        } ]
      },
      "put" : {
        "description" : "The method updates the details of a specified user in API Gateway. The API request body must contain the payload for the updated user.",
        "operationId" : "updateUser",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "This parameter describes the request payload of a user that is to be updated in API Gateway.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/User"
          },
          "x-examples" : {
            "application/json" : "{\r\n            \"loginId\": \"testUser\",\r\n            \"firstName\": \"User\",\r\n            \"lastName\": \"Test\",\r\n            \"password\": \"test\",\r\n            \"type\": \"local\",\r\n            \"allowDigestAuth\": false,\r\n            \"emailAddresses\": [\r\n                \"noreply@softwareag.com\"\r\n            ]\r\n        }"
          }
        }, {
          "name" : "userId",
          "in" : "path",
          "description" : "The path parameter specifies the id of an user whose detail is to be updated in API Gateway.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "This status code indicates that the user has been successfully updated in API Gateway, and the updated user is available in the response body.",
            "schema" : {
              "$ref" : "#/definitions/User"
            },
            "examples" : {
              "application/json" : "{\r\n  \"id\": \"15fbeeb2-745c-4988-b7b6-61f359ecbfc8\",\r\n            \"loginId\": \"testUser\",\r\n            \"firstName\": \"User\",\r\n            \"lastName\": \"Test\",\r\n            \"password\": \"test\",\r\n            \"type\": \"local\",\r\n            \"allowDigestAuth\": false,\r\n            \"emailAddresses\": [\r\n                \"noreply@softwareag.com\"\r\n            ]\r\n        }"
            }
          },
          "400" : {
            "description" : "This status code indicates that the request body is invalid."
          },
          "401" : {
            "description" : "This status code indicates that either user didn't provide right credentials or user doesn't have required privileges to access this API."
          }
        },
        "security" : [ {
          "Basic" : [ ]
        } ]
      }
    }
  },
  "securityDefinitions" : {
    "Basic" : {
      "description" : "API Gateway Administrator and API Gateway provider",
      "type" : "basic"
    }
  },
  "definitions" : {
    "AccessProfile" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string",
          "description" : "AccessProfile ID",
          "readOnly" : true
        },
        "name" : {
          "type" : "string",
          "description" : "name of the accessprofile"
        },
        "description" : {
          "type" : "string",
          "description" : "description of the accessprofile"
        },
        "privilege" : {
          "description" : "functional privileges assigned to the accessprofile",
          "$ref" : "#/definitions/BitSet"
        },
        "userIds" : {
          "type" : "array",
          "description" : "list of groupIds assigned to the accessprofile",
          "items" : {
            "type" : "string"
          }
        }
      },
      "description" : "This model contains details about an Access Profile in API Gateway"
    },
    "BitSet" : {
      "type" : "object",
      "properties" : {
        "empty" : {
          "type" : "boolean"
        }
      }
    },
    "Group" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string",
          "description" : "Group ID",
          "readOnly" : true
        },
        "name" : {
          "type" : "string",
          "description" : "name of the group"
        },
        "description" : {
          "type" : "string",
          "description" : "description of the group"
        },
        "userIds" : {
          "type" : "array",
          "description" : "list of user's Ids assigned to the group",
          "items" : {
            "type" : "string"
          }
        }
      },
      "description" : "This model contains details about a group in API Gateway"
    },
    "User" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string",
          "description" : "unique identifier of a user",
          "readOnly" : true
        },
        "loginId" : {
          "type" : "string",
          "description" : "login name"
        },
        "firstName" : {
          "type" : "string",
          "description" : "first name of the user"
        },
        "lastName" : {
          "type" : "string",
          "description" : "last name of the user"
        },
        "emailAddresses" : {
          "type" : "array",
          "description" : "list of email addresses of the user",
          "items" : {
            "type" : "string"
          }
        },
        "allowDigestAuth" : {
          "type" : "boolean",
          "description" : "list of email addresses of the user"
        },
        "active" : {
          "type" : "boolean",
          "description" : "active status of the user"
        }
      },
      "description" : "This model contains details about an User in API Gateway"
    }
  }
}