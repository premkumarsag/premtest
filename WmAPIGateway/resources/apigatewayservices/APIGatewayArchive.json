{
  "swagger" : "2.0",
  "info" : {
    "description" : "The API Gateway archive service exposes the interface to the API Gateway export archives. An API Gateway export archive is a ZIP file that contains APIs, policies, global policies and all the other assets in API Gateway. You can use this service to export/import all type of assets into API Gateway. \n\n In general, for any asset being exported, all the dependent assets are automatically exported. For example, when exporting APIs,  the export archive contains the APIs, the API level policies, the policy actions associated with the API level policies, and the aliases referenced by the policy actions. Additionally, the archive may also contain the applications registered to the exported APIs.\n When exporting global policy the archive contains the global policies, the policy actions associated with the global policies, and the aliases referenced to the policy actions.\n\nEach artifact in an archive is associated with a universally unique identifier (UUID) across all API Gateway installations. When importing an archive, the UUID helps in determining whether the corresponding artifact is already available in API Gateway. In such a situation, you can specify whether to overwrite an already existing artifact during the import process. \n\n Any user with the 'Export assets' functional privilege can export  archives in API Gateway and any user with the 'Import assets' privilege can import the archives. By default, the users who are part of API-Gateway-Administrators group will have these privileges.",
    "version" : "10.2",
    "title" : "API Gateway Archive Service"
  },
  "host" : "localhost:5555",
  "basePath" : "/rest/apigateway",
  "schemes" : [ "http" ],
  "consumes" : [ "application/json", "application/zip" ],
  "produces" : [ "application/json", "application/zip" ],
  "paths" : {
    "/archive" : {
      "get" : {
        "description" : "The GET method exports an archive. The result of the GET request is an archive in a ZIP format. This Method supports exporting API, Application, Alias and Global Policy ONLY.  \n\n Use the POST /archive method to export all the assets in API Gateway.",
        "operationId" : "exportApiGatewayAssets",
        "consumes" : [ "application/json" ],
        "produces" : [ "multipart/form-data" ],
        "parameters" : [ {
          "name" : "include-applications",
          "in" : "query",
          "description" : "This parameter indicates whether you want to export the applications associated with the\nAPIs",
          "required" : false,
          "type" : "string",
          "x-example" : "include-applications=true"
        }, {
          "name" : "policies",
          "in" : "query",
          "description" : "This parameter identifies the policies to be exported. \nThe wildcard \"*\" selects all policies.\nFor example, a single policy can be exported using the following request:\nGET /rest/apigateway/archive?policies=07b8d7b7-20b7-422e-8464-4b19d405c41a\nWhereas, global policies can be exported using the following request:\nGET /rest/apigateway/archive?policies=*\n",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi",
          "x-example" : "policies=07b8d7b7-20b7-422e-8464-4b19d405c41a"
        }, {
          "name" : "apis",
          "in" : "query",
          "description" : "This parameter identifies the APIs to be exported. The wildcard \"*\" selects all the APIs. \nFor example a single API can be exported using the following request:\nGET /rest/apigateway/archive?apis=e2996867-af49-4ac6-98e7-cba48837c13e\n\nWhereas, all the APIs can be exported using the following request:\nGET /rest/apigateway/archive?apis=*",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi",
          "x-example" : "apis=e2996867-af49-4ac6-98e7-cba48837c13e"
        }, {
          "name" : "aliases",
          "in" : "query",
          "description" : "This parameter identifies the aliases to be exported. \nThe wildcard \"*\" selects all aliases.\n For example, a single alias can be exported using the following requrest:\n GET /rest/apigateway/archive?aliases=d1885756-9e38-39b5-87d6-ba937726b02d\nWhereas, all the APIs can be exported using the following request:\n GET /rest/apigateway/archive?alias=*",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi",
          "x-example" : "aliases=d1885756-9e38-39b5-87d6-ba937726b02d"
        }, {
          "name" : "applications",
          "in" : "query",
          "description" : "This parameter identifies the applications to be exported. \nThe wildcard \"*\" selects all applications.\n For example, a single application can be exported using the following requrest:\n GET /rest/apigateway/archive?applications=d1885756-9e38-39b5-87d6-ba937726b02d\nWhereas, all the APIs can be exported using the following request:\n GET /rest/apigateway/archive?alias=*",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi",
          "x-example" : "applications=d1885756-9e38-39b5-87d6-ba937726b02d"
        } ],
        "responses" : {
          "200" : {
            "description" : "This response indicates that the archive is created successfully. The response body is the zipped archive."
          },
          "401" : {
            "description" : "This response indicates that invalid credentials have been provided for the request."
          },
          "400" : {
            "description" : "This response indicates that a request is incorrect. This can be due to the API or Policy identifiers that cannot be resolved."
          },
          "500" : {
            "description" : "This response indicates that the server has encountered an error while exporting API Gateway Asset"
          }
        },
        "security" : [ {
          "Basic" : [ ]
        } ]
      },
      "post" : {
        "description" : "This method can be used for importing the API Gateway archive as well as exporting the assets as an archive. If the request is made with x-HTTP-Method-Override HTTP header with value as GET, then this method will export asset. It will require the body param using which you can specify the filtering criteria and include options for the API Gateway assets that need to be exported. \n\n If the HTTP header is not specified, then this method can be used to import the API Gateway archive. You can control the import settings with overwrite and preserveAssetState query parameters.\n\n Here are some sample payloads for different export scenarios. \n\n 1. Export all API Gateway assets. \n Payload: {} \n\n 2. Export all APIs \n Payload: { \"types\": [\"api\"] } \n\n 3. Export all APIs with registered Application \n Payload: {\r\n\"types\" : [\"api\"],\r\n\"includeOptions\" :{\r\n\"includeApplications\" :false\r\n}\r\n} \n\n 4. Export only APIs with name contains \"API Gateway\" \n Payload: {\r\n\"types\" : [\"api\"],\r\n\"scope\" : [\r\n{\"attributeName\" : \"apiName\",\r\n\"keyword\" : \".*API Gateway.*\"\r\n}],\r\n\"includeOptions\" :{\r\n\"includeApplications\" :false\r\n}\r\n} \n\n 5. Export API with specific ids only \n Payload: {\r\n\"types\" : [\"api\"],\r\n\"scope\" : [\r\n{\"attributeName\" : \"id\",\r\n\"keyword\" : \"1c36033a-ecb6-41ce-ad66-bada5cebe85e|8d505388-5524-4df5-bd3c-62c4bb5f41d0\"\r\n}],\r\n\"includeOptions\" :{\r\n\"includeApplications\" :true\r\n}\r\n} \n\n 6. Export API with name starts with API Gateway and description contains search \n Payload: {\r\n\"types\" : [\"api\"],\r\n\"scope\" : [\r\n{\"attributeName\" : \"apiName\",\r\n\"keyword\" : \"API Gateway.*\"\r\n},\r\n{\r\n\"attributeName\" : \"apiDescription\",\r\n\"keyword\" : \".*search.*\"\r\n}],\r\n\"condition\" : \"and\",\r\n\"includeOptions\" :{\r\n\"includeApplications\" :false\r\n}\r\n} \n\n 7. Export all Policy \n Payload: {\r\n\"types\" : [\"policy\"]\r\n} \n\n 8. Global Policy Alone \n Payload: {\r\n\"types\" : [\"policy\"],\r\n\"scope\":[\r\n{\r\n\"attributeName\" : \"policyScope\",\r\n\"keyword\" : \"GLOBAL\"\r\n}]\r\n} \n\n 9. Export Threat Protection Rule \n Payload: {\r\n\"types\" : [\"policy\"],\r\n\"scope\":[\r\n{\r\n\"attributeName\" : \"policyEnforcements.stageKey\",\r\n\"keyword\" : \"threatProtection\"\r\n}]\r\n} \n\n 10. Export All Policy Actions \n Payload: {\r\n\"types\" : [\"policy_action\"]\r\n} \n\n 11. Export All Threat Protection rules and policy \n Payload: {\r\n\"types\" : [\"policy_action\", \"policy\"],\r\n\"scope\":[\r\n{\r\n\"attributeName\" : \"policyEnforcements.stageKey\",\r\n\"keyword\" : \"threatProtection\"\r\n}, {\r\n\"attributeName\" : \"id\",\r\n\"keyword\" : \"globalipdos|ipdos\"\r\n}],\r\n\"condition\" : \"or\"\r\n} \n\n 12. Export all aliases \n Payload: {\r\n\"types\" : [\"alias\"]\r\n} \n\n 13. Export all applications \n Payload: {\r\n\"types\" : [\"application\"]\r\n} \n\n 14. Export all application with out including associated APIs \n Payload: {\r\n\"types\" : [\"application\"],\r\n\"includeOptions\" : {\r\n\"includeApis\": false\r\n}\r\n} \n\n 15. Export All Assertions \n Payload: {\r\n\"types\" : [\"assertion\"]\r\n} \n\n 16. Export all API Plans \n Payload: {\r\n\"types\" : [\"plan\"]\r\n} \n\n 17. Export all API Packages \n Payload: {\r\n\"types\" : [\"package\"]\r\n} \n\n 18. Export all packages along with subscription but with out the registered Applications for the associated APIs. \n Payload: {\r\n\"types\" : [\"package\"],\r\n\"includeOptions\":{\r\n\"includeApis\" : false,\r\n\"includeApplications\" : false,\r\n\"includeSubscriptions\" : true\r\n}\r\n} \n\n 19. Export all subscriptions \n Payload: {\r\n\"types\" : [\"subscription\"]\r\n} \n\n 20. Export all Administrator Settings \n Payload: {\r\n\"types\" : [\"administrator_setting\"]\r\n}",
        "operationId" : "importExportAPIGatewayAssets",
        "consumes" : [ "multipart/form-data", "application/json" ],
        "produces" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "overwrite",
          "in" : "query",
          "description" : "This parameter specifies the import option to define the artifact types that can be overwritten during import. The parameter enables you to specify overwriting of APIs, policies, policy actions, aliases, and applications.   \nThe wildcard \"*\" enables you to specify all types.\nFor example, the following request enables you to overwrite APIs during import:\nPOST /rest/apigateway/archive?overwrite=apis\nWhereas, overwriting all asset types during import can be specified as follows:\nPOST /rest/apigateway/archive?overwrite=*",
          "required" : false,
          "type" : "string",
          "enum" : [ "apis", "policies", "policyactions", "applications", "aliases", "plans", "packages", "subscriptions", "administrator_settings", "portal_gateway", "assertions", "*" ]
        }, {
          "name" : "preserveAssetState",
          "in" : "query",
          "description" : "This parameter is used to specify whether the asset state needs to be preserved after importing the assets in to API Gateway. By default this value will be true. If false specified the assets will be imported and wont preserve asset state after importing asset.",
          "required" : false,
          "type" : "string",
          "enum" : [ "true", "false" ]
        }, {
          "name" : "x-HTTP-Method-Override",
          "in" : "header",
          "description" : "This parameter is used to specify that this REST call is an export operation. The value for this field is GET. If this is specified then you need to provide the filtering criteria in body to specify the asset. If empty payload specified then all assets will be exported. ",
          "required" : false,
          "type" : "string",
          "enum" : [ "GET" ]
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/ExportContext"
          }
        }, {
          "name" : "zipFile",
          "in" : "formData",
          "description" : "Zip file that contains the API Gateway asset needs to be imported",
          "required" : false,
          "type" : "file"
        } ],
        "responses" : {
          "201" : {
            "description" : "This response indicates that the archive import was successful. The response body holds a detailed import log in application/json format.",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/ArchiveResult"
              }
            },
            "examples" : {
              "application/json" : "{\n  \"ArchiveResult\": [\n    {\n      \"PolicyAction\": {\n        \"name\": \"Straight Through Routing\",\n        \"id\": \"bc7c75ba-ad5e-4dd7-adb7-a62bcd60593d\",\n        \"status\": \"Failed\",\n        \"explanation\": \"Asset already exists.\",\n        \"overwritten\": false\n      }\n    },\n    {\n      \"PolicyAction\": {\n        \"name\": \"Require HTTP / HTTPS\",\n        \"id\": \"c3852da1-4e6e-440b-8fe9-7e5c1523d7f1\",\n        \"status\": \"Failed\",\n        \"explanation\": \"Asset already exists.\",\n        \"overwritten\": false\n      }\n    },\n    {\n      \"API\": {\n        \"name\": \"BayernRest\",\n        \"id\": \"70062a02-e7f9-4ead-a66e-313752a9b111\",\n        \"status\": \"Failed\",\n        \"explanation\": \"Asset already exists.\",\n        \"overwritten\": false\n      }\n    },\n    {\n      \"Policy\": {\n        \"name\": \"Default Policy for API BayernRest\",\n        \"id\": \"9a0d17c1-8bf1-4282-a53e-2b2ca634ba39\",\n        \"status\": \"Failed\",\n        \"explanation\": \"Asset already exists.\",\n        \"overwritten\": false\n      }\n    }\n  ]\n}"
            }
          },
          "200" : {
            "description" : "This response indicates that the archive is created successfully. The response body is the zipped archive."
          },
          "401" : {
            "description" : "This response  indicates that invalid credentials have been provided for the request."
          },
          "500" : {
            "description" : "This response indicates that the server has encountered an error while exporting or importing  API Gateway Asset"
          },
          "400" : {
            "description" : "This response indicates that the request is invalid or faulty, for example, the request body may contain an invalid archive."
          }
        },
        "security" : [ {
          "Basic" : [ ]
        } ]
      }
    }
  },
  "securityDefinitions" : {
    "Basic" : {
      "description" : "API Gateway Administrator and API Gateway provider",
      "type" : "basic"
    }
  },
  "definitions" : {
    "ExportContext" : {
      "type" : "object",
      "required" : [ "types" ],
      "properties" : {
        "types" : {
          "type" : "string",
          "description" : "List of allowed types that can be searched across API Gateway.",
          "enum" : [ "USER", "GROUP", "USERS", "GROUPS", "LDAPGROUPS", "CDSGROUPS", "ASSERTION", "APPLICATION", "API", "ALIAS", "POLICY", "POLICY_ACTION", "PLAN", "PACKAGE", "ADMINISTRATOR_SETTING", "PORTAL_GATEWAY", "OAUTH2_SCOPE_DATA", "SUBSCRIPTION" ]
        },
        "scope" : {
          "$ref" : "#/definitions/SearchField"
        },
        "condition" : {
          "type" : "string",
          "description" : "Condition between scope specified. The value can be either 'and' or 'or'",
          "enum" : [ "and", "or" ]
        },
        "responseFields" : {
          "type" : "array",
          "description" : "List of fields to be fetched for the specified types.",
          "items" : {
            "type" : "string"
          }
        },
        "from" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The starting index of the record to be fetched. Default value is 0 which fetches from the start. The index is applied to each type separately. For each type the first n records are skipped as specified in from field. If the value specified is less than zero then the default value is taken for fetching records"
        },
        "size" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Number of records to be fetched. Default value is -1, which fetches all the records. The size is applied to each type separately. Each type has the records less than or equal to the size specified. If the value specified is less than zero then the default value is taken for fetching records"
        },
        "sortByField" : {
          "type" : "string",
          "description" : "Field name on which the sorting needs to be applied."
        },
        "sortOrder" : {
          "type" : "string",
          "description" : "Sort order for the records",
          "enum" : [ "ASC", "DESC" ]
        },
        "includeOptions" : {
          "$ref" : "#/definitions/IncludeOptions"
        }
      },
      "description" : "This defines the request structure to export the specific assets across API Gateway"
    },
    "IncludeOptions" : {
      "type" : "object",
      "properties" : {
        "includeAll" : {
          "type" : "boolean",
          "description" : "Include all dependent assets for all asset type specified"
        },
        "includeApplications" : {
          "type" : "boolean",
          "description" : "Include application as dependent asset for asset type specified if applicable"
        },
        "includeApis" : {
          "type" : "boolean",
          "description" : "Include API as dependent asset for asset type specified if applicable"
        },
        "includeSubscriptions" : {
          "type" : "boolean",
          "description" : "Include subscriptions for the asset type specified if applicable"
        }
      },
      "description" : "It is used to specify the inclusion of dependent assets"
    },
    "SearchField" : {
      "type" : "object",
      "properties" : {
        "attributeName" : {
          "type" : "string",
          "description" : "Field name to be searched for the list of types specified"
        },
        "keyword" : {
          "type" : "string",
          "description" : "Value of the corresponding field to be matched. User can use regular expression to specify the multiple values for single attributeName. For example  to find \n 1. apiDescription contains \"weather\" or equals \"country\" , we can use {\"attributeName\" : \"apiDescription\", \"keyword\" : \".*weather.*|country\"}. \n 2. apiName starts with weather - {\"attributeName\" : \"apiName\", \"keyword\" : \"weather.*\"}. \n 3. api type is REST or SOAP - {\"attributeName\" : \"type\", \"keyword\" : \"REST|SOAP\"}."
        }
      },
      "description" : "A scope is filtering criteria for the list of types specified in search.It is a key/value pair. key is the field name on which the search is being done and value  contains the search string to be searched on the field specified.To get the field name for a type, user needs to access the corresponding API Gateway REST service to know about the fields available for a particular type. "
    },
    "ArchiveResult" : {
      "type" : "object",
      "properties" : {
        "name" : {
          "type" : "string"
        },
        "importedOK" : {
          "type" : "boolean"
        },
        "explanation" : {
          "type" : "string"
        },
        "overwritten" : {
          "type" : "boolean"
        },
        "dependencyFailed" : {
          "type" : "boolean"
        }
      }
    }
  }
}