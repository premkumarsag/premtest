{
  "swagger" : "2.0",
  "info" : {
    "description" : "The search API allows you to execute a search query in API Gateway and receive search results that match the search query. You can perform search across different objects such as API, Application, Alias, Assertions, Users and User Groups.",
    "version" : "10.2",
    "title" : "API Gateway Search Service"
  },
  "host" : "localhost:5555",
  "basePath" : "/rest/apigateway",
  "schemes" : [ "http" ],
  "consumes" : [ "application/json" ],
  "produces" : [ "application/json" ],
  "paths" : {
    "/search" : {
      "post" : {
        "description" : "The search API allows you to execute a search query in API Gateway and get back search results that match the query. You can perform search across different objects such as API, Application, Alias, Assertions, Policies, Administrator Settings, Policy Action, Packages, Plans, Subscriptions, Users and User Groups. Following are the type of searches that does not require scope or fields. \n 1. Users - This type is used to get the list of users from IS. \n 2. User Groups - This type is used to get the list of user groups from IS. \n\n Following are the type of searches for which you can specify the  scope and fields. \n 1. API - This type is used to search the APIs in API Gateway. \n 2. Application - This type is used to search the Applications created in API Gateway. \n 3. Alias - This type is used to search aliases created in API Gateway. \n 4. Assertions - This type is used to search custom assertions created in API Gateway. \n 5. Policy - This type is used to search policies in API Gateway. \n 6. Policy Action - This type is used to search policy actions in API Gateway. \n 7. Package - This type is used to search packages in API Gateway. \n 8. Plan - This type is used to search plans in API Gateway. \n 9. Administrator Setting - This type is used to search the administrator settings in API Gateway. \n 10. Subscription - This type is used to search subscriptions in API Gateway. \n \n For the above ten types, if a scope is specified, then the scope is applicable for all types regardless whether it is applicable for that or not. Also if the required fields are specified and it is not available in any other types, then the search result corresponds to that type does not have the fields. \n If from and size are specified then it skips first n records specified in from for all types and it fetches the number of records specified in size.",
        "operationId" : "searchByType",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "Search Parameters to search for specific set of results on specified types",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/SearchContext"
          },
          "x-examples" : {
            "application/json" : "{\r\n\t\"types\": [\"user\",\r\n\t\"group\",\r\n\t\"api\",\r\n\t\"alias\",\r\n\t\"application\",\r\n\t\"policy\"],\r\n\t\"condition\": \"or\",\r\n\t\"scope\": [{\r\n\t\t\"attributeName\": \"apiName\",\r\n\t\t\"keyword\": \".*api.*\"\r\n\t},\r\n\t{\r\n\t\t\"attributeName\": \"names.value\",\r\n\t\t\"keyword\": \"Default Policy for API EMP\"\r\n\t},\r\n\t{\r\n\t\t\"attributeName\": \"name\",\r\n\t\t\"keyword\": \".*app.*\"\r\n\t},\r\n\t{\r\n\t\t\"attributeName\" : \"type\",\r\n\t\t\"keyword\" : \"simple\"\r\n\t},\r\n\t{\r\n\t\t\"attributeName\" : \"policyScope\",\r\n\t\t\"keyword\" : \"global\"\r\n\t}\r\n\t],\r\n\t\"responseFields\": [\"apiName\",\r\n\t\"id\",\r\n\t\"name\",\r\n\t\"owner\",\"policyScope\",\"names\"],\r\n\t\"from\": 0,\r\n\t\"size\": -1\r\n}"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "This status code indicates that the search process is successful. The result is a map of type and object. Each type has it's respective search results mapped.",
            "schema" : {
              "type" : "object",
              "additionalProperties" : {
                "type" : "object"
              }
            },
            "examples" : {
              "application/json" : "{\r\n\t\"GROUP\": [\"API-Gateway-Administrators\",\r\n\t\"API-Gateway-Providers\",\r\n\t\"Administrators\",\r\n\t\"Anonymous\",\r\n\t\"Developers\",\r\n\t\"Everybody\",\r\n\t\"Replicators\"],\r\n\t\"POLICY\": [{\r\n\t\t\"id\": \"GlobalLogInvocationPolicy\",\r\n\t\t\"names\": [{\r\n\t\t\t\"value\": \"Transaction logging\",\r\n\t\t\t\"locale\": \"English\"\r\n\t\t}],\r\n\t\t\"policyEnforcements\": [],\r\n\t\t\"policyScope\": \"GLOBAL\",\r\n\t\t\"global\": false,\r\n\t\t\"active\": false,\r\n\t\t\"systemPolicy\": false\r\n\t},\r\n\t{\r\n\t\t\"id\": \"3808db1a-8577-41e5-af6b-dcdac470524c\",\r\n\t\t\"names\": [{\r\n\t\t\t\"value\": \"Transport Policy\",\r\n\t\t\t\"locale\": \"English\"\r\n\t\t}],\r\n\t\t\"policyEnforcements\": [],\r\n\t\t\"policyScope\": \"GLOBAL\",\r\n\t\t\"global\": false,\r\n\t\t\"active\": false,\r\n\t\t\"systemPolicy\": false\r\n\t}],\r\n\t\"ALIAS\": [{\r\n\t\t\"name\": \"Myname\",\r\n\t\t\"value\": \"API Gateway N\"\r\n\t}],\r\n\t\"APPLICATION\": [{\r\n\t\t\"name\": \"Application\",\r\n\t\t\"owner\": \"Administrator\",\r\n\t\t\"identifiers\": [],\r\n\t\t\"siteURLs\": [],\r\n\t\t\"subscription\": false\r\n\t}],\r\n\t\"API\": [{\r\n\t\t\"apiName\": \"API Gateway\",\r\n\t\t\"isActive\": false,\r\n\t\t\"policies\": [],\r\n\t\t\"publishedPortals\": [],\r\n\t\t\"systemVersion\": 1,\r\n\t\t\"id\": \"1ac48246-80eb-44c8-8901-564e025dbbde\"\r\n\t},\r\n\t{\r\n\t\t\"apiName\": \"API Gateway Policy Management\",\r\n\t\t\"isActive\": false,\r\n\t\t\"owner\": \"Administrator\",\r\n\t\t\"policies\": [],\r\n\t\t\"publishedPortals\": [],\r\n\t\t\"systemVersion\": 1,\r\n\t\t\"id\": \"7b2166a6-cf3c-4f72-a04b-72c110c302d2\"\r\n\t}],\r\n\t\"USER\": [\"Administrator\",\r\n\t\"Default\",\r\n\t\"Developer\",\r\n\t\"Replicator\",\r\n\t\"apigateway\"]\r\n}"
            }
          },
          "401" : {
            "description" : "This status code indicates that either the user did not provide any user credentials or user does not have API Gateway Administrator or API Gateway provider access rights for search."
          },
          "400" : {
            "description" : "This status code indicates either error occurred during the search process or user has missed some mandatory field that is required to do the search. The examples shows user missed a mandatory field \"condition\" in request body",
            "examples" : {
              "application/json" : "{\r\n  \"errorDetails\": \" Mandatory field condition is missing in the input request body\"\r\n}"
            }
          },
          "500" : {
            "description" : "This status code indicates that the search process is not successful and has failed due to some internal server error."
          }
        },
        "security" : [ {
          "Basic" : [ ]
        } ]
      }
    },
    "/search/_count" : {
      "post" : {
        "description" : "This REST call is intent to get the total number of records for the specified scope and types. If the scope is not specified it returns total number of assets for the specified type. Both /search and /search/_count shares the same payload. Except types,scope and condition other attributes are not considered during the REST API call.",
        "operationId" : "countByType",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "Search Parameters to search for specific set of results on specified types",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/SearchContext"
          },
          "x-examples" : {
            "application/json" : "{\r\n\t\"types\": [\"user\",\r\n\t\"group\",\r\n\t\"api\",\r\n\t\"alias\",\r\n\t\"application\",\r\n\t\"policy\"],\r\n\t\"condition\": \"or\",\r\n\t\"scope\": [{\r\n\t\t\"attributeName\": \"apiName\",\r\n\t\t\"keyword\": \".*api.*\"\r\n\t},\r\n\t{\r\n\t\t\"attributeName\": \"names.value\",\r\n\t\t\"keyword\": \"Default Policy for API EMP\"\r\n\t},\r\n\t{\r\n\t\t\"attributeName\": \"name\",\r\n\t\t\"keyword\": \".*app.*\"\r\n\t},\r\n\t{\r\n\t\t\"attributeName\" : \"type\",\r\n\t\t\"keyword\" : \"simple\"\r\n\t},\r\n\t{\r\n\t\t\"attributeName\" : \"policyScope\",\r\n\t\t\"keyword\" : \"global\"\r\n\t}\r\n\t]}"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "This status code indicates the count for the specified scope is success. The result will be a map of type and count for each type.",
            "schema" : {
              "type" : "object",
              "additionalProperties" : {
                "type" : "integer",
                "format" : "int32"
              }
            },
            "examples" : {
              "application/json" : "{\r\n\t\"group\":12,\r\n\t\"policy\":13,\r\n\t\"user\":4,\r\n\t\"api\":5\r\n}"
            }
          },
          "401" : {
            "description" : "This status code indicates that the user did not provide any user credential or user does not have API Gateway Administrator or API Gateway provider access for search."
          },
          "400" : {
            "description" : "This status code indicates either error occurred during the search process or user has missed some mandatory field that is required to do the search. The examples shows user missed a mandatory field \"condition\" in request body",
            "examples" : {
              "application/json" : "{\r\n  \"errorDetails\": \" Mandatory field condition is missing in the input request body\"\r\n}"
            }
          },
          "500" : {
            "description" : "This status code indicates the search process is not success and failed due to some internal server error."
          }
        },
        "security" : [ {
          "Basic" : [ ]
        } ]
      }
    }
  },
  "securityDefinitions" : {
    "Basic" : {
      "description" : "API Gateway Administrator and API Gateway provider",
      "type" : "basic"
    }
  },
  "definitions" : {
    "SearchContext" : {
      "type" : "object",
      "required" : [ "types" ],
      "properties" : {
        "types" : {
          "type" : "string",
          "description" : "List of allowed types that can be searched across API Gateway.",
          "enum" : [ "USER", "GROUP", "USERS", "GROUPS", "LDAPGROUPS", "CDSGROUPS", "ASSERTION", "APPLICATION", "API", "ALIAS", "POLICY", "POLICY_ACTION", "PLAN", "PACKAGE", "ADMINISTRATOR_SETTING", "PORTAL_GATEWAY", "OAUTH2_SCOPE_DATA", "SUBSCRIPTION" ]
        },
        "scope" : {
          "$ref" : "#/definitions/SearchField"
        },
        "condition" : {
          "type" : "string",
          "description" : "Condition between scope specified. The value can be either 'and' or 'or'",
          "enum" : [ "and", "or" ]
        },
        "responseFields" : {
          "type" : "array",
          "description" : "List of fields to be fetched for the specified types.",
          "items" : {
            "type" : "string"
          }
        },
        "from" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The starting index of the record to be fetched. Default value is 0 which fetches from the start. The index is applied to each type separately. For each type the first n records are skipped as specified in from field. If the value specified is less than zero then the default value is taken for fetching records"
        },
        "size" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Number of records to be fetched. Default value is -1, which fetches all the records. The size is applied to each type separately. Each type has the records less than or equal to the size specified. If the value specified is less than zero then the default value is taken for fetching records"
        },
        "sortByField" : {
          "type" : "string",
          "description" : "Field name on which the sorting needs to be applied."
        },
        "sortOrder" : {
          "type" : "string",
          "description" : "Sort order for the records",
          "enum" : [ "ASC", "DESC" ]
        }
      },
      "description" : "This defines the request structure to search across API Gateway"
    },
    "SearchField" : {
      "type" : "object",
      "properties" : {
        "attributeName" : {
          "type" : "string",
          "description" : "Field name to be searched for the list of types specified"
        },
        "keyword" : {
          "type" : "string",
          "description" : "Value of the corresponding field to be matched. User can use regular expression to specify the multiple values for single attributeName. For example  to find \n 1. apiDescription contains \"weather\" or equals \"country\" , we can use {\"attributeName\" : \"apiDescription\", \"keyword\" : \".*weather.*|country\"}. \n 2. apiName starts with weather - {\"attributeName\" : \"apiName\", \"keyword\" : \"weather.*\"}. \n 3. api type is REST or SOAP - {\"attributeName\" : \"type\", \"keyword\" : \"REST|SOAP\"}."
        }
      },
      "description" : "A scope is filtering criteria for the list of types specified in search.It is a key/value pair. key is the field name on which the search is being done and value  contains the search string to be searched on the field specified.To get the field name for a type, user needs to access the corresponding API Gateway REST service to know about the fields available for a particular type. "
    }
  }
}