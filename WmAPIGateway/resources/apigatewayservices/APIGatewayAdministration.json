{
  "swagger" : "2.0",
  "info" : {
    "description" : "API Gateway Administration Service provides interface for you to administer various functions of the API Gateway. The user needs to have different functional privileges to administer different functions. For example, in order to manage runtime transactions data of the API Gateway, the user needs to have 'Manage purge and restore runtime events' privilege. By default, the users who are part of API-Gateway-Administrators group will have all privileges. \n\nFollowing Administration functions are exposed using this API. \n\n1. Archive, purge and restore api transactions. \n\nThis function lets the users manage the API Gateway Runtime Events & Metrics data.   \n\nAPI Gateway generates different types of events in the runtime depending on the state of the API invocation. For example, an error event is generated when API Gateway encounters an error while processing the API request or the response.  API Metrics is an aggregated data computed from the different events that happen in the system. These metrics provides information about the key performance indicators of an API like its \"Availability\", \"Fault Count\" etc which are useful for monitoring & governing the service performance and service level agreements.  The API providers has a variety of options to choose from for storing these events and metrics. By default, API Gateway store will be used for storing this data.  Here are some details about different type of events.\n\nTransactional event: Provides a summary (request & response) of each runtime transaction in the system. It is generated when a Log Invocation policy is included for the API. For example, if an API has this policy attached to it, then for every invoke the system generates a transaction event.  \n\nError event: Provides details of an error that occurred during an API invoke. This event is generated whenever there is an error in the system during a runtime service invocation. \n\nMonitoring event: This event is generated based on the parameters configured in the API monitoring policies such as Monitor Service Level Agreements, Throttling etc. Monitoring could be done based on various parameters such as Total Request Count, Total Success Count, Response Time, Availability. Monitoring can be done at the consumer application level too so that each consumer can be tracked individually. \n \nPolicy violation event: Provides a summary of the policy violations that occurred in the system. When a policy attched to an API is violated, the system generates the policy violation event.\n\nLifeCycle event: Provides a summary of the life cycle of the API Gateway instance. Whenever the instance is started or stopped, a life cycle notification is generated.\n\nThreat protection events: Provides a summary of the threat protection filter and rule violations. When a filter or rule is violated, the system generates the threat protection violation event. \n\nManaging the Events/Metrics Data\n\nPurge: The process of systematically deleting unwanted data from the database is called purging. You can purge events from the API Gateway store by setting the required date or duration in the API Gateway. You must have the required functional privileges to purge the API analytics data.\n\nArchive: Moving data that is no longer actively used for long-term retention so that it can be used at a later time is called archiving. You can archive API analytics data by setting the required date or duration per tenant in the API Gateway. You must have the required functional privileges to archive the API analytics data.\n\nRestore: You can restore the archived data as required. \n\n\n2.Transaction based license: \n\nAPI Gateway supports core as well as transaction-based licensing model. When API Gateway uses a transaction-based licensing model, then each service invocation is considered as a transaction and API Gateway keeps a track of these transactions. API Gateway transactions for the current month are compared with the maximum number of transactions allowed in a month.When the usage breaches, notification will be generated for the current month. Apart from this if the user wants to generate notifications before usage breach itself when usage reaches to some x% like 70% or 80% then the user has to add notification criteria at 70% or 80%. By default API Gateway will have two default notification criteria's at 90%, 100%.\n\n\n3.Destination configuration: \n\nAPI Gateway can publish events and performance metrics data to the configured destinations. You must have the API Gateway's manage destination configurations functional privilege assigned to configure the following destinations to which the event types and performance metrics data is published:\nAPI Gateway\nAPI Portal\nAudit Log\nCentraSite\nDatabase\nDigital Events\nElasticsearch\nEmail\nSNMP \n\n\n4.Default API fault configuration: \n\n API provider can configure a global error handling behaviour. In case of the native service error, the provider may choose to either forward the native error as is or can choose to modify the error response. In case the provider chooses to provide a custom error response, he/she can use the default error template containing standard aliases. These alias values will be replaced with the request specific information before the response is sent to the client. The standard aliases like the error message, service, operation, date/time, IP address, user and consumer application can be used in the template. The custom error response configuration is applicable for the errors thrown by API Gateway also.\n\n\n5.Custom assertions: \n\nCustom assertions allow the API providers to extend and provide additional security policies that are not available by default in API Gateway. Kindly refer to Policy swagger documentation for information about these configurations. \n\n\n6.SAML Issuer: \n\nIf a native API is enforced with the SAML policy, API Gateway uses this configuration to communicate to STS (Security Token Service) to retrieve the SAMl token. This is internally stored as an alias, kindly refer Alias Swagger documentation for information about these configurations.\n\n\n7.OAuth 2.0: \n\nAPI Gateway allows the API provider to configure any 3rd party OAuth2 Authorization server. In this case API Gateway acts as Resource server. Use can refer to Alias Swagger documentation for information about configuring external Authorization server.\n\n\n8.OpenID Provider: \n\nAPI GAteway allows the API provider to configure any OpenId provider. In this case API Gateway acts as Relying Party. YUse can refer to Alias Swagger documentation for information about configuring openid provider.\n\n9. Approval \n\nAPI Gateway allows you to configure approvals for: \n\t- Create application: To enforce approvals for creating an application in API Gateway.\n\t- Register application: To enforce approvals for associating an application with APIs.\n\t- Update application: To enforce approvals for modifying an application.\n\t- Subscribe package: To enforce approvals in API Gateway to enable API Portal consumers for subscribing a package to a plan in API Portal.\n\nIn API Gateway, you can create an application and associate (register) the application created with APIs. If you have the API Gateway's manage general administration configurations functional privilege assigned, you can configure approvals for creating or registering an application. If you have configured approvers, and if a user wants to create and register an application in API Gateway, then the application is created and registered with an API only if any one approver from the approvers group approves the create application and the register application requests. Similarly, you can configure approvals for updating an application or subscribing a package.\n\n10. Load Balancer \n\nIf you cluster API Gateway instances, you must configure API Gateway with the load balancer URL. This is the URL to which the consumer applications sends the requests to. Also this URL will be used to generate the API endpoint during activation.",
    "version" : "10.2",
    "title" : "API Gateway Administration Service"
  },
  "host" : "localhost:5555",
  "basePath" : "/rest/apigateway",
  "schemes" : [ "http" ],
  "consumes" : [ "application/json" ],
  "produces" : [ "application/json" ],
  "paths" : {
    "/apitransactions/typedefinitions" : {
      "get" : {
        "description" : "Returns the list of runtime event types. The available event types are as follows 1.transactionalEvents 2.monitorEvents 3.errorEvents 4.performanceMetrics 5.threatProtectionEvents 6.lifecycleEvents 7.policyViolationEvents. You can use these eventType to scope the archive/purge operation.  The user should be part of API-Gateway-Administrators group or else should have 'Manage purge and restore runtime events' privilege to perform this operation.",
        "operationId" : "getMappings",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "This response indicates that the list of type definitions has been returned to the requestor.",
            "examples" : {
              "application/json" : "{\r\n    \"Mappings\": [\r\n        \"performanceMetrics\",\r\n        \"monitorEvents\",\r\n        \"transactionalEvents\",\r\n        \"policyViolationEvents\",\r\n        \"errorEvents\",\r\n        \"threatProtectionEvents\",\r\n        \"lifecycleEvents\"\r\n    ]\r\n}"
            }
          },
          "401" : {
            "description" : "This response indicates that invalid credentials have been provided for the request."
          },
          "500" : {
            "description" : "This response indicates that the server has encountered an error while returning the list of type definitions. "
          }
        },
        "security" : [ {
          "Basic" : [ ]
        } ]
      }
    },
    "/apitransactions" : {
      "delete" : {
        "description" : "The DELETE method is used to purge the api transactions data and data to be purged is filtered based on the input parameters. This method returns the job id as response and the job id is used to track the job status. See /apitransactions/jobs/{jobId} for more details. The user should be part of API-Gateway-Administrators group or else should have 'Manage purge and restore runtime events' privilege to perform this operation.",
        "operationId" : "purgeAPITransactions",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "action",
          "in" : "query",
          "description" : "This is an optional query parameter. Sometimes its better to take backup before purging the data . If you specify the action value as \"archiveAndPurge\", API Gateway will perform an archive before purging the data.",
          "required" : false,
          "type" : "string",
          "x-example" : "action=archiveAndPurge"
        }, {
          "name" : "until",
          "in" : "query",
          "description" : "This is a date parameter. All the specified api transactions until the given date will be purged. Example value: until=2017-12-18 00:00:00. Either one of until or duration is a mandatory parameter",
          "required" : true,
          "type" : "string",
          "x-example" : "until=2017-10-10 00:00:00"
        }, {
          "name" : "olderThan",
          "in" : "query",
          "description" : "All the api transactions that are older than the value specified will be purged. Ex: olderThan='2d'. Possible values are d(days),M(months),y(years), lets say a. 2d means 2days   b. 1M  means 1 month   c. 1y means 1 year",
          "required" : false,
          "type" : "string",
          "x-example" : "olderThan=2d"
        }, {
          "name" : "eventType",
          "in" : "query",
          "description" : "This parameter is used to specify the event type that needs to be purged. Specify eventType=ALL to purge all the events and specify any specific type to purge that particular event type alone. Ex: eventType=transactionalEvents. The available event types are as follows 1.transactionalEvents 2.monitorEvents 3.errorEvents 4.performanceMetrics 5.threatProtectionEvents 6.lifecycleEvents 7.policyViolationEvents",
          "required" : true,
          "type" : "string",
          "x-example" : "eventType=ALL"
        } ],
        "responses" : {
          "202" : {
            "description" : "This response indicates that the purge process has been started and returned the jobId to track it further.",
            "examples" : {
              "application/json" : "{\r\n    \"jobId\": \"1504177213671\"\r\n}"
            }
          },
          "401" : {
            "description" : "This response indicates that invalid credentials have been provided for the request."
          },
          "400" : {
            "description" : "This status code indicates that the request URL is not valid."
          },
          "500" : {
            "description" : "This response indicates that the server has encountered an error while purging the api transactions. "
          }
        },
        "security" : [ {
          "Basic" : [ ]
        } ]
      }
    },
    "/apitransactions/archives" : {
      "get" : {
        "description" : "This GET method is used to fetch the details of existing archive files and response of this method would be the list of archive file names. Select one from the list of archive file names returned by this method and use the POST /apitransactions/archives/{fileName} method to restore.The user should be part of API-Gateway-Administrators group or else should have 'Manage purge and restore runtime events' privilege to perform this operation.",
        "operationId" : "listAllArchives",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "This response indicates that the list of archive file names returned successfully. The response body is the list of archive file names.",
            "examples" : {
              "application/json" : "{\r\n    \"archiveFiles\": [\r\n        \"default-2017-08-29-1504011306456\",\r\n        \"default-2017-08-29-1504012415981\"\r\n    ]\r\n}"
            }
          },
          "401" : {
            "description" : "This response indicates that invalid credentials have been provided for the request."
          },
          "500" : {
            "description" : "This response indicates that the server has encountered an error while returning the list of archive file names"
          }
        },
        "security" : [ {
          "Basic" : [ ]
        } ]
      },
      "post" : {
        "description" : "This method is used to archive the runtime events and metrics. You can additionally scope the archive data using input parameter filters. This method returns the job id as the response which will be used to know the status of the job. \n\nUse the GET /apitransactions/jobs/{jobId} to know the status, file name and use POST /apitransactions/archives/{fileName} method to restore. The user should be part of API-Gateway-Administrators group or else should have 'Manage purge and restore runtime events' privilege to perform this operation.",
        "operationId" : "apiTransactionsArchiveBasedOnDuration",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "until",
          "in" : "query",
          "description" : "This is a date parameter. All the specified api transactions until the given date will be purged. Example value: until=2017-12-18 00:00:00. Either one of until or duration is a mandatory parameter",
          "required" : true,
          "type" : "string",
          "x-example" : "until=2017-10-10 00:00:00"
        }, {
          "name" : "olderThan",
          "in" : "query",
          "description" : "All the api transactions that are older than the value specified will be purged. Ex: olderThan='2d'. Possible values are d(days),M(months),y(years), lets say a. 2d means 2days b. 1M means 1 month c. 1y means 1 year",
          "required" : false,
          "type" : "string",
          "x-example" : "olderThan=2d"
        }, {
          "name" : "eventType",
          "in" : "query",
          "description" : "This parameter is used to specify the api transaction type. Specify eventType=ALL to archive all the events and specify any specific type to archive that particular event type alone. Ex: eventType=transactionalEvents. The available event types are as follows 1.transactionalEvents 2.monitorEvents 3.errorEvents 4.performanceMetrics 5.threatProtectionEvents 6.lifecycleEvents 7.policyViolationEvents",
          "required" : true,
          "type" : "string",
          "x-example" : "eventType=ALL"
        } ],
        "responses" : {
          "202" : {
            "description" : "This response indicates that the archiving process has been started and returned the jobId to track it further.",
            "examples" : {
              "application/json" : "{\r\n    \"jobId\": \"1504177213671\"\r\n}"
            }
          },
          "401" : {
            "description" : "This response indicates that invalid credentials have been provided for the request."
          },
          "400" : {
            "description" : "This status code indicates that the request URL is not valid."
          },
          "500" : {
            "description" : "This response indicates that the server has encountered an error while archiving the api transactions. "
          }
        },
        "security" : [ {
          "Basic" : [ ]
        } ]
      }
    },
    "/apitransactions/archives/{fileName}" : {
      "post" : {
        "description" : "This method is used to restore the runtime data by specifying the archive file name. See GET /apitransactions/archives/ to know how to get the existing archive file names for more details. This method returns the job id as a response to track the status further. The user should be part of API-Gateway-Administrators group or else should have 'Manage purge and restore runtime events' privilege to perform this operation.",
        "operationId" : "restoreData",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "fileName",
          "in" : "path",
          "description" : "This parameter indicates the file name to restore. Ex: fileName=default-2017-08-29-1504011306456.",
          "required" : true,
          "type" : "string",
          "x-example" : "default-2017-02-09-1486644396751"
        } ],
        "responses" : {
          "202" : {
            "description" : "This response indicates that the restore process has been started and returned the jobId to track it further.",
            "examples" : {
              "application/json" : "{\r\n    \"jobId\": \"1504177213671\"\r\n}"
            }
          },
          "401" : {
            "description" : "This response indicates that invalid credentials have been provided for the request."
          },
          "500" : {
            "description" : "This response indicates that the server has encountered an error while restoring the archive file. "
          }
        },
        "security" : [ {
          "Basic" : [ ]
        } ]
      }
    },
    "/apitransactions/jobs/{jobId}" : {
      "get" : {
        "description" : "Use this method to know the status of a specific job. This method returns the status and file name (in case of archive process) as a response. The user should be part of API-Gateway-Administrators group or else should have 'Manage purge and restore runtime events' privilege to perform this operation",
        "operationId" : "trackJobStatus",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "jobId",
          "in" : "path",
          "description" : "This parameter indicates the job Id. job Id is needed to identify and track the status of a job which has been initiated earlier. Ex: jobId=1504011632215",
          "required" : true,
          "type" : "string",
          "x-example" : "1234432412312"
        } ],
        "responses" : {
          "200" : {
            "description" : "This response indicates that the status has been returned to the requestor.",
            "examples" : {
              "application/json" : "{\r\n    \"status\": \"Completed\",\r\n    \"Filename\": \"default-2017-08-31-1504177207377\"\r\n}"
            }
          },
          "401" : {
            "description" : "This response indicates that invalid credentials have been provided for the request."
          },
          "500" : {
            "description" : "This response indicates that the server has encountered an error while returning the status. "
          }
        },
        "security" : [ {
          "Basic" : [ ]
        } ]
      }
    },
    "/apitransactions/jobs" : {
      "get" : {
        "description" : "This method returns a list of pending jobs. Every time you initiate archive, restore or purge process you will get the job id as a response. You can then use the specific job id to query the status of the initiated operation. The user should be part of API-Gateway-Administrators group or else should have 'Manage purge and restore runtime events' privilege to perform this operation.",
        "operationId" : "listAllPendingJobs",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "This response indicates that the list of in progress job ids has been returned to the requestor.",
            "examples" : {
              "application/json" : "{\r\n    \"pendingJobs\": [124234,3312312]\r\n}"
            }
          },
          "401" : {
            "description" : "This response indicates that invalid credentials have been provided for the request."
          },
          "500" : {
            "description" : "This response indicates that the server has encountered an error while returning the list of in progress job ids. "
          }
        },
        "security" : [ {
          "Basic" : [ ]
        } ]
      }
    },
    "/licenseNotifications" : {
      "get" : {
        "description" : "The GET method returns the latest notification issued for a transaction based license.",
        "operationId" : "getCurrentMonthLatestNotification",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "This response indicates that the recent transaction based license alert notification has been returned successfully. The response body is the latest transaction based license alert notification.",
            "examples" : {
              "application/json" : "{\r\n    \"notification\": {\r\n        \"user\": \"admin\",\r\n        \"notificationType\": \"UI-notification\",\r\n        \"currentUsagePercent\": \"265\",\r\n        \"currentUsage\": \"53/20\",\r\n        \"creationDate\": \"1502098979628\",\r\n        \"notification\": \"Current month allocated quota has been reached\",\r\n        \"notifyAt\": 100,\r\n        \"monthAndYear\": \"8/2017\"\r\n    },\r\n    \"result\": \"success\"\r\n}"
            }
          },
          "401" : {
            "description" : "This response indicates that invalid credentials have been provided for the request."
          },
          "500" : {
            "description" : "This response indicates that the server has encountered an error while fetching the latest transaction based license alert notification"
          }
        },
        "security" : [ {
          "Basic" : [ ]
        } ]
      }
    },
    "/licenseNotificationCriteria" : {
      "get" : {
        "description" : "Transaction based license notification criteria are like a usage checkpoint and whenever usage reaches to that checkpoint, a notification will be generated. This GET method returns the existing transaction based license notification criteria's as a response.The user should be part of API-Gateway-Administrators group or else should have 'manage administration configurations' privilege to add notification criteria.",
        "operationId" : "getAllNotificationCriteria",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "This response indicates that the list of notification criteria's has been returned successfully. The response body is the list of notification criteria's.",
            "examples" : {
              "application/json" : "{\r\n    \"notificationCriteriaList\": [\r\n        {\r\n            \"id\": \"1503882085022\",\r\n            \"user\": \"admin\",\r\n            \"notifyAt\": 100,\r\n            \"notificationType\": \"UI-notification\",\r\n            \"creationDate\": \"1503560319396\",\r\n            \"defaultNotificationCriteria\": true\r\n        },\r\n        {\r\n            \"id\": \"1503882084702\",\r\n            \"user\": \"admin\",\r\n            \"notifyAt\": 90,\r\n            \"notificationType\": \"UI-notification\",\r\n            \"creationDate\": \"1503560319260\",\r\n            \"defaultNotificationCriteria\": true\r\n        }\r\n    ],\r\n    \"result\": \"success\"\r\n}"
            }
          },
          "401" : {
            "description" : "This response indicates that invalid credentials have been provided for the request."
          },
          "500" : {
            "description" : "This response indicates that the server has encountered an error while fetching the list of notification criteria's"
          }
        },
        "security" : [ {
          "Basic" : [ ]
        } ]
      },
      "post" : {
        "description" : "Transaction based license(TBL) notification criteria is used to monitor the API Gateway usage. API Gateway TBL will have the the permitted invocations per month defined in the license file and if user want to get notified when usage reaches to some point before it breaches the license limit, then user has to add a notification criteria by mentioning the usage point and notification will be generated when usage reaches to that point. This POST method is used to create transaction based license notification criteria in API Gateway. The user should be part of API-Gateway-Administrators group or else should have 'manage administration configurations' privilege to add notification criteria.",
        "operationId" : "saveNotificationCriteria",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/NotificationCriteria"
          },
          "x-examples" : {
            "application/json" : "{\"notificationCriteria\":{\"user\":\"admin\",\"notifyAt\":\"70\",\"email\":\"sss@sag.com\",\"notificationType\":\"both\"}}"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "This response indicates that the notification criteria has been created successfully.",
            "examples" : {
              "application/json" : "{\r\n    \"notificationCriteriaResponse\": \"license notificationCriteria created successfully\"\r\n}"
            }
          },
          "401" : {
            "description" : "This response indicates that invalid credentials have been provided for the request."
          },
          "500" : {
            "description" : "This response indicates that the server has encountered an error while creating the notification criteria"
          }
        },
        "security" : [ {
          "Basic" : [ ]
        } ]
      },
      "put" : {
        "description" : "This PUT method is used to update the existing transaction based license notification criteria in API Gateway.The user should be part of API-Gateway-Administrators group or else should have 'manage administration configurations' privilege to add notification criteria.",
        "operationId" : "updateNotificationCriteria",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/NotificationCriteria"
          },
          "x-examples" : {
            "application/json" : "{\"notificationCriteria\":{\"id\":\"123\",\"notifyAt\":\"70\",\"email\":\"sss@sag.com\",\"notificationType\":\"both\"}}"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "This response indicates that the notification criteria has been updated successfully.",
            "examples" : {
              "application/json" : "{\r\n    \"notificationCriteriaResponse\": \"license notificationCriteria updated sucessfully\"\r\n}"
            }
          },
          "401" : {
            "description" : "This response indicates that invalid credentials have been provided for the request."
          },
          "500" : {
            "description" : "This response indicates that the server has encountered an error while updating the notification criteria"
          }
        },
        "security" : [ {
          "Basic" : [ ]
        } ]
      }
    },
    "/licenseNotificationCriteria/{notificationCriteriaId}" : {
      "get" : {
        "description" : "The GET method returns the transaction based license notification criteria based on the id.  \n\nTransaction based license notification criteria is like a usage check point whenever usage reaches to that check point user will get notified by the notification.The user should be part of API-Gateway-Administrators group or else should have 'manage administration configurations' privilege to add notification criteria.",
        "operationId" : "getNotificationCriteria",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "notificationCriteriaId",
          "in" : "path",
          "description" : "This parameter indicates the notification criteria id to fetch the notification criteria",
          "required" : true,
          "type" : "string",
          "x-example" : "12334"
        } ],
        "responses" : {
          "200" : {
            "description" : "This response indicates that the notification criteria has been returned successfully. The response body is the notification criteria.",
            "examples" : {
              "application/json" : "{\"notificationCriteria\":{\"id\":\"2423422\",\"user\":\"admin\",\"notifyAt\":\"70\",\"email\":\"sss@sag.com\",\"notificationType\":\"both\"}}"
            }
          },
          "401" : {
            "description" : "This response indicates that invalid credentials have been provided for the request."
          },
          "500" : {
            "description" : "This response indicates that the server has encountered an error while fetching the the notification criteria"
          }
        },
        "security" : [ {
          "Basic" : [ ]
        } ]
      },
      "delete" : {
        "description" : "This method deletes the transaction based license notification criteria based on the id.  The user should be part of API-Gateway-Administrators group or else should have 'manage administration configurations' privilege to add notification criteria.",
        "operationId" : "deleteNotificationCriteria",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "notificationCriteriaId",
          "in" : "path",
          "description" : "This parameter indicates the notification criteria id to purge the notification criteria",
          "required" : true,
          "type" : "string",
          "x-example" : "12334"
        } ],
        "responses" : {
          "204" : {
            "description" : "This response indicates that the transaction based license notification criteria deleted successfully."
          },
          "401" : {
            "description" : "This response indicates that invalid credentials have been provided for the request."
          },
          "400" : {
            "description" : "This status code indicates that the request URL is not valid."
          },
          "500" : {
            "description" : "This response indicates that the server has encountered an error while purging the notification criteria. "
          }
        },
        "security" : [ {
          "Basic" : [ ]
        } ]
      }
    },
    "/configurations/loadBalancer" : {
      "get" : {
        "description" : "The method retrieves the details of the Load Balancer configuration in API Gateway.",
        "operationId" : "getLoadBalancers",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "This status code indicates that the Load Balancer configurations are retrieved successfully. ",
            "schema" : {
              "$ref" : "#/definitions/LoadBalancer"
            },
            "examples" : {
              "application/json" : "{\r\n    \"webAppUrl\": \"\",\r\n    \"httpUrls\": [\r\n        \"http://localhost:8080\"\r\n    ],\r\n    \"httpsUrls\": [\r\n        \"https://localhost:443\"\r\n    ],\r\n    \"websocketUrls\": []\r\n}"
            }
          },
          "400" : {
            "description" : "This status code indicates that the loadBalancer not mentioned in API access uri path.",
            "examples" : {
              "application/json" : "{\r\n    \"errorDetails\": \"Missing mandatory field configId in request.\"\r\n}"
            }
          },
          "401" : {
            "description" : "This status code indicates that the user is not a valid API Gateway user for retrieving the Load Balancer configuration."
          }
        },
        "security" : [ {
          "Basic" : [ ]
        } ]
      },
      "put" : {
        "description" : "The method is used to update the details of the load Balancer configuration in API Gateway.",
        "operationId" : "saveLoadBalancers",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/LoadBalancer"
          },
          "x-examples" : {
            "application/json" : "{\r\n    \"webAppUrl\": \"\",\r\n    \"httpUrls\": [\r\n        \"http://localhost:8080\"\r\n    ],\r\n    \"httpsUrls\": [\r\n        \"https://localhost:443\"\r\n    ],\r\n    \"websocketUrls\": []\r\n}"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "This status code indicates that the Load Balancer configuration has been successfully updated in API Gateway, and the updated configuration is available in the response body.",
            "schema" : {
              "$ref" : "#/definitions/LoadBalancer"
            },
            "examples" : {
              "application/json" : "{\r\n    \"webAppUrl\": \"\",\r\n    \"httpUrls\": [\r\n        \"http://localhost:8080\"\r\n    ],\r\n    \"httpsUrls\": [\r\n        \"https://localhost:443\"\r\n    ],\r\n    \"websocketUrls\": []\r\n}"
            }
          },
          "401" : {
            "description" : "This status code indicates that either user didn't provide right credentials or user doesn't have \"Manage General Administration\" functional privilege to access this API."
          },
          "400" : {
            "description" : "This status code indicates that the request body is invalid.",
            "examples" : {
              "application/json" : "{\r\n\"errorDetails\": \" Invalid property key found in request payload.\"\r\n}"
            }
          }
        },
        "security" : [ {
          "Basic" : [ ]
        } ]
      }
    },
    "/configurations/extended" : {
      "get" : {
        "description" : "This method retrieves the list of extended settings from API Gateway.",
        "operationId" : "getExtendedSettings",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "This status code indicates that the list of Extended settings is successfully retrieved from API Gateway.",
            "schema" : {
              "$ref" : "#/definitions/ExtendedSettings"
            },
            "examples" : {
              "application/json" : "{\r\n\t\"pg.snmp.customTarget.connTimeout\": \"0\",\r\n\t\"pg.cs.snmpTarget.maxRequestSize\": \"10485760\",\r\n\t\"apig_schemaValidationPoolSize\": \"10\",\r\n\t\"pg.cs.snmpTarget.sendTimeOut\": \"500\",\r\n\t\"allowExceedMaxWindowSize\": \"true\",\r\n\t\"apig_MENConfiguration_tickInterval\": \"60\",\r\n\t\"apiKeyExpirationPeriod\": \"\",\r\n\t\"pg_JWT_isHTTPS\": \"true\",\r\n\t\"pg.snmp.userTarget.retries\": \"1\",\r\n\t\"pg.snmp.communityTarget.sendTimeOut\": \"500\",\r\n\t\"apiGroupingPossibleValues\": \"Finance Banking and Insurance,Sales and Ordering,Search,Transportation and Warehousing\",\r\n\t\"pg.snmp.communityTarget.retries\": \"1\",\r\n\t\"pg.cs.snmpTarget.base64Encoded\": \"false\",\r\n\t\"portClusteringEnabled\": \"false\",\r\n\t\"maxBackupsLimit\": \"-1\",\r\n\t\"pg.cs.snmpTarget.connTimeout\": \"0\",\r\n\t\"pg.snmp.userTarget.maxRequestSize\": \"65535\",\r\n\t\"pg.snmp.communityTarget.base64Encoded\": \"false\",\r\n\t\"apiKeyHeader\": \"x-Gateway-APIKey\",\r\n\t\"pg.snmp.userTarget.sendTimeOut\": \"500\",\r\n\t\"pg.snmp.communityTarget.maxRequestSize\": \"65535\",\r\n\t\"defaultEncoding\": \"UTF-8\",\r\n\t\"pg_xslt_enableDOM\": \"false\",\r\n\t\"pg_OpenID_isHTTPS\": \"true\",\r\n\t\"transformerPoolSize\": \"5\",\r\n\t\"backupSharedFileLocation\": \"\",\r\n\t\"esScrollTimeOut\": \"60000\",\r\n\t\"pg.lb.failoverOnDowntimeErrorOnly\": \"false\",\r\n\t\"cl_test_key\": \"testValue\",\r\n\t\"maxWindowSize\": \"10000\",\r\n\t\"pg.3pSnmpSender.sendDelay\": \"0\",\r\n\t\"pg.uddiClient.publish.maxThreads\": \"2\",\r\n\t\"pg_Active_OpenID_Provider\": \"\",\r\n\t\"pg_oauth2_isHTTPS\": \"true\",\r\n\t\"pg.cs.snmpTarget.retries\": \"1\",\r\n\t\"apiMaturityStatePossibleValues\": \"Beta,Deprecated,Experimental,Production,Test\",\r\n\t\"apig_rest_service_redirect\": \"false\",\r\n\t\"pg.uddiClient.uddiClientTimeout\": \"15000\"\r\n}"
            }
          },
          "400" : {
            "description" : "This status code indicates that the provided configuration id is invalid.",
            "examples" : {
              "application/json" : "{\r\n    \"errorDetails\": \" Invalid configId value in request. configId: extended.\"\r\n}"
            }
          },
          "401" : {
            "description" : "This status code indicates that the user did not provide any user credential or the user is not authorized to retrieve Extended settings."
          }
        },
        "security" : [ {
          "Basic" : [ ]
        } ]
      },
      "put" : {
        "description" : "This method updates or creates a list of extended settings in API Gateway. The user should have an API Gateway administrator access to update the extended settings. The user needs to send only the modified settings in the payload and not required to send all.",
        "operationId" : "saveExtendedSettings",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ExtendedSettings"
          },
          "x-examples" : {
            "application/json" : "{\r\n\t\"pg.snmp.customTarget.connTimeout\": \"0\",\r\n\t\"pg.cs.snmpTarget.maxRequestSize\": \"10485760\",\r\n\t\"apig_schemaValidationPoolSize\": \"10\",\r\n\t\"pg.cs.snmpTarget.sendTimeOut\": \"500\",\r\n\t\"allowExceedMaxWindowSize\": \"true\",\r\n\t\"apig_MENConfiguration_tickInterval\": \"60\",\r\n\t\"apiKeyExpirationPeriod\": \"\",\r\n\t\"pg_JWT_isHTTPS\": \"true\",\r\n\t\"pg.snmp.userTarget.retries\": \"1\",\r\n\t\"pg.snmp.communityTarget.sendTimeOut\": \"500\",\r\n\t\"apiGroupingPossibleValues\": \"Finance Banking and Insurance,Sales and Ordering,Search,Transportation and Warehousing\",\r\n\t\"pg.snmp.communityTarget.retries\": \"1\",\r\n\t\"pg.cs.snmpTarget.base64Encoded\": \"false\",\r\n\t\"portClusteringEnabled\": \"false\",\r\n\t\"maxBackupsLimit\": \"-1\",\r\n\t\"pg.cs.snmpTarget.connTimeout\": \"0\",\r\n\t\"pg.snmp.userTarget.maxRequestSize\": \"65535\",\r\n\t\"pg.snmp.communityTarget.base64Encoded\": \"false\",\r\n\t\"apiKeyHeader\": \"x-Gateway-APIKey\",\r\n\t\"pg.snmp.userTarget.sendTimeOut\": \"500\",\r\n\t\"pg.snmp.communityTarget.maxRequestSize\": \"65535\",\r\n\t\"defaultEncoding\": \"UTF-8\",\r\n\t\"pg_xslt_enableDOM\": \"false\",\r\n\t\"pg_OpenID_isHTTPS\": \"true\",\r\n\t\"transformerPoolSize\": \"5\",\r\n\t\"backupSharedFileLocation\": \"\",\r\n\t\"esScrollTimeOut\": \"60000\",\r\n\t\"pg.lb.failoverOnDowntimeErrorOnly\": \"false\",\r\n\t\"cl_test_key\": \"testValue\",\r\n\t\"maxWindowSize\": \"10000\",\r\n\t\"pg.3pSnmpSender.sendDelay\": \"0\",\r\n\t\"pg.uddiClient.publish.maxThreads\": \"2\",\r\n\t\"pg_Active_OpenID_Provider\": \"\",\r\n\t\"pg_oauth2_isHTTPS\": \"true\",\r\n\t\"pg.cs.snmpTarget.retries\": \"1\",\r\n\t\"apiMaturityStatePossibleValues\": \"Beta,Deprecated,Experimental,Production,Test\",\r\n\t\"apig_rest_service_redirect\": \"false\",\r\n\t\"pg.uddiClient.uddiClientTimeout\": \"15000\"\r\n}"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "This status code indicates that the list of Extended settings has been successfully updated in API Gateway, and the updated list of Extended settings is available in the response body.",
            "schema" : {
              "$ref" : "#/definitions/ExtendedSettings"
            },
            "examples" : {
              "application/json" : "{\r\n\t\"configId\": \"extended\",\r\n\t\"pg.snmp.customTarget.connTimeout\": \"0\",\r\n\t\"pg.cs.snmpTarget.maxRequestSize\": \"10485760\",\r\n\t\"apig_schemaValidationPoolSize\": \"10\",\r\n\t\"pg.cs.snmpTarget.sendTimeOut\": \"500\",\r\n\t\"allowExceedMaxWindowSize\": \"true\",\r\n\t\"apig_MENConfiguration_tickInterval\": \"60\",\r\n\t\"apiKeyExpirationPeriod\": \"\",\r\n\t\"pg_JWT_isHTTPS\": \"true\",\r\n\t\"pg.snmp.userTarget.retries\": \"1\",\r\n\t\"pg.snmp.communityTarget.sendTimeOut\": \"500\",\r\n\t\"apiGroupingPossibleValues\": \"Finance Banking and Insurance,Sales and Ordering,Search,Transportation and Warehousing\",\r\n\t\"pg.snmp.communityTarget.retries\": \"1\",\r\n\t\"pg.cs.snmpTarget.base64Encoded\": \"false\",\r\n\t\"portClusteringEnabled\": \"false\",\r\n\t\"maxBackupsLimit\": \"-1\",\r\n\t\"pg.cs.snmpTarget.connTimeout\": \"0\",\r\n\t\"pg.snmp.userTarget.maxRequestSize\": \"65535\",\r\n\t\"pg.snmp.communityTarget.base64Encoded\": \"false\",\r\n\t\"apiKeyHeader\": \"x-Gateway-APIKey\",\r\n\t\"pg.snmp.userTarget.sendTimeOut\": \"500\",\r\n\t\"pg.snmp.communityTarget.maxRequestSize\": \"65535\",\r\n\t\"defaultEncoding\": \"UTF-8\",\r\n\t\"pg_xslt_enableDOM\": \"false\",\r\n\t\"pg_OpenID_isHTTPS\": \"true\",\r\n\t\"transformerPoolSize\": \"5\",\r\n\t\"backupSharedFileLocation\": \"\",\r\n\t\"esScrollTimeOut\": \"60000\",\r\n\t\"pg.lb.failoverOnDowntimeErrorOnly\": \"false\",\r\n\t\"cl_test_key\": \"testValue\",\r\n\t\"maxWindowSize\": \"10000\",\r\n\t\"pg.3pSnmpSender.sendDelay\": \"0\",\r\n\t\"pg.uddiClient.publish.maxThreads\": \"2\",\r\n\t\"pg_Active_OpenID_Provider\": \"\",\r\n\t\"pg_oauth2_isHTTPS\": \"true\",\r\n\t\"pg.cs.snmpTarget.retries\": \"1\",\r\n\t\"apiMaturityStatePossibleValues\": \"Beta,Deprecated,Experimental,Production,Test\",\r\n\t\"apig_rest_service_redirect\": \"false\",\r\n\t\"pg.uddiClient.uddiClientTimeout\": \"15000\"\r\n}"
            }
          },
          "401" : {
            "description" : "This status code indicates that the user did not provide any user credential or the user is not authorized to update Extended settings."
          },
          "400" : {
            "description" : "This status code indicates that the the user sends an empty or invalid JSON payload."
          }
        },
        "security" : [ {
          "Basic" : [ ]
        } ]
      }
    },
    "/configurations/errorProcessing" : {
      "get" : {
        "description" : "This REST method is used to get the configured error template and the value of the property - sendNativeProviderFault,which enables the server to forward the native error as it is.",
        "operationId" : "getErrorProcessingDetails",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "This response returns the current fault message templates and the native fault configuration",
            "schema" : {
              "$ref" : "#/definitions/ErrorProcessing"
            },
            "examples" : {
              "application/json" : "{\r\n    \"sendNativeProviderFault\": \"false\",\r\n    \"defaultErrorMessage\": \"API Gateway encountered an error. Error Message: $ERROR_MESSAGE. Request Details: Service - $SERVICE, Operation - $OPERATION, Invocation Time:$TIME, Date:$DATE,  Client IP - $CLIENT_IP, User - $USER and Application:$CONSUMER_APPLICATION.\",\r\n    \"fallbackErrorMessage\": \"API Gateway encountered an error. Error Message: $ERROR_MESSAGE. Request Details: Service - $SERVICE, Operation - $OPERATION, Invocation Time:$TIME, Date:$DATE,  Client IP - $CLIENT_IP, User - $USER and Application:$CONSUMER_APPLICATION\"\r\n}"
            }
          },
          "400" : {
            "description" : "This status code indicates the request payload is not correct and corresponding error details can be seen in the response body"
          },
          "401" : {
            "description" : "This response indicates that invalid credentials have been provided for the request."
          }
        },
        "security" : [ {
          "Basic" : [ ]
        } ]
      },
      "put" : {
        "description" : "This REST method is used to update the default error template with any custom templates and the value of the property - sendNativeProviderFault.",
        "operationId" : "saveErrorProcessingDetails",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ErrorProcessing"
          },
          "x-examples" : {
            "application/json" : "{\r\n    \"sendNativeProviderFault\": \"false\",\r\n    \"defaultErrorMessage\": \"API Gateway encountered an error. Error Message: $ERROR_MESSAGE. Request Details: Service - $SERVICE, Operation - $OPERATION, Invocation Time:$TIME, Date:$DATE,  Client IP - $CLIENT_IP, User - $USER and Application:$CONSUMER_APPLICATION.\",\r\n    \"fallbackErrorMessage\": \"API Gateway encountered an error. Error Message: $ERROR_MESSAGE. Request Details: Service - $SERVICE, Operation - $OPERATION, Invocation Time:$TIME, Date:$DATE,  Client IP - $CLIENT_IP, User - $USER and Application:$CONSUMER_APPLICATION\"\r\n}"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "This status code indicates that API Gateway has successfully updated the API Fault template and the updated template can be found in the response body",
            "schema" : {
              "$ref" : "#/definitions/ErrorProcessing"
            },
            "examples" : {
              "application/json" : "{\r\n    \"sendNativeProviderFault\": \"false\",\r\n    \"defaultErrorMessage\": \"API Gateway encountered an error. Error Message: $ERROR_MESSAGE. Request Details: Service - $SERVICE, Operation - $OPERATION, Invocation Time:$TIME, Date:$DATE,  Client IP - $CLIENT_IP, User - $USER and Application:$CONSUMER_APPLICATION.\",\r\n    \"fallbackErrorMessage\": \"API Gateway encountered an error. Error Message: $ERROR_MESSAGE. Request Details: Service - $SERVICE, Operation - $OPERATION, Invocation Time:$TIME, Date:$DATE,  Client IP - $CLIENT_IP, User - $USER and Application:$CONSUMER_APPLICATION\"\r\n}"
            }
          },
          "401" : {
            "description" : "This response indicates that invalid credentials have been provided for the request."
          },
          "400" : {
            "description" : "This status code indicates the request payload is not correct and corresponding error details can be seen in the response body"
          }
        },
        "security" : [ {
          "Basic" : [ ]
        } ]
      }
    },
    "/configurations/gatewayDestinationConfig" : {
      "get" : {
        "description" : "The method retrieves the details of the API Gateway destination. API Gateway can publish events and performance metrics data. By default, error events, lifecycle events, policy violation event, and performance data are published to API Gateway.",
        "operationId" : "getGatewayAsDestination",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "This status code indicates that the API Gateway destination configurations are retrieved successfully. SendErrorEvent indicates whether API Gateway has to send error events to API Gateway destination. SendLifecycleEvent indicates whether API Gateway has to send lifecycle events to API Gateway destination. SendPolicyViolationEvent indicates whether API Gateway has to send policy violation events to API Gateway destination. SendPerformanceMetrics indicates whether API Gateway has to send performance metrics to API Gateway destination. MetricsPublishInterval indicates the interval at which the performance metrics will be published (value has to be between 1-60), default being 60.",
            "schema" : {
              "$ref" : "#/definitions/Destination"
            },
            "examples" : {
              "application/json" : "{\r\n    \"sendErrorEvent\": \"false\",\r\n    \"sendLifecycleEvent\": \"false\",\r\n    \"sendPolicyViolationEvent\": \"false\",\r\n    \"sendPerformanceMetrics\": \"false\",\r\n    \"metricsPublishInterval\": \"60\"\r\n}"
            }
          },
          "400" : {
            "description" : "This status code indicates that the provided configuration id is invalid.",
            "examples" : {
              "application/json" : "{\r\n    \"errorDetails\": \" Invalid configId value in request. configId: gatewayDestinationConfigg.\"\r\n}"
            }
          },
          "401" : {
            "description" : "This status code indicates that the user is not a valid API Gateway user for retrieving the API Gateway destination configuration."
          }
        },
        "security" : [ {
          "Basic" : [ ]
        } ]
      },
      "put" : {
        "description" : "The method is used to update the details of the API Gateway destination in API Gateway.",
        "operationId" : "saveGatewayAsDestination",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Destination"
          },
          "x-examples" : {
            "application/json" : "{\r\n    \"sendErrorEvent\": \"false\",\r\n    \"sendLifecycleEvent\": \"false\",\r\n    \"sendPolicyViolationEvent\": \"false\",\r\n    \"sendPerformanceMetrics\": \"false\",\r\n    \"metricsPublishInterval\": \"60\"\r\n}"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "This status code indicates that the API Gateway destination configuration has been successfully updated in API Gateway, and the updated configuration is available in the response body.",
            "schema" : {
              "$ref" : "#/definitions/Destination"
            },
            "examples" : {
              "application/json" : "{\r\n    \"sendErrorEvent\": \"false\",\r\n    \"sendLifecycleEvent\": \"false\",\r\n    \"sendPolicyViolationEvent\": \"false\",\r\n    \"sendPerformanceMetrics\": \"false\",\r\n    \"metricsPublishInterval\": \"60\"\r\n}"
            }
          },
          "405" : {
            "description" : "This status code indicates that the specified HTTP method is not allowed for the requested destination configuration in API Gateway.",
            "examples" : {
              "application/json" : "{\r\n\t\"errorDetails\": \" Unable to process the PUT request for API Gateway destination configuration. Error occurred while processing the payload. Error Message: Method: PUT is not allowed on resource: gatewayDestinationConfig\"\r\n}"
            }
          },
          "401" : {
            "description" : "This status code indicates that either user didn't provide right credentials or user doesn't have \"Manage Destination Administration\" functional privilege to access this API."
          },
          "400" : {
            "description" : "This status code indicates that the request body is invalid.",
            "examples" : {
              "application/json" : "{\r\n\"errorDetails\": \" Invalid property key found in request payload.\"\r\n}"
            }
          }
        },
        "security" : [ {
          "Basic" : [ ]
        } ]
      }
    },
    "/configurations/auditlogDestinationConfig" : {
      "get" : {
        "description" : "The method retrieves the details of the Audit Log destination in API Gateway. Audit log captures the API runtime invocations performed in API Gateway. The audit log data is written to a file or a database based on the configurations. Transactions events are written to the audit log only when the Audit Log is selected as a destination in Log Invocation Policy.",
        "operationId" : "getAuditLogAsDestination",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "This status code indicates that the Audit Log destination configurations are retrieved successfully.",
            "schema" : {
              "$ref" : "#/definitions/AuditLogDestination"
            },
            "examples" : {
              "application/json" : "{\r\n    \"name\": \"API Gateway Transaction Logger\",\r\n    \"enabled\": \"false\",\r\n    \"mode\": \"synchronous\",\r\n    \"guaranteed\": \"false\",\r\n    \"destination\": \"file\",\r\n    \"maximumQueueSize\": \"100000\",\r\n    \"maximumRetries\": \"3\",\r\n    \"waitBetweenRetries\": \"5\"\r\n}"
            }
          },
          "400" : {
            "description" : "This status code indicates that the provided configuration id is invalid.",
            "examples" : {
              "application/json" : "{\r\n    \"errorDetails\": \" Invalid configId value in request. configId: auditlogDestinationConfigg.\"\r\n}"
            }
          },
          "401" : {
            "description" : "This status code indicates that the user is not a valid API Gateway user for retrieving the Audit Log destination configuration."
          }
        },
        "security" : [ {
          "Basic" : [ ]
        } ]
      },
      "put" : {
        "description" : "The method is used to update the details of the Audit Log destination in API Gateway.",
        "operationId" : "saveAuditLogAsDestination",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/AuditLogDestination"
          },
          "x-examples" : {
            "application/json" : "{\r\n    \"name\": \"API Gateway Transaction Logger\",\r\n    \"enabled\": \"false\",\r\n    \"mode\": \"synchronous\",\r\n    \"guaranteed\": \"false\",\r\n    \"destination\": \"file\",\r\n    \"maximumQueueSize\": \"100000\",\r\n    \"maximumRetries\": \"3\",\r\n    \"waitBetweenRetries\": \"5\"\r\n}"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "This status code indicates that the Audit Log destination configuration has been successfully updated in API Gateway, and the updated configuration is available in the response body.",
            "schema" : {
              "$ref" : "#/definitions/AuditLogDestination"
            },
            "examples" : {
              "application/json" : "{\r\n    \"name\": \"API Gateway Transaction Logger\",\r\n    \"enabled\": \"false\",\r\n    \"mode\": \"synchronous\",\r\n    \"guaranteed\": \"false\",\r\n    \"destination\": \"file\",\r\n    \"maximumQueueSize\": \"100000\",\r\n    \"maximumRetries\": \"3\",\r\n    \"waitBetweenRetries\": \"5\"\r\n}"
            }
          },
          "401" : {
            "description" : "This status code indicates that either user didn't provide right credentials or user doesn't have \"Manage Destination Administration\" functional privilege to access this API."
          },
          "405" : {
            "description" : "This status code indicates that the specified HTTP method is not allowed for the requested destination configuration in API Gateway.",
            "examples" : {
              "application/json" : "{\r\n\t\"errorDetails\": \" Unable to process the PUT request for Audit Log destination configuration. Error occurred while processing the payload. Error Message: Method: PUT is not allowed on resource: auditlogDestinationConfig\"\r\n}"
            }
          },
          "400" : {
            "description" : "This status code indicates that the request body is invalid.",
            "examples" : {
              "application/json" : "{\r\n\"errorDetails\": \" Invalid property key found in request payload.\"\r\n}"
            }
          }
        },
        "security" : [ {
          "Basic" : [ ]
        } ]
      }
    },
    "/configurations/centraSiteDestinationCommunicationConfig" : {
      "get" : {
        "description" : "The method retrieves the communication details of the CentraSite destination in API Gateway. API Gateway can publish events and metrics to the configured CentraSite destination.",
        "operationId" : "getCentraSiteCommunicationAsDestination",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "This status code indicates that the Communication details for the CentraSite destination configurations are retrieved successfully.",
            "schema" : {
              "$ref" : "#/definitions/CSCommunicationDestination"
            },
            "examples" : {
              "application/json" : "{\r\n    \"protocol\": \"tcp\",\r\n    \"hostName\": \"localhost\",\r\n    \"targetName\": \"cstarget\",\r\n    \"UDDIPort\": \"53307\",\r\n    \"userName\": \"Admin\",\r\n    \"password\": \"***\",\r\n    \"gatewayAssetId\": \"334-3443-sd34\"\r\n}"
            }
          },
          "400" : {
            "description" : "This status code indicates that the provided configuration id is invalid.",
            "examples" : {
              "application/json" : "{\r\n    \"errorDetails\": \" Invalid configId value in request. configId: centraSiteDestinationCommunicationConfigg.\"\r\n}"
            }
          },
          "401" : {
            "description" : "This status code indicates that the user is not a valid API Gateway user for retrieving the Communication details for the CentraSite destination."
          }
        },
        "security" : [ {
          "Basic" : [ ]
        } ]
      },
      "put" : {
        "description" : "The method is used to update the Communication details of the CentraSite destination in API Gateway.",
        "operationId" : "saveCentraSiteCommunicationAsDestination",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/CSCommunicationDestination"
          },
          "x-examples" : {
            "application/json" : "{\r\n    \"protocol\": \"tcp\",\r\n    \"hostName\": \"localhost\",\r\n    \"targetName\": \"cstarget\",\r\n    \"UDDIPort\": \"53307\",\r\n    \"userName\": \"Admin\",\r\n    \"password\": \"***\",\r\n    \"gatewayAssetId\": \"334-3443-sd34\"\r\n}"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "This status code indicates that the CentraSite Communication destination configuration has been successfully updated in API Gateway, and the updated configuration is available in the response body.",
            "schema" : {
              "$ref" : "#/definitions/CSCommunicationDestination"
            },
            "examples" : {
              "application/json" : "{\r\n    \"protocol\": \"tcp\",\r\n    \"hostName\": \"localhost\",\r\n    \"targetName\": \"cstarget\",\r\n    \"UDDIPort\": \"53307\",\r\n    \"userName\": \"Admin\",\r\n    \"password\": \"***\",\r\n    \"gatewayAssetId\": \"334-3443-sd34\"\r\n}"
            }
          },
          "401" : {
            "description" : "This status code indicates that either user didn't provide right credentials or user doesn't have \"Manage Destination Administration\" functional privilege to access this API."
          },
          "405" : {
            "description" : "This status code indicates that the specified HTTP method is not allowed for the requested destination configuration in API Gateway.",
            "examples" : {
              "application/json" : "{\r\n\t\"errorDetails\": \" Unable to process the PUT request for Audit Log destination configuration. Error occurred while processing the payload. Error Message: Method: PUT is not allowed on resource: centraSiteDestinationCommunicationConfigg\"\r\n}"
            }
          },
          "400" : {
            "description" : "This status code indicates that the request body is invalid.",
            "examples" : {
              "application/json" : "{\r\n\"errorDetails\": \" Invalid property key found in request payload.\"\r\n}"
            }
          }
        },
        "security" : [ {
          "Basic" : [ ]
        } ]
      }
    },
    "/configurations/centraSiteDestinationSNMPConfig" : {
      "get" : {
        "description" : "The method retrieves the SNMP details of the CentraSite destination in API Gateway. API Gateway can publish events and metrics to the configured CentraSite destination.",
        "operationId" : "getCentraSiteSNMPAsDestination",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "This status code indicates that the CentraSite SNMP destination configurations are retrieved successfully.",
            "schema" : {
              "$ref" : "#/definitions/CSSNMPDestination"
            },
            "examples" : {
              "application/json" : "{\r\n    \"sendTRAPsToCentrasite\": \"false\",\r\n    \"hostName\": \"localhost\",\r\n    \"port\": \"8181\",\r\n    \"transport\": \"tcp\",\r\n    \"userName\": \"Administrator\",\r\n    \"authorizationPassword\": \"*****\",\r\n    \"authorizationProtocol\": \"MD5\",\r\n    \"privacyPassword\": \"*****\",\r\n    \"privacyProtocol\": \"DES\"\r\n}"
            }
          },
          "400" : {
            "description" : "This status code indicates that the provided configuration id is invalid.",
            "examples" : {
              "application/json" : "{\r\n    \"errorDetails\": \" Invalid configId value in request. configId: centraSiteDestinationSNMPConfigg.\"\r\n}"
            }
          },
          "401" : {
            "description" : "This status code indicates that the user is not a valid API Gateway user for retrieving the CentraSite SNMP destination configuration."
          }
        },
        "security" : [ {
          "Basic" : [ ]
        } ]
      },
      "put" : {
        "description" : "The method is used to update the details of the CentraSite SNMP destination in API Gateway.",
        "operationId" : "saveCentraSiteSNMPAsDestination",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/CSSNMPDestination"
          },
          "x-examples" : {
            "application/json" : "{\r\n    \"sendTRAPsToCentrasite\": \"false\",\r\n    \"hostName\": \"localhost\",\r\n    \"port\": \"8181\",\r\n    \"transport\": \"tcp\",\r\n    \"userName\": \"Administrator\",\r\n    \"authorizationPassword\": \"*****\",\r\n    \"authorizationProtocol\": \"MD5\",\r\n    \"privacyPassword\": \"*****\",\r\n    \"privacyProtocol\": \"DES\"\r\n}"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "This status code indicates that the CentraSite SNMP destination configuration has been successfully updated in API Gateway, and the updated configuration is available in the response body.",
            "schema" : {
              "$ref" : "#/definitions/CSSNMPDestination"
            },
            "examples" : {
              "application/json" : "{\r\n    \"sendTRAPsToCentrasite\": \"false\",\r\n    \"hostName\": \"localhost\",\r\n    \"port\": \"8181\",\r\n    \"transport\": \"tcp\",\r\n    \"userName\": \"Administrator\",\r\n    \"authorizationPassword\": \"*****\",\r\n    \"authorizationProtocol\": \"MD5\",\r\n    \"privacyPassword\": \"*****\",\r\n    \"privacyProtocol\": \"DES\"\r\n}"
            }
          },
          "401" : {
            "description" : "This status code indicates that either user didn't provide right credentials or user doesn't have \"Manage Destination Administration\" functional privilege to access this API."
          },
          "405" : {
            "description" : "This status code indicates that the specified HTTP method is not allowed for the requested destination configuration in API Gateway.",
            "examples" : {
              "application/json" : "{\r\n\t\"errorDetails\": \" Unable to process the PUT request for Audit Log destination configuration. Error occurred while processing the payload. Error Message: Method: PUT is not allowed on resource: centraSiteDestinationSNMPConfigg\"\r\n}"
            }
          },
          "400" : {
            "description" : "This status code indicates that the request body is invalid.",
            "examples" : {
              "application/json" : "{\r\n\"errorDetails\": \" Invalid property key found in request payload.\"\r\n}"
            }
          }
        },
        "security" : [ {
          "Basic" : [ ]
        } ]
      }
    },
    "/configurations/jdbcDestinationConfig" : {
      "get" : {
        "description" : "The method retrieves the details of the Database destination in API Gateway. API Gateway can publish events and performance metrics data to the configured database.",
        "operationId" : "getDatabaseAsDestination",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "This status code indicates that the Database destination configurations are retrieved successfully. SendErrorEvent indicates whether API Gateway has to send error events to Database destination. SendLifecycleEvent indicates whether API Gateway has to send lifecycle events to Database destination. SendPolicyViolationEvent indicates whether API Gateway has to send policy violation events to Database destination. SendPerformanceMetrics indicates whether API Gateway has to send performance metrics to Database destination. MetricsPublishInterval indicates the interval at which the performance metrics will be published (value has to be between 1-60), default being 60.",
            "schema" : {
              "$ref" : "#/definitions/Destination"
            },
            "examples" : {
              "application/json" : "{\r\n    \"sendErrorEvent\": \"false\",\r\n    \"sendLifecycleEvent\": \"false\",\r\n    \"sendPolicyViolationEvent\": \"false\",\r\n    \"sendPerformanceMetrics\": \"false\",\r\n    \"metricsPublishInterval\": \"60\"\r\n}"
            }
          },
          "400" : {
            "description" : "This status code indicates that the provided configuration id is invalid.",
            "examples" : {
              "application/json" : "{\r\n    \"errorDetails\": \" Invalid configId value in request. configId: jdbcDestinationConfigg.\"\r\n}"
            }
          },
          "401" : {
            "description" : "This status code indicates that the user is not a valid API Gateway user for retrieving the Database destination configuration."
          }
        },
        "security" : [ {
          "Basic" : [ ]
        } ]
      },
      "put" : {
        "description" : "The method is used to update the details of the Database destination in API Gateway.",
        "operationId" : "saveDatabaseAsDestination",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Destination"
          },
          "x-examples" : {
            "application/json" : "{\r\n    \"sendErrorEvent\": \"false\",\r\n    \"sendLifecycleEvent\": \"false\",\r\n    \"sendPolicyViolationEvent\": \"false\",\r\n    \"sendPerformanceMetrics\": \"false\",\r\n    \"metricsPublishInterval\": \"60\"\r\n}"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "This status code indicates that the Database destination configuration has been successfully updated in API Gateway, and the updated configuration is available in the response body.",
            "schema" : {
              "$ref" : "#/definitions/Destination"
            },
            "examples" : {
              "application/json" : "{\r\n    \"sendErrorEvent\": \"false\",\r\n    \"sendLifecycleEvent\": \"false\",\r\n    \"sendPolicyViolationEvent\": \"false\",\r\n    \"sendPerformanceMetrics\": \"false\",\r\n    \"metricsPublishInterval\": \"60\"\r\n}"
            }
          },
          "401" : {
            "description" : "This status code indicates that either user didn't provide right credentials or user doesn't have \"Manage Destination Administration\" functional privilege to access this API."
          },
          "405" : {
            "description" : "This status code indicates that the specified HTTP method is not allowed for the requested destination configuration in API Gateway.",
            "examples" : {
              "application/json" : "{\r\n\t\"errorDetails\": \" Unable to process the PUT request for Database destination configuration. Error occurred while processing the payload. Error Message: Method: PUT is not allowed on resource: jdbcDestinationConfig\"\r\n}"
            }
          },
          "400" : {
            "description" : "This status code indicates that the request body is invalid.",
            "examples" : {
              "application/json" : "{\r\n\"errorDetails\": \" Invalid property key found in request payload.\"\r\n}"
            }
          }
        },
        "security" : [ {
          "Basic" : [ ]
        } ]
      }
    },
    "/configurations/desDestinationConfig" : {
      "get" : {
        "description" : "The method retrieves the details of the Digital Events destination in API Gateway. Digital Event Services (DES) enables API Gateway to communicate by exchanging digital events. Digital events are typed and serialized data structures that are used to convey or record information about the execution of a runtime.",
        "operationId" : "getDigitalEventsAsDestination",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "This status code indicates that the Digital Events destination configurations are retrieved successfully. SendErrorEvent indicates whether API Gateway has to send error events to Digital Events destination. SendLifecycleEvent indicates whether API Gateway has to send lifecycle events to Digital Events destination. SendPolicyViolationEvent indicates whether API Gateway has to send policy violation events to Digital Events destination. SendPerformanceMetrics indicates whether API Gateway has to send performance metrics to Digital Events destination. MetricsPublishInterval indicates the interval at which the performance metrics will be published (value has to be between 1-60), default being 60.",
            "schema" : {
              "$ref" : "#/definitions/Destination"
            },
            "examples" : {
              "application/json" : "{\r\n    \"sendErrorEvent\": \"false\",\r\n    \"sendLifecycleEvent\": \"false\",\r\n    \"sendPolicyViolationEvent\": \"false\",\r\n    \"sendPerformanceMetrics\": \"false\",\r\n    \"metricsPublishInterval\": \"60\"\r\n}"
            }
          },
          "400" : {
            "description" : "This status code indicates that the provided configuration id is invalid.",
            "examples" : {
              "application/json" : "{\r\n    \"errorDetails\": \" Invalid configId value in request. configId: desDestinationConfigg.\"\r\n}"
            }
          },
          "401" : {
            "description" : "This status code indicates that the user is not a valid API Gateway user for retrieving the Digital Events destination configuration."
          }
        },
        "security" : [ {
          "Basic" : [ ]
        } ]
      },
      "put" : {
        "description" : "The method is used to update the details of the Digital Events destination in API Gateway.",
        "operationId" : "saveDigitalEventsAsDestination",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Destination"
          },
          "x-examples" : {
            "application/json" : "{\r\n    \"sendErrorEvent\": \"false\",\r\n    \"sendLifecycleEvent\": \"false\",\r\n    \"sendPolicyViolationEvent\": \"false\",\r\n    \"sendPerformanceMetrics\": \"false\",\r\n    \"metricsPublishInterval\": \"60\"\r\n}"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "This status code indicates that the Digital Events destination configuration has been successfully updated in API Gateway, and the updated configuration is available in the response body.",
            "schema" : {
              "$ref" : "#/definitions/Destination"
            },
            "examples" : {
              "application/json" : "{\r\n    \"sendErrorEvent\": \"false\",\r\n    \"sendLifecycleEvent\": \"false\",\r\n    \"sendPolicyViolationEvent\": \"false\",\r\n    \"sendPerformanceMetrics\": \"false\",\r\n    \"metricsPublishInterval\": \"60\"\r\n}"
            }
          },
          "401" : {
            "description" : "This status code indicates that either user didn't provide right credentials or user doesn't have \"Manage Destination Administration\" functional privilege to access this API."
          },
          "405" : {
            "description" : "This status code indicates that the specified HTTP method is not allowed for the requested destination configuration in API Gateway.",
            "examples" : {
              "application/json" : "{\r\n\t\"errorDetails\": \" Unable to process the PUT request for Digital Events destination configuration. Error occurred while processing the payload. Error Message: Method: PUT is not allowed on resource: desDestinationConfig\"\r\n}"
            }
          },
          "400" : {
            "description" : "This status code indicates that the request body is invalid.",
            "examples" : {
              "application/json" : "{\r\n\"errorDetails\": \" Invalid property key found in request payload.\"\r\n}"
            }
          }
        },
        "security" : [ {
          "Basic" : [ ]
        } ]
      }
    },
    "/configurations/elasticsearchDestinationConfig" : {
      "get" : {
        "description" : "The method retrieves the details of the Elasticsearch destination in API Gateway. API Gateway can publish events and metrics to the configured Elasticsearch destination.",
        "operationId" : "getElasticsearchAsDestination",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "This status code indicates that the Elasticsearch destination configurations are retrieved successfully.",
            "schema" : {
              "$ref" : "#/definitions/ElasticsearchDestination"
            },
            "examples" : {
              "application/json" : "{\r\n    \"protocol\": \"http\",\r\n    \"hostName\": \"localhost\",\r\n    \"port\": \"9240\",\r\n    \"indexName\": \"test\",\r\n    \"userName\": \"\",\r\n    \"password\": \"\",\r\n    \"sendErrorEvent\": \"false\",\r\n    \"sendLifecycleEvent\": \"false\",\r\n    \"sendPolicyViolationEvent\": \"false\",\r\n    \"sendPerformanceMetrics\": \"false\",\r\n    \"metricsPublishInterval\": \"60\"\r\n}"
            }
          },
          "400" : {
            "description" : "This status code indicates that the provided configuration id is invalid.",
            "examples" : {
              "application/json" : "{\r\n    \"errorDetails\": \" Invalid configId value in request. configId: elasticsearchdestinationConfigg.\"\r\n}"
            }
          },
          "401" : {
            "description" : "This status code indicates that the user is not a valid API Gateway user for retrieving the Elasticsearch destination configuration."
          }
        },
        "security" : [ {
          "Basic" : [ ]
        } ]
      },
      "put" : {
        "description" : "The method is used to update the details of the Elasticsearch destination in API Gateway.",
        "operationId" : "saveElasticsearchAsDestination",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ElasticsearchDestination"
          },
          "x-examples" : {
            "application/json" : "{\r\n    \"protocol\": \"http\",\r\n    \"hostName\": \"localhost\",\r\n    \"port\": \"9240\",\r\n    \"indexName\": \"test\",\r\n    \"userName\": \"\",\r\n    \"password\": \"\",\r\n    \"sendErrorEvent\": \"false\",\r\n    \"sendLifecycleEvent\": \"false\",\r\n    \"sendPolicyViolationEvent\": \"false\",\r\n    \"sendPerformanceMetrics\": \"false\",\r\n    \"metricsPublishInterval\": \"60\"\r\n}"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "This status code indicates that the Elasticsearch destination configuration has been successfully updated in API Gateway, and the updated configuration is available in the response body.",
            "schema" : {
              "$ref" : "#/definitions/ElasticsearchDestination"
            },
            "examples" : {
              "application/json" : "{\r\n    \"protocol\": \"http\",\r\n    \"hostName\": \"localhost\",\r\n    \"port\": \"9240\",\r\n    \"indexName\": \"test\",\r\n    \"userName\": \"\",\r\n    \"password\": \"\",\r\n    \"sendErrorEvent\": \"false\",\r\n    \"sendLifecycleEvent\": \"false\",\r\n    \"sendPolicyViolationEvent\": \"false\",\r\n    \"sendPerformanceMetrics\": \"false\",\r\n    \"metricsPublishInterval\": \"60\"\r\n}"
            }
          },
          "401" : {
            "description" : "This status code indicates that either user didn't provide right credentials or user doesn't have \"Manage Destination Administration\" functional privilege to access this API."
          },
          "405" : {
            "description" : "This status code indicates that the specified HTTP method is not allowed for the requested destination configuration in API Gateway.",
            "examples" : {
              "application/json" : "{\r\n\t\"errorDetails\": \" Unable to process the PUT request for Elasticsearch destination configuration. Error occurred while processing the payload. Error Message: Method: PUT is not allowed on resource: elasticsearchDestinationConfigg\"\r\n}"
            }
          },
          "400" : {
            "description" : "This status code indicates that the request body is invalid.",
            "examples" : {
              "application/json" : "{\r\n\"errorDetails\": \" Invalid property key found in request payload.\"\r\n}"
            }
          }
        },
        "security" : [ {
          "Basic" : [ ]
        } ]
      }
    },
    "/configurations/snmpDestinationConfig" : {
      "get" : {
        "description" : "The method retrieves the details of the SNMP destination in API Gateway. API Gateway can publish events and performance metrics data to the configured 3rd party SNMP server.",
        "operationId" : "getSNMPAsDestination",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "This status code indicates that the SNMP destination configurations are retrieved successfully. SendErrorEvent indicates whether API Gateway has to send error events to SNMP destination. SendLifecycleEvent indicates whether API Gateway has to send lifecycle events to SNMP destination. SendPolicyViolationEvent indicates whether API Gateway has to send policy violation events to SNMP destination. SendPerformanceMetrics indicates whether API Gateway has to send performance metrics to SNMP destination. MetricsPublishInterval indicates the interval at which the performance metrics will be published (value has to be between 1-60), default being 60.",
            "schema" : {
              "$ref" : "#/definitions/SNMPDestination"
            },
            "examples" : {
              "application/json" : "{\r\n    \"sendTRAPs\": \"false\",\r\n    \"snmpTargetType\": \"user\",\r\n    \"hostName\": \"localhost\",\r\n    \"port\": \"8081\",\r\n    \"transport\": \"tcp\",\r\n    \"userName\": \"Admin\",\r\n    \"useAuth\": \"false\",\r\n    \"authPassword\": \"\",\r\n    \"authProtocol\": \"MD5\",\r\n    \"usePrivacy\": \"false\",\r\n    \"privacyPassword\": \"\",\r\n    \"privacyProtocol\": \"DES\",\r\n    \"communityName\": \"\",\r\n    \"sendErrorEvent\": \"false\",\r\n    \"sendLifecycleEvent\": \"false\",\r\n    \"sendPolicyViolationEvent\": \"false\"\r\n}"
            }
          },
          "400" : {
            "description" : "This status code indicates that the provided configuration id is invalid.",
            "examples" : {
              "application/json" : "{\r\n    \"errorDetails\": \" Invalid configId value in request. configId: snmpDestinationConfigg.\"\r\n}"
            }
          },
          "401" : {
            "description" : "This status code indicates that the user is not a valid API Gateway user for retrieving the SNMP destination configuration."
          }
        },
        "security" : [ {
          "Basic" : [ ]
        } ]
      },
      "put" : {
        "description" : "The method is used to update the details of the SNMP destination in API Gateway.",
        "operationId" : "saveSNMPAsDestination",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/SNMPDestination"
          },
          "x-examples" : {
            "application/json" : "{\r\n    \"sendTRAPs\": \"false\",\r\n    \"snmpTargetType\": \"user\",\r\n    \"hostName\": \"localhost\",\r\n    \"port\": \"8081\",\r\n    \"transport\": \"tcp\",\r\n    \"userName\": \"Admin\",\r\n    \"useAuth\": \"false\",\r\n    \"authPassword\": \"\",\r\n    \"authProtocol\": \"MD5\",\r\n    \"usePrivacy\": \"false\",\r\n    \"privacyPassword\": \"\",\r\n    \"privacyProtocol\": \"DES\",\r\n    \"communityName\": \"\",\r\n    \"sendErrorEvent\": \"false\",\r\n    \"sendLifecycleEvent\": \"false\",\r\n    \"sendPolicyViolationEvent\": \"false\"\r\n}"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "This status code indicates that the SNMP destination configuration has been successfully updated in API Gateway, and the updated configuration is available in the response body.",
            "schema" : {
              "$ref" : "#/definitions/SNMPDestination"
            },
            "examples" : {
              "application/json" : "{\r\n    \"sendTRAPs\": \"false\",\r\n    \"snmpTargetType\": \"user\",\r\n    \"hostName\": \"localhost\",\r\n    \"port\": \"8081\",\r\n    \"transport\": \"tcp\",\r\n    \"userName\": \"Admin\",\r\n    \"useAuth\": \"false\",\r\n    \"authPassword\": \"\",\r\n    \"authProtocol\": \"MD5\",\r\n    \"usePrivacy\": \"false\",\r\n    \"privacyPassword\": \"\",\r\n    \"privacyProtocol\": \"DES\",\r\n    \"communityName\": \"\",\r\n    \"sendErrorEvent\": \"false\",\r\n    \"sendLifecycleEvent\": \"false\",\r\n    \"sendPolicyViolationEvent\": \"false\"\r\n}"
            }
          },
          "401" : {
            "description" : "This status code indicates that either user didn't provide right credentials or user doesn't have \"Manage Destination Administration\" functional privilege to access this API."
          },
          "405" : {
            "description" : "This status code indicates that the specified HTTP method is not allowed for the requested destination configuration in API Gateway.",
            "examples" : {
              "application/json" : "{\r\n\t\"errorDetails\": \" Unable to process the PUT request for SNMP destination configuration. Error occurred while processing the payload. Error Message: Method: PUT is not allowed on resource: snmpDestinationConfig\"\r\n}"
            }
          },
          "400" : {
            "description" : "This status code indicates that the request body is invalid.",
            "examples" : {
              "application/json" : "{\r\n\"errorDetails\": \" Invalid property key found in request payload.\"\r\n}"
            }
          }
        },
        "security" : [ {
          "Basic" : [ ]
        } ]
      }
    },
    "/configurations/emailDestinationConfig" : {
      "get" : {
        "description" : "The method retrieves the details of the Email destination in API Gateway. API Gateway can send alerts to the email ID specified either in the Log Invocation, Monitor Service Performance, Monitor Service Level Agreement, (or) Throttling Traffic Optimization policies through the configured Email destination.",
        "operationId" : "getEmailAsDestination",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "This status code indicates that the Email destination configurations are retrieved successfully.",
            "schema" : {
              "$ref" : "#/definitions/EmailDestination"
            },
            "examples" : {
              "application/json" : "{\r\n    \"smtpServer\": \"mailhost\",\r\n    \"port\": \"26\",\r\n    \"userName\": \"\",\r\n    \"password\": \"\",\r\n    \"tls\": \"\",\r\n    \"truststoreAlias\": \"\",\r\n    \"internalEmail\": \"\",\r\n    \"serviceEmail\": \"\",\r\n    \"fromEmail\": \"a@example.com\",\r\n    \"defaultEmailCharset\": \"\",\r\n    \"testRecipient\": \"b@example.com\",\r\n    \"logInvocationSubject\": \"Log Invocation mail\",\r\n    \"logInvocationContent\": \"The transaction event\",\r\n    \"monitorSPSubject\": \"Monitor Service Performance mail\",\r\n    \"monitorSPContent\": \"The monitoring event\",\r\n    \"monitorSLASubject\": \"Monitor SLA mail\",\r\n    \"monitorSLAContent\": \"The monitoring event\",\r\n    \"throttlingSubject\": \"Throttling mail\",\r\n    \"throttlingContent\": \"The Throttling event\"\r\n}"
            }
          },
          "400" : {
            "description" : "This status code indicates that the provided configuration id is invalid.",
            "examples" : {
              "application/json" : "{\r\n    \"errorDetails\": \" Invalid configId value in request. configId: emailDestinationConfigg.\"\r\n}"
            }
          },
          "401" : {
            "description" : "This status code indicates that the user is not a valid API Gateway user retrieving the Email destination configuration."
          }
        },
        "security" : [ {
          "Basic" : [ ]
        } ]
      },
      "put" : {
        "description" : "The method is used to update the details of the Email destination in API Gateway.",
        "operationId" : "saveEmailAsDestination",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/EmailDestination"
          },
          "x-examples" : {
            "application/json" : "{\r\n    \"smtpServer\": \"mailhost\",\r\n    \"port\": \"26\",\r\n    \"userName\": \"\",\r\n    \"password\": \"\",\r\n    \"tls\": \"\",\r\n    \"truststoreAlias\": \"\",\r\n    \"internalEmail\": \"\",\r\n    \"serviceEmail\": \"\",\r\n    \"fromEmail\": \"a@example.com\",\r\n    \"defaultEmailCharset\": \"\",\r\n    \"testRecipient\": \"b@example.com\",\r\n    \"logInvocationSubject\": \"Log Invocation mail\",\r\n    \"logInvocationContent\": \"The transaction event\",\r\n    \"monitorSPSubject\": \"Monitor Service Performance mail\",\r\n    \"monitorSPContent\": \"The monitoring event\",\r\n    \"monitorSLASubject\": \"Monitor SLA mail\",\r\n    \"monitorSLAContent\": \"The monitoring event\",\r\n    \"throttlingSubject\": \"Throttling mail\",\r\n    \"throttlingContent\": \"The Throttling event\"\r\n}"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "This status code indicates that the Email destination configuration has been successfully updated in API Gateway, and the updated configuration is available in the response body.",
            "schema" : {
              "$ref" : "#/definitions/EmailDestination"
            },
            "examples" : {
              "application/json" : "{\r\n    \"smtpServer\": \"mailhost\",\r\n    \"port\": \"26\",\r\n    \"userName\": \"\",\r\n    \"password\": \"\",\r\n    \"tls\": \"\",\r\n    \"truststoreAlias\": \"\",\r\n    \"internalEmail\": \"\",\r\n    \"serviceEmail\": \"\",\r\n    \"fromEmail\": \"a@example.com\",\r\n    \"defaultEmailCharset\": \"\",\r\n    \"testRecipient\": \"b@example.com\",\r\n    \"logInvocationSubject\": \"Log Invocation mail\",\r\n    \"logInvocationContent\": \"The transaction event\",\r\n    \"monitorSPSubject\": \"Monitor Service Performance mail\",\r\n    \"monitorSPContent\": \"The monitoring event\",\r\n    \"monitorSLASubject\": \"Monitor SLA mail\",\r\n    \"monitorSLAContent\": \"The monitoring event\",\r\n    \"throttlingSubject\": \"Throttling mail\",\r\n    \"throttlingContent\": \"The Throttling event\"\r\n}"
            }
          },
          "401" : {
            "description" : "This status code indicates that either user didn't provide right credentials or user doesn't have \"Manage Destination Administration\" functional privilege to access this API."
          },
          "405" : {
            "description" : "This status code indicates that the specified HTTP method is not allowed for the requested destination configuration in API Gateway.",
            "examples" : {
              "application/json" : "{\r\n\t\"errorDetails\": \" Unable to process the PUT request for Email destination configuration. Error occurred while processing the payload. Error Message: Method: PUT is not allowed on resource: emailDestinationConfig\"\r\n}"
            }
          },
          "400" : {
            "description" : "This status code indicates that the request body is invalid.",
            "examples" : {
              "application/json" : "{\r\n\"errorDetails\": \" Invalid property key found in request payload.\"\r\n}"
            }
          }
        },
        "security" : [ {
          "Basic" : [ ]
        } ]
      }
    },
    "/configurations/jsonWebToken" : {
      "get" : {
        "description" : "JSON Web Token (JWT) is a JSON-based open standard (RFC 7519) means of representing a set of information to be securely transmitted between two parties. A set of information is the set of claims (claim set) represented by the JWT. A claim set consists of zero or more claims represented by the name-value pairs, where the names are strings and the values are arbitrary JSON values.The method retrieves the details of the API Gateway JWT Configuration.\r\nAPI Gateway can generate a JWT token itself or validate the JWT token generated by a trusted third party server.",
        "operationId" : "getJsonWebTokenConfig",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "This status code indicates that the JWT configuration is retrieved successfully.",
            "schema" : {
              "$ref" : "#/definitions/JsonWebToken"
            },
            "examples" : {
              "application/json" : "{\"issuer\":\"Gateway_issuer\",\"algorithm\":\"RS256\",\"expiry\":\"30\",\"audience\":\"Gateway\",\"keyStore\":\"DEFAULT_IS_KEYSTORE\",\"keyAlias\":\"ssos\"}"
            }
          },
          "400" : {
            "description" : "This status code indicates that the provided configuration id is invalid.",
            "examples" : {
              "application/json" : "{\r\n    \"errorDetails\": \" Invalid configId value in request. configId: jsonWebTokenn.\"\r\n}"
            }
          },
          "401" : {
            "description" : "This status code indicates that the user is not a valid API Gateway user for retrieving the JWT configuration."
          }
        },
        "security" : [ {
          "Basic" : [ ]
        } ]
      },
      "put" : {
        "description" : "The method is used to update the details of the JWT configuration in API Gateway.",
        "operationId" : "saveJwtConfiguration",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/JsonWebToken"
          },
          "x-examples" : {
            "application/json" : "{\"issuer\":\"Gateway_issuer\",\"algorithm\":\"RS256\",\"expiry\":\"30\",\"audience\":\"Gateway\",\"keyStore\":\"DEFAULT_IS_KEYSTORE\",\"keyAlias\":\"ssos\"}"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "This status code indicates that the JWT configuration has been successfully updated in API Gateway, and the updated configuration is available in the response body.",
            "schema" : {
              "$ref" : "#/definitions/JsonWebToken"
            },
            "examples" : {
              "application/json" : "{\"issuer\":\"Gateway_issuer\",\"algorithm\":\"RS256\",\"expiry\":\"30\",\"audience\":\"Gateway\",\"keyStore\":\"DEFAULT_IS_KEYSTORE\",\"keyAlias\":\"ssos\"}"
            }
          },
          "401" : {
            "description" : "This status code indicates that either user didn't provide right credentials or user doesn't have \"Administration\" functional privilege to access this API."
          },
          "400" : {
            "description" : "This status code indicates that the request body is invalid.",
            "examples" : {
              "application/json" : "{\r\n\"errorDetails\": \" Invalid property key found in request payload.\"\r\n}"
            }
          }
        },
        "security" : [ {
          "Basic" : [ ]
        } ]
      }
    },
    "/approvalConfigurations" : {
      "get" : {
        "description" : "The method retrieves a list of available approval configurations in API Gateway.",
        "operationId" : "getApprovalConfigurations",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "This status code indicates that a list of the available approval configurations is retrieved successfully.",
            "schema" : {
              "$ref" : "#/definitions/ApprovalConfiguration"
            },
            "examples" : {
              "application/json" : "{\r\n    \"approvalConfigurations\": [\r\n        {\r\n            \"id\": \"createApplication\",\r\n            \"eventType\": \"createApplication\",\r\n            \"isEnabled\": true,\r\n            \"approversGroupId\": \"0936de2c-9fb9-4625-b5b0-b7648e0d4103\",\r\n            \"approvalMode\": \"anyone\",\r\n            \"approvedEmailConfiguration\": {\r\n                \"emailSubject\": \"Approval of @event.type\",\r\n                \"emailContent\": \"Congratulations @requestor.name !\\n\\nYour request for @event.type has been approved.\",\r\n                \"enabled\": false,\r\n                \"requestType\": \"approved\"\r\n            },\r\n            \"rejectedEmailConfiguration\": {\r\n                \"emailSubject\": \"Rejection of @event.type\",\r\n                \"emailContent\": \"Hello @requestor.name,\\n\\nYour @event.type  request has been rejected.\\nReasons:@rejectionReason.\\n\\nBest Regards,\\nAPI Gateway Team\\n\\n*** This notification was sent automatically. Do not reply to this email.***\",\r\n                \"enabled\": false,\r\n                \"requestType\": \"rejected\"\r\n            },\r\n            \"initiateApprovalRequestEmailConfiguration\": {\r\n                \"emailSubject\": \"Approval request pending\",\r\n                \"emailContent\": \"Hello @approver.name,\\n\\n A request by @requestor.name to @event.type needs your review and approval.\\n\\nBest Regards,\\nAPI Gateway Team\\n\\n*** This notification was sent automatically. Do not reply to this email.***\",\r\n                \"enabled\": false,\r\n                \"requestType\": \"initiate\"\r\n            }\r\n        }\r\n    ]\r\n}"
            }
          },
          "401" : {
            "description" : "This status code indicates that either user didn't provide right credentials or user doesn't have required privileges to access this API."
          }
        },
        "security" : [ {
          "Basic" : [ ]
        } ]
      },
      "post" : {
        "description" : "The method creates an approval configuration in API Gateway.",
        "operationId" : "createApprovalConfiguration",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "This parameter describes the request payload of an approval configuration that is to be created in API Gateway.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ApprovalConfiguration"
          },
          "x-examples" : {
            "application/json" : "{\r\n    \"approvalConfig\": {\r\n        \"id\": \"createApplication\",\r\n        \"eventType\": \"createApplication\",\r\n        \"isEnabled\": true,\r\n        \"approversGroupId\": \"0936de2c-9fb9-4625-b5b0-b7648e0d4103\",\r\n        \"approvalMode\": \"anyone\",\r\n        \"approvedEmailConfiguration\": {\r\n            \"emailSubject\": \"Approval of @event.type\",\r\n            \"emailContent\": \"Congratulations @requestor.name !\\n\\nYour request for @event.type has been approved.\",\r\n            \"enabled\": false,\r\n            \"requestType\": \"approved\"\r\n        },\r\n        \"rejectedEmailConfiguration\": {\r\n            \"emailSubject\": \"Rejection of @event.type\",\r\n            \"emailContent\": \"Hello @requestor.name,\\n\\nYour @event.type  request has been rejected.\\nReasons:@rejectionReason.\\n\\nBest Regards,\\nAPI Gateway Team\\n\\n*** This notification was sent automatically. Do not reply to this email.***\",\r\n            \"enabled\": false,\r\n            \"requestType\": \"rejected\"\r\n        },\r\n        \"initiateApprovalRequestEmailConfiguration\": {\r\n            \"emailSubject\": \"Approval request pending\",\r\n            \"emailContent\": \"Hello @approver.name,\\n\\n A request by @requestor.name to @event.type needs your review and approval.\\n\\nBest Regards,\\nAPI Gateway Team\\n\\n*** This notification was sent automatically. Do not reply to this email.***\",\r\n            \"enabled\": false,\r\n            \"requestType\": \"initiate\"\r\n        }\r\n    }\r\n}"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "This status code indicates that the approval configuration has been successfully created in API Gateway.",
            "schema" : {
              "$ref" : "#/definitions/ApprovalConfiguration"
            },
            "examples" : {
              "application/json" : "{\r\n    \"approvalConfig\": {\r\n        \"id\": \"createApplication\",\r\n        \"eventType\": \"createApplication\",\r\n        \"isEnabled\": true,\r\n        \"approversGroupId\": \"0936de2c-9fb9-4625-b5b0-b7648e0d4103\",\r\n        \"approvalMode\": \"anyone\",\r\n        \"approvedEmailConfiguration\": {\r\n            \"emailSubject\": \"Approval of @event.type\",\r\n            \"emailContent\": \"Congratulations @requestor.name !\\n\\nYour request for @event.type has been approved.\",\r\n            \"enabled\": false,\r\n            \"requestType\": \"approved\"\r\n        },\r\n        \"rejectedEmailConfiguration\": {\r\n            \"emailSubject\": \"Rejection of @event.type\",\r\n            \"emailContent\": \"Hello @requestor.name,\\n\\nYour @event.type  request has been rejected.\\nReasons:@rejectionReason.\\n\\nBest Regards,\\nAPI Gateway Team\\n\\n*** This notification was sent automatically. Do not reply to this email.***\",\r\n            \"enabled\": false,\r\n            \"requestType\": \"rejected\"\r\n        },\r\n        \"initiateApprovalRequestEmailConfiguration\": {\r\n            \"emailSubject\": \"Approval request pending\",\r\n            \"emailContent\": \"Hello @approver.name,\\n\\n A request by @requestor.name to @event.type needs your review and approval.\\n\\nBest Regards,\\nAPI Gateway Team\\n\\n*** This notification was sent automatically. Do not reply to this email.***\",\r\n            \"enabled\": false,\r\n            \"requestType\": \"initiate\"\r\n        }\r\n    }\r\n}"
            }
          },
          "400" : {
            "description" : "This status code indicates that the given approval configuration request body is not correct."
          },
          "401" : {
            "description" : "This status code indicates that either user didn't provide right credentials or user doesn't have required privileges to access this API."
          }
        },
        "security" : [ {
          "Basic" : [ ]
        } ]
      }
    },
    "/approvalConfigurations/{id}" : {
      "get" : {
        "description" : "The method retrieves the details of a specified approval configuration in API Gateway",
        "operationId" : "getApprovalConfiguration",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "This parameter specifies the ID of an approval configuration whose details are to be retrieved in API Gateway.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "This status code indicates that the details of the specified approval configuration are retrieved successfully.",
            "schema" : {
              "$ref" : "#/definitions/ApprovalConfiguration"
            },
            "examples" : {
              "application/json" : "{\r\n    \"approvalConfig\": {\r\n        \"id\": \"createApplication\",\r\n        \"eventType\": \"createApplication\",\r\n        \"isEnabled\": true,\r\n        \"approversGroupId\": \"0936de2c-9fb9-4625-b5b0-b7648e0d4103\",\r\n        \"approvalMode\": \"anyone\",\r\n        \"approvedEmailConfiguration\": {\r\n            \"emailSubject\": \"Approval of @event.type\",\r\n            \"emailContent\": \"Congratulations @requestor.name !\\n\\nYour request for @event.type has been approved.\",\r\n            \"enabled\": false,\r\n            \"requestType\": \"approved\"\r\n        },\r\n        \"rejectedEmailConfiguration\": {\r\n            \"emailSubject\": \"Rejection of @event.type\",\r\n            \"emailContent\": \"Hello @requestor.name,\\n\\nYour @event.type  request has been rejected.\\nReasons:@rejectionReason.\\n\\nBest Regards,\\nAPI Gateway Team\\n\\n*** This notification was sent automatically. Do not reply to this email.***\",\r\n            \"enabled\": false,\r\n            \"requestType\": \"rejected\"\r\n        },\r\n        \"initiateApprovalRequestEmailConfiguration\": {\r\n            \"emailSubject\": \"Approval request pending\",\r\n            \"emailContent\": \"Hello @approver.name,\\n\\n A request by @requestor.name to @event.type needs your review and approval.\\n\\nBest Regards,\\nAPI Gateway Team\\n\\n*** This notification was sent automatically. Do not reply to this email.***\",\r\n            \"enabled\": false,\r\n            \"requestType\": \"initiate\"\r\n        }\r\n    }\r\n}"
            }
          },
          "404" : {
            "description" : "This status code indicates that an approval configuration with the given ID could not be found in API Gateway."
          },
          "401" : {
            "description" : "This status code indicates that either user didn't provide right credentials or user doesn't have required privileges to access this API."
          }
        },
        "security" : [ {
          "Basic" : [ ]
        } ]
      },
      "put" : {
        "description" : "The method updates the approval configuration in API Gateway.",
        "operationId" : "updateApprovalConfiguration",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "This parameter describes the request payload of an approval configuration that is to be updated in API Gateway.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ApprovalConfiguration"
          },
          "x-examples" : {
            "application/json" : "{\r\n    \"approvalConfig\": {\r\n        \"id\": \"createApplication\",\r\n        \"eventType\": \"createApplication\",\r\n        \"isEnabled\": true,\r\n        \"approversGroupId\": \"0936de2c-9fb9-4625-b5b0-b7648e0d4103\",\r\n        \"approvalMode\": \"anyone\",\r\n        \"approvedEmailConfiguration\": {\r\n            \"emailSubject\": \"Approval of @event.type\",\r\n            \"emailContent\": \"Congratulations @requestor.name !\\n\\nYour request for @event.type has been approved.\",\r\n            \"enabled\": false,\r\n            \"requestType\": \"approved\"\r\n        },\r\n        \"rejectedEmailConfiguration\": {\r\n            \"emailSubject\": \"Rejection of @event.type\",\r\n            \"emailContent\": \"Hello @requestor.name,\\n\\nYour @event.type  request has been rejected.\\nReasons:@rejectionReason.\\n\\nBest Regards,\\nAPI Gateway Team\\n\\n*** This notification was sent automatically. Do not reply to this email.***\",\r\n            \"enabled\": false,\r\n            \"requestType\": \"rejected\"\r\n        },\r\n        \"initiateApprovalRequestEmailConfiguration\": {\r\n            \"emailSubject\": \"Approval request pending\",\r\n            \"emailContent\": \"Hello @approver.name,\\n\\n A request by @requestor.name to @event.type needs your review and approval.\\n\\nBest Regards,\\nAPI Gateway Team\\n\\n*** This notification was sent automatically. Do not reply to this email.***\",\r\n            \"enabled\": false,\r\n            \"requestType\": \"initiate\"\r\n        }\r\n    }\r\n}"
          }
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "This parameter specifies the ID of an approval configuration that is to be updated in API Gateway.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "This status code indicates that the approval configuration has been successfully updated in API Gateway.",
            "schema" : {
              "$ref" : "#/definitions/ApprovalConfiguration"
            },
            "examples" : {
              "application/json" : "{\r\n    \"approvalConfig\": {\r\n        \"id\": \"createApplication\",\r\n        \"eventType\": \"createApplication\",\r\n        \"isEnabled\": true,\r\n        \"approversGroupId\": \"0936de2c-9fb9-4625-b5b0-b7648e0d4103\",\r\n        \"approvalMode\": \"anyone\",\r\n        \"approvedEmailConfiguration\": {\r\n            \"emailSubject\": \"Approval of @event.type\",\r\n            \"emailContent\": \"Congratulations @requestor.name !\\n\\nYour request for @event.type has been approved.\",\r\n            \"enabled\": false,\r\n            \"requestType\": \"approved\"\r\n        },\r\n        \"rejectedEmailConfiguration\": {\r\n            \"emailSubject\": \"Rejection of @event.type\",\r\n            \"emailContent\": \"Hello @requestor.name,\\n\\nYour @event.type  request has been rejected.\\nReasons:@rejectionReason.\\n\\nBest Regards,\\nAPI Gateway Team\\n\\n*** This notification was sent automatically. Do not reply to this email.***\",\r\n            \"enabled\": false,\r\n            \"requestType\": \"rejected\"\r\n        },\r\n        \"initiateApprovalRequestEmailConfiguration\": {\r\n            \"emailSubject\": \"Approval request pending\",\r\n            \"emailContent\": \"Hello @approver.name,\\n\\n A request by @requestor.name to @event.type needs your review and approval.\\n\\nBest Regards,\\nAPI Gateway Team\\n\\n*** This notification was sent automatically. Do not reply to this email.***\",\r\n            \"enabled\": false,\r\n            \"requestType\": \"initiate\"\r\n        }\r\n    }\r\n}"
            }
          },
          "400" : {
            "description" : "This status code indicates that the given approval configuration request body is not correct."
          },
          "401" : {
            "description" : "This status code indicates that either user didn't provide right credentials or user doesn't have required privileges to access this API."
          }
        },
        "security" : [ {
          "Basic" : [ ]
        } ]
      },
      "delete" : {
        "description" : "The method deletes the specified approval configuration in API Gateway.",
        "operationId" : "deleteApprovalConfiguration",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "This parameter specifies the ID of an approval configuration that is to be deleted in API Gateway.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "401" : {
            "description" : "This status code indicates that either user didn't provide right credentials or user doesn't have required privileges to access this API."
          },
          "204" : {
            "description" : "This status code indicates that the specified approval configuration has been successfully deleted from API Gateway."
          },
          "404" : {
            "description" : "This status code indicates that an approval configuration with the given ID could not be found in API Gateway."
          }
        },
        "security" : [ {
          "Basic" : [ ]
        } ]
      }
    }
  },
  "securityDefinitions" : {
    "Basic" : {
      "description" : "API Gateway Administrator and API Gateway provider",
      "type" : "basic"
    }
  },
  "definitions" : {
    "NotificationCriteria" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string"
        },
        "user" : {
          "type" : "string"
        },
        "notifyAt" : {
          "type" : "integer",
          "format" : "int32"
        },
        "email" : {
          "type" : "string"
        },
        "notificationType" : {
          "type" : "string"
        },
        "creationDate" : {
          "type" : "string"
        },
        "defaultNotificationCriteria" : {
          "type" : "boolean"
        }
      }
    },
    "LoadBalancer" : {
      "type" : "object",
      "properties" : {
        "httpUrls" : {
          "type" : "array",
          "description" : "HTTP URLs to be exposed for API invocation.",
          "items" : {
            "type" : "string"
          }
        },
        "httpsUrls" : {
          "type" : "array",
          "description" : "HTTPS URLs to be exposed for API invocation.",
          "items" : {
            "type" : "string"
          }
        },
        "websocketUrls" : {
          "type" : "array",
          "description" : "WebSocket URL to be exposed for Websocket APIs invocation.",
          "items" : {
            "type" : "string"
          }
        },
        "webAppUrl" : {
          "type" : "string",
          "description" : "API Gateway UI access url"
        }
      },
      "description" : "This defines the Load Balancer URLs configuration in the API Gateway."
    },
    "ExtendedSettings" : {
      "type" : "object",
      "properties" : {
        "apiKeyHeader" : {
          "type" : "string",
          "description" : "The key of the HTTP header from which API Gateway retrieves the API key. The default value is x-Gateway-APIKey"
        },
        "pg_xslt_enableDOM" : {
          "type" : "string",
          "description" : "If this value is set to true, API Gateway would use DOM parsing in XSLT Transformation."
        },
        "transformerPoolSize" : {
          "type" : "string",
          "description" : "Specifies the Transformer pool size used in XSLT transformation."
        },
        "pg_oauth2_isHTTPS" : {
          "type" : "string",
          "description" : "If this value is set to true, API Gateway obtains OAuth 2.0 tokens only over a two-way SSL connection."
        },
        "apig_MENConfiguration_tickInterval" : {
          "type" : "string",
          "description" : "This value determines how often the senior API Gateway node in the cluster (or the single node in a non cluster environment) scans the list of monitoring and metrics policies in the shared cache. The monitoring and metrics policies cannot be processed until the time interval for each has been met. For example, if the policy interval for a metrics reporting policy is configured to run every 10 minutes, then the senior node processes that policy at every 40 tick intervals, provided that the configured tick interval is 15 secs. This is because there are 40 tick intervals for 10 minutes (40 * 15 seconds = 10 minutes). So it takes 40 tick intervals before the 10-minute policy interval for that metrics policy is reached. At that time, the senior node can send a processing event to the nodes in the cluster, and the responding node reports the metrics to applicable destinations. Default value is 15."
        },
        "maxWindowSize" : {
          "type" : "string",
          "description" : "A value to set the result window size that specifies the number of records per query. Default value is 10000."
        },
        "allowExceedMaxWindowSize" : {
          "type" : "string",
          "description" : "While performing search using search API, 'maxWindowSize' controls the number of documents that will be returned for a single query. You can use 'allowExceedMaxWindowSize' to modify this behaviour. If this property is set to true, API Gateway could retrieve number of documents greater than 'maxWindowSize' in a single query."
        },
        "esScrollTimeout" : {
          "type" : "string",
          "description" : "Specifies the time out interval for fetching the result that is greater than maxWindowSize. Default value is the time, in milliseconds, required to fetch the records specified in maxWindowSize."
        },
        "portClusteringEnabled" : {
          "type" : "string",
          "description" : "The value to enable port configuration synchronization across API Gateway cluster nodes. The default value is false."
        },
        "apig_schemaValidationPoolSize" : {
          "type" : "string",
          "description" : "Specifies the SAXParser pool size in Schema validation policy. The default value is 10."
        },
        "apiMaturityStatePossibleValues" : {
          "type" : "string",
          "description" : "The API maturity state values that can be set for an API. The default values provided are Beta, Deprecated, Experimental, Production and Test."
        },
        "apiKeyExpirationPeriod" : {
          "type" : "string",
          "description" : "Specifies the length of time that the API key is valid. The key expires after the set number of minutes, hours, days, months, or years. If a value is not specified, then the API key never expires. The expiration date is computed as follows: 1. When a new application is created, expiration date := creation time +  apiKeyExpirationPeriod 2. When an API key is regenerated, expiration date := current time +  apiKeyExpirationPeriod. The format for this value is a simple non case sensitive duration string. e.g. 2 years 3 MONTHS 5 days 6 hOUrs 34 minutes 25 SECONDS"
        },
        "apiGroupingPossibleValues" : {
          "type" : "string",
          "description" : "The groups that the APIs would be grouped under. The default groups provided are Finance Banking and Insurance, Sales and Ordering,Search, Transportation and Warehousing"
        },
        "backupSharedFileLocation" : {
          "type" : "string",
          "description" : "Specifies the shared file location where the API analytics data has to be archived. If no path is provided the data is archived in the temp folder of the system."
        },
        "maxBackupsLimit" : {
          "type" : "string",
          "description" : "Specifies the maximum number of backups that are archived. The default value is 10. If you do not provide any value the infinite number of archives can be stored."
        },
        "defaultEncoding" : {
          "type" : "string",
          "description" : " Specifies the name of Charset used in API Gateway. The default value is UTF-8."
        },
        "apig_rest_service_redirect" : {
          "type" : "string",
          "description" : "If this value is set to true, the API Gateway activates the exposure of REST APIs over /ws and /mediator directives in addition to the /gateway directive. The default value is false."
        },
        "pg_JWT_isHTTPS" : {
          "type" : "string",
          "description" : "If this value is set to true, API Gateway obtains JSON Web Tokens (JWTs) only over a two-way SSL connection."
        },
        "pg_OpenID_isHTTPS" : {
          "type" : "string",
          "description" : "If this value is set to true, API Gateway obtains OpenID tokens only over a two-way SSL connection."
        },
        "pg.cs.snmpTarget.connTimeout" : {
          "type" : "string",
          "description" : "The number of milliseconds before an inactive connection to the SNMP target server is closed. If set to 0, the socket remains open indefinitely."
        },
        "pg.cs.snmpTarget.retries" : {
          "type" : "string",
          "description" : "Specifies the number of times to resend SNMP traps upon failure. The default value is 1."
        },
        "pg.cs.snmpTarget.maxRequestSize" : {
          "type" : "string",
          "description" : "Specifies the maximum size (in bytes) for SNMP traps. The default value is 10485760."
        },
        "pg.cs.snmpTarget.sendTimeOut" : {
          "type" : "string",
          "description" : "Specifies the time (in milliseconds) to wait before the SNMP trap times out because the server destination is not responding. The default value is 500."
        },
        "pg.cs.snmpTarget.base64Encoded" : {
          "type" : "string",
          "description" : "This is an internal parameter. Do not modify"
        },
        "pg.uddiClient.uddiClientTimeout" : {
          "type" : "string",
          "description" : "Specifies the number of milliseconds that can elapse before not publishing performance metrics to an unavailable API Gateway server.The default value is 5000."
        },
        "pg.uddiClient.publish.maxThreads" : {
          "type" : "string",
          "description" : "Specifies the maximum uddiClient publish threads.The default value is 2."
        },
        "pg.snmp.customTarget.connTimeout" : {
          "type" : "string",
          "description" : "Specifies the number of milliseconds before an inactive connection to the third-party SNMP server is closed. If set to 0, the socket remains open indefinitely."
        },
        "pg.3pSnmpSender.sendDelay" : {
          "type" : "string",
          "description" : "This is an internal parameter. Do not modify."
        },
        "pg.snmp.userTarget.retries" : {
          "type" : "string",
          "description" : "Specifies the number of times to resend SNMP traps upon failure.The default value is 1."
        },
        "pg.snmp.userTarget.sendTimeOut" : {
          "type" : "string",
          "description" : "Specifies the time (in milliseconds) to wait before the SNMP trap times out because the server destination is not responding.The default value is 500."
        },
        "pg.snmp.userTarget.maxRequestSize" : {
          "type" : "string",
          "description" : "Specifies the maximum size (in bytes) for SNMP traps.The default value is 65535."
        },
        "pg.snmp.communityTarget.base64Encoded" : {
          "type" : "string",
          "description" : "Specifies whether the SNMP community target's community name is base64 encoded."
        },
        "pg.snmp.communityTarget.retries" : {
          "type" : "string",
          "description" : "Specifies the number of times to resend SNMP traps upon failure.The default value is 1."
        },
        "pg.snmp.communityTarget.sendTimeOut" : {
          "type" : "string",
          "description" : "Specifies the time (in milliseconds) to wait before the SNMP trap times out because the server destination is not responding. The default value is 500."
        },
        "pg.snmp.communityTarget.maxRequestSize" : {
          "type" : "string",
          "description" : "Specifies the maximum size (in bytes) for SNMP traps.The default value is 65535."
        },
        "pg_Active_OpenID_Provider" : {
          "type" : "string",
          "description" : "Specifies the unique identifier (ID) of an active OpenID Provider of all the OpenID provider values that are stored as aliases."
        },
        "pg.lb.failoverOnDowntimeErrorOnly" : {
          "type" : "string",
          "description" : "Specifies API Gateway's behavior for load-balanced endpoints. The default is false, which means that in a load-balanced routing scenario, if a service fault is encountered in the response coming from an endpoint A, then API Gateway tries the next configured endpoint. There is no distinction on the type of fault present in the response from endpoint A. However, if this parameter is set to true, then API Gateway failovers only if the service fault is a downtime error."
        }
      },
      "description" : "This defines the various extended settings that can be configured in API Gateway."
    },
    "ErrorProcessing" : {
      "type" : "object",
      "properties" : {
        "fallbackErrorMessage" : {
          "type" : "string"
        },
        "defaultErrorMessage" : {
          "type" : "string"
        },
        "sendNativeProviderFault" : {
          "type" : "string"
        }
      },
      "description" : "Defines the error message configuration. The configured error message will be sent to the invoking client in case API Gateway encounters an exception."
    },
    "Destination" : {
      "type" : "object",
      "properties" : {
        "sendErrorEvent" : {
          "type" : "string",
          "description" : "Flag to enable publish of the error events. Occurs each time an API invocation results in an error."
        },
        "sendLifecycleEvent" : {
          "type" : "string",
          "description" : "Flag to enable publish of the life cycle events. Occurs each time API Gateway is started or shut down."
        },
        "sendPolicyViolationEvent" : {
          "type" : "string",
          "description" : "Flag to enable publish of the policy violations events. Occurs each time an API invocation violates the policy enforcement that was set for the API."
        },
        "sendPerformanceMetrics" : {
          "type" : "string",
          "description" : "Flag to enable publish of the performance metrics. The performance data provides information on average response time, total request count, fault count, and so on."
        },
        "metricsPublishInterval" : {
          "type" : "string",
          "description" : "The interval at which the metrics will be published to the destination. Enter a value from 1 through 60. The default is 60 minutes."
        }
      },
      "description" : "This defines the configurations required for the destination."
    },
    "AuditLogDestination" : {
      "type" : "object",
      "properties" : {
        "name" : {
          "type" : "string",
          "description" : "The default name of the audit log, API Gateway Transaction Logger."
        },
        "enable" : {
          "type" : "string",
          "description" : "Enable activation to enable the logger to start writing the log entries to the database or the file."
        },
        "mode" : {
          "type" : "string",
          "description" : "Specifies whether the logger is to write entries to the destination synchronously or asynchronously."
        },
        "guaranteed" : {
          "type" : "string",
          "description" : "Provides data about guaranteed delivery transactions."
        },
        "destination" : {
          "type" : "string",
          "description" : "Specifies whether the logger is to write entries to a file or database."
        },
        "maximumQueueSize" : {
          "type" : "string",
          "description" : "Specifies the maximum number of entries the queue can hold."
        },
        "maximumRetries" : {
          "type" : "string",
          "description" : "Specifies the maximum times the logger must retry writing the entry to the destination if the first attempt fails because of a transient error."
        },
        "waitBetweenRetries" : {
          "type" : "string",
          "description" : "Specifies the waiting time before the logger can reconnect and rewrite the eateries to the destination in case of failure."
        }
      },
      "description" : "This defines the configurations required for Audit Log destination."
    },
    "CSCommunicationDestination" : {
      "type" : "object",
      "properties" : {
        "protocol" : {
          "type" : "string",
          "description" : "Specifies the communication protocol used to establish communication between API Gateway and CentraSite."
        },
        "hostname" : {
          "type" : "string",
          "description" : "Specifies the host name or IP address of the machine on which CentraSite Application Server Tier (CAST) is running."
        },
        "uddiPort" : {
          "type" : "string",
          "description" : "Specifies the port on which CAST is listening. The default port number for CAST is 53307."
        },
        "username" : {
          "type" : "string",
          "description" : "Specifies the CentraSite user ID for authenticating CentraSite when API Gateway communicates with CentraSite. This implies the user ID of a user who has the CentraSite Administrator role or the API Gateway Administrator role in CentraSite."
        },
        "password" : {
          "type" : "string",
          "description" : "Specifies the password for authenticating CentraSite when API Gateway communicates with CentraSite."
        },
        "gatewayAssetId" : {
          "type" : "string",
          "description" : "Specifies the registered API Gateway ID."
        },
        "targetname" : {
          "type" : "string",
          "description" : "Specifies the name of the API Gateway asset as defined in CentraSite."
        }
      },
      "description" : "This defines the configurations required for Centrasite Communication section of CentraSite destination."
    },
    "CSSNMPDestination" : {
      "type" : "object",
      "properties" : {
        "sendTRAPsToCentrasite" : {
          "type" : "string",
          "description" : "Specifies whether the events has to be sent from API Gateway to CentraSite."
        },
        "transport" : {
          "type" : "string",
          "description" : "Specifies the wire transport protocol that is used by the SNMP Listener."
        },
        "hostname" : {
          "type" : "string",
          "description" : "Specifies the CentraSite host name or IP address to which the SNMP listener binds."
        },
        "port" : {
          "type" : "string",
          "description" : "Specifies the port to which the SNMP listener binds. The default port number for CentraSite's SNMP server is 8181."
        },
        "username" : {
          "type" : "string",
          "description" : "Specifies the SecurityName that is used by the SNMP Listener."
        },
        "authorizationProtocol" : {
          "type" : "string",
          "description" : "Specifies the authorization protocol that is used by the SNMP Listener for decoding the incoming trap."
        },
        "authorizationPassword" : {
          "type" : "string",
          "description" : "Specifies the password to be used for authorization protocol."
        },
        "privacyProtocol" : {
          "type" : "string",
          "description" : "Specifies the privacy protocol that is used by the SNMP Listener for decoding the incoming trap."
        },
        "privacyPassword" : {
          "type" : "string",
          "description" : "Specifies the password to be used for privacy protocol."
        }
      },
      "description" : "This defines the configurations required for CentraSite SNMP section of CentraSite destination."
    },
    "ElasticsearchDestination" : {
      "type" : "object",
      "properties" : {
        "protocol" : {
          "type" : "string",
          "description" : "Specifies the communication protocol used to establish communication between API Gateway and CentraSite."
        },
        "hostname" : {
          "type" : "string",
          "description" : "Specifies the host name or IP address of the machine on which Elasticsearch Server is running."
        },
        "port" : {
          "type" : "string",
          "description" : "Specifies the port on which the Elasticsearch server runs."
        },
        "indexName" : {
          "type" : "string",
          "description" : "Specifies the index name for the Elasticsearch server on which the events will be available."
        },
        "username" : {
          "type" : "string",
          "description" : "The username for the Elasticsearch server instance."
        },
        "password" : {
          "type" : "string",
          "description" : "The password for the Elasticsearch server instance."
        },
        "sendErrorEvent" : {
          "type" : "string",
          "description" : "Flag to enable publish of the error events. Occurs each time an API invocation results in an error."
        },
        "sendLifecycleEvent" : {
          "type" : "string",
          "description" : "Flag to enable publish of the life cycle events. Occurs each time API Gateway is started or shut down."
        },
        "sendPolicyViolationEvent" : {
          "type" : "string",
          "description" : "Flag to enable publish of the policy violations events. Occurs each time an API invocation violates the policy enforcement that was set for the API."
        },
        "sendPerformanceMetrics" : {
          "type" : "string",
          "description" : "Flag to enable publish of the performance metrics. The performance data provides information on average response time, total request count, fault count, and so on."
        },
        "metricsPublishInterval" : {
          "type" : "string",
          "description" : "The interval at which the metrics will be published to the destination. Enter a value from 1 through 60. The default is 60 minutes."
        }
      },
      "description" : "This defines the configurations required for Elasticsearch destinations."
    },
    "SNMPDestination" : {
      "type" : "object",
      "properties" : {
        "snmpTargetType" : {
          "type" : "string",
          "description" : "Specifies target type of the SNMP server."
        },
        "hostname" : {
          "type" : "string",
          "description" : "Flag to enable save of the life cycle events."
        },
        "port" : {
          "type" : "string",
          "description" : "The SNMP trap receiver port that is listening for SNMP requests and packets."
        },
        "transport" : {
          "type" : "string",
          "description" : "The protocol used by SNMP to send traps. The available options are: TCP and UDP. By default, TCP is selected."
        },
        "username" : {
          "type" : "string",
          "description" : "If User is selected as the SNMP target type, then the Username field specifies the SNMPv3 user name to use when connecting to the receiver."
        },
        "useAuthorization" : {
          "type" : "string",
          "description" : "Specifies whether an authorization key is required. "
        },
        "usePrivacy" : {
          "type" : "string",
          "description" : "Specifies whether a privacy (encryption) key is required."
        },
        "sendErrorEvent" : {
          "type" : "string",
          "description" : "Flag to enable publish of the error events. Occurs each time an API invocation results in an error."
        },
        "sendLifecycleEvent" : {
          "type" : "string",
          "description" : "Flag to enable publish of the life cycle events. Occurs each time API Gateway is started or shut down."
        },
        "sendPolicyViolationEvent" : {
          "type" : "string",
          "description" : "Flag to enable publish of the policy violations events. Occurs each time an API invocation violates the policy enforcement that was set for the API."
        }
      },
      "description" : "This defines the configurations required for the SNMP destination."
    },
    "EmailDestination" : {
      "type" : "object",
      "properties" : {
        "smtpServer" : {
          "type" : "string",
          "description" : "The server name or the IP address of the SMTP server that API Gateway uses to send the messages."
        },
        "port" : {
          "type" : "string",
          "description" : "The port that API Gateway uses to connect to the specified SMTP server."
        },
        "username" : {
          "type" : "string",
          "description" : "The username that API Gateway uses to connect to the specified SMTP server."
        },
        "password" : {
          "type" : "string",
          "description" : "The password that API Gateway uses to connect to the specified SMTP server."
        },
        "transportLayerSecurity" : {
          "type" : "string",
          "description" : "The SSL encryption type that API Gateway uses when communicating with an email server. "
        },
        "trustStoreAlias" : {
          "type" : "string",
          "description" : "The truststore that API Gateway uses while sending the request to a native API."
        },
        "defaultEmailCharset" : {
          "type" : "string",
          "description" : "The character set that API Gateway uses to be recognized by the system. "
        },
        "fromEmail" : {
          "type" : "string",
          "description" : "The email address from which you want to send the alerts."
        },
        "testRecipient" : {
          "type" : "string",
          "description" : "The email address to which you want to send the test email."
        },
        "logInvocationSubject" : {
          "type" : "string",
          "description" : "The subject line of the email to be sent for the Log Invocation policy action."
        },
        "logInvocationContent" : {
          "type" : "string",
          "description" : "The content of the email to be sent for the Log Invocation policy action."
        },
        "monitorSPSubject" : {
          "type" : "string",
          "description" : "The subject line of the email to be sent for the Monitor SP policy action."
        },
        "monitorSPContent" : {
          "type" : "string",
          "description" : "The content of the email to be sent for the Monitor SP policy action."
        },
        "monitorSLASubject" : {
          "type" : "string",
          "description" : "The subject line of the email to be sent for the Monitor SLA policy action."
        },
        "monitorSLAContent" : {
          "type" : "string",
          "description" : "The content of the email to be sent for the Monitor SLA policy action."
        },
        "throttlingSubject" : {
          "type" : "string",
          "description" : "The subject line of the email to be sent for the Throttling Traffic Optimization policy action."
        },
        "throttlingContent" : {
          "type" : "string",
          "description" : "The content of the email to be sent for the Throttling Traffic Optimization policy action."
        }
      },
      "description" : "This defines the configurations required for Email destination."
    },
    "JsonWebToken" : {
      "type" : "object",
      "required" : [ "algorithm", "expiry", "issuerName", "keyStore" ],
      "properties" : {
        "issuerName" : {
          "type" : "string",
          "description" : "The key alias is the private key that is used sign the request sent to the native API"
        },
        "algorithm" : {
          "type" : "string",
          "description" : "Algorithm required for hashing",
          "enum" : [ "RS256", "RS384", "RS512" ]
        },
        "expiry" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Time in minutes before the issued token gets expired"
        },
        "audience" : {
          "type" : "string",
          "description" : "The recipients that the JWT is intended for"
        },
        "keyStore" : {
          "type" : "string",
          "description" : "Specify the keystore that needs to be used by API Gateway while sending the request to the native API. A keystore is a repository of private key and its corresponding public certificate"
        }
      }
    },
    "ApprovalConfiguration" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string",
          "description" : "Unique identifier of a Approval Configuration. Any of 'createApplication', 'updateApplication', 'registerApplication' and 'subscribePackage'"
        },
        "eventType" : {
          "type" : "string",
          "description" : "Event Type: Any of 'createApplication', 'updateApplication', 'registerApplication' and 'subscribePackage' "
        },
        "isEnabled" : {
          "type" : "boolean",
          "description" : "true/false. true value enforces approvals for the mentioned eventtypes"
        },
        "approversGroupId" : {
          "type" : "string",
          "description" : "Approvers Accessprofile Identifier. Whoever belongs to the selected access profile will be considered as Approvers"
        },
        "approvalMode" : {
          "type" : "string",
          "description" : "Only possible value is anyone. This implies that, any one user associated with the approvers access profile can approve or reject the requests. The requester need not wait for the approval of each approver in the approvers group."
        },
        "approvedEmailConfiguration" : {
          "description" : "Configure Approved email template content. Configured Content would be sent to Requester once the approval request has been approved.",
          "$ref" : "#/definitions/EmailConfiguration"
        },
        "rejectedEmailConfiguration" : {
          "description" : "Configure Rejected email template content. Configured Content would be sent to Requester once the approval request has been approved.",
          "$ref" : "#/definitions/EmailConfiguration"
        },
        "initiateApprovalRequestEmailConfiguration" : {
          "description" : "Configure Initiate request email template content. Configured Content would be sent to Approvers when the approval request has been generated.",
          "$ref" : "#/definitions/EmailConfiguration"
        }
      },
      "description" : "This model contains details about an ApprovalConfiguration in API Gateway"
    },
    "EmailConfiguration" : {
      "type" : "object",
      "properties" : {
        "emailSubject" : {
          "type" : "string",
          "description" : "Email Subject"
        },
        "emailContent" : {
          "type" : "string",
          "description" : "Email Content"
        },
        "enabled" : {
          "type" : "boolean",
          "description" : "true/false. Email would be sent to user only when enabled value is true."
        },
        "requestType" : {
          "type" : "string",
          "description" : "Request Type. Value would be any of initiated, approved or rejected."
        }
      },
      "description" : "This model contains details about an EmailConfiguration configured in Approvals of API Gateway"
    }
  }
}