<?xml version="1.0" encoding="UTF-8"?><config>
<autoConfig>
  <jdbc>
    <poolAliasList>
        <poolAlias alias="MyAlias" updateIfExists="true" destroyOnShutdown="true">
			<depends>
				<functionalAlias alias="FuncAlias_DBA" />
				<!-- One or more functional aliases can be defined that must exist
					before this pool alias will be created. The initial use-case
					is that a DBA-level pair of aliases is used to automatically
					create a new database via WxDbSetup. The second pair of
					user-level aliases is then used to access this database. -->
			</depends>
            <description></description>
            <driverAlias>DataDirect Connect JDBC SQL Server Driver</driverAlias>
            <!-- driver Alias
                    * DataDirect Connect JDBC SQL Server Driver
                    * DataDirect Connect JDBC DB2 Driver
                    * DataDirect Connect JDBC Oracle Driver
            -->
            <databaseUrl>jdbc:wm:sqlserver://localhost:1433;databaseName=WEBMDB</databaseUrl>
            <userId>WEBM</userId>
            <password>manage</password>
            <connections>
                <minConnections>0</minConnections>
                <maxConnections>10</maxConnections>
                <availableConnectionsWarningThreshold>0</availableConnectionsWarningThreshold>
                <waitingThreadThresholdCount>0</waitingThreadThresholdCount>
                <idleTimeout>60000</idleTimeout>  <!-- in milliseconds -->
            </connections>
            <diagnostics>
                <spy enable="false">
                    <attributes></attributes>
                </spy>
                <snoop enable="false">
                    <attributes></attributes>
                </snoop>
            </diagnostics>
        </poolAlias>
    </poolAliasList>
	<functionalAliasList>
		<functionalAlias alias="MyAlias" updateIfExists="true" destroyOnShutdown="true">
			<pool>local</pool>
			<description>My own alias</description>
			
			<!-- Within one "executeSql" block, processing first runs all files and
				then all contents. If a content is defined between two files, it will 
				still not executed between those files but after them. If a certain 
				order is required that switches between files and content, this can be 
				achieved by splitting things up into multiple executeSql block.
				
				It is perfectly ok, to have	more than one "executeSql" block to be executed 
				at startup or shutdown. 
				
				It is also possible to have one given "executeSql" block be executed at
				startup and shutdown.
				
				By default, processing (globally and within a single "executeSql" block) 
				is stopped if an errors occurs. This can be	changed by setting the 
				"stopOnError" attribute to false.
				
				SQL files and content may contain variable interpolators that will be
				resolved within the package. Also, encrypted values can be specified
				directly using the standard syntax ("[[encrypted:handleForValue]]").
			-->
			<executeSqlList stopOnError="true">
				<executeSql runOnStartup="true" runOnShutdown="false" stopOnError="true">
					<file>./packages/Demo/resources/db/createTablespaces.sql</file>
					<file>./packages/Demo/resources/db/createUser.sql</file>
					<content>-- Each content block (and also file) is executed as a separate transaction</content>
					<content>-- So it can make sense to have multiple instances of either</content>
				</executeSql>
				<executeSql runOnStartup="true" stopOnError="false">
					<file>./packages/Demo/resources/db/createDatabase.sql</file>
					<file>./packages/Demo/resources/db/createFunctions.sql</file>
					<content></content>
				</executeSql>
				<executeSql runOnShutdown="true">
					<file>./packages/Demo/resources/db/dropUser.sql</file>
					<file>./packages/Demo/resources/db/dropDatabase.sql</file>
					<content></content>
				</executeSql>
			</executeSqlList>
		</functionalAlias>
	</functionalAliasList>
  </jdbc>

</autoConfig>
</config>
